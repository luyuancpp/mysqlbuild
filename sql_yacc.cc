
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.4.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Using locations.  */
#define YYLSP_NEEDED 1



/* Copy the first part of user declarations.  */

/* Line 189 of yacc.c  */
#line 31 "sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql-common/json_dom.h"
#include "sql-common/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"                     // Sql_cmd_uninstall_component
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa/sql_cmd_xa.h"                   // Sql_cmd_xa...
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)

#define CONTEXTUALIZE_VIEW(x)                           \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
    if (pc.finalize_query_expression())                                 \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0 ||
      native_strcasecmp(national_charset_info->csname, "utf8mb3") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}

void warn_on_deprecated_user_defined_collation(
    THD *thd, const LEX_STRING collation_name) {
  if (collation_name.length == 0)
    return;
  CHARSET_INFO *collation = mysqld_collation_get_by_name(collation_name.str);
  if (collation && !(collation->state & MY_CS_COMPILED)) {
    push_warning_printf(thd, Sql_condition::SL_WARNING,
                        ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS,
                        ER_THD(thd, ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS),
                        collation->m_coll_name);
  }
}



/* Line 189 of yacc.c  */
#line 557 "y.tab.c"

/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     OBSOLETE_TOKEN_271 = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT_SYM = 289,
     BINARY_SYM = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND_SYM = 293,
     BIT_OR_SYM = 294,
     BIT_SYM = 295,
     BIT_XOR_SYM = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     ENCRYPTION_SYM = 339,
     CONCURRENT = 340,
     CONDITION_SYM = 341,
     CONNECTION_SYM = 342,
     CONSISTENT_SYM = 343,
     CONSTRAINT = 344,
     CONSTRAINT_CATALOG_SYM = 345,
     CONSTRAINT_NAME_SYM = 346,
     CONSTRAINT_SCHEMA_SYM = 347,
     CONTAINS_SYM = 348,
     CONTEXT_SYM = 349,
     CONTINUE_SYM = 350,
     CONVERT_SYM = 351,
     COUNT_SYM = 352,
     CPU_SYM = 353,
     CREATE = 354,
     CROSS = 355,
     CUBE_SYM = 356,
     CURDATE = 357,
     CURRENT_SYM = 358,
     CURRENT_USER = 359,
     CURSOR_SYM = 360,
     CURSOR_NAME_SYM = 361,
     CURTIME = 362,
     DATABASE = 363,
     DATABASES = 364,
     DATAFILE_SYM = 365,
     DATA_SYM = 366,
     DATETIME_SYM = 367,
     DATE_ADD_INTERVAL = 368,
     DATE_SUB_INTERVAL = 369,
     DATE_SYM = 370,
     DAY_HOUR_SYM = 371,
     DAY_MICROSECOND_SYM = 372,
     DAY_MINUTE_SYM = 373,
     DAY_SECOND_SYM = 374,
     DAY_SYM = 375,
     DEALLOCATE_SYM = 376,
     DECIMAL_NUM = 377,
     DECIMAL_SYM = 378,
     DECLARE_SYM = 379,
     DEFAULT_SYM = 380,
     DEFAULT_AUTH_SYM = 381,
     DEFINER_SYM = 382,
     DELAYED_SYM = 383,
     DELAY_KEY_WRITE_SYM = 384,
     DELETE_SYM = 385,
     DESC = 386,
     DESCRIBE = 387,
     OBSOLETE_TOKEN_388 = 388,
     DETERMINISTIC_SYM = 389,
     DIAGNOSTICS_SYM = 390,
     DIRECTORY_SYM = 391,
     DISABLE_SYM = 392,
     DISCARD_SYM = 393,
     DISK_SYM = 394,
     DISTINCT = 395,
     DIV_SYM = 396,
     DOUBLE_SYM = 397,
     DO_SYM = 398,
     DROP = 399,
     DUAL_SYM = 400,
     DUMPFILE = 401,
     DUPLICATE_SYM = 402,
     DYNAMIC_SYM = 403,
     EACH_SYM = 404,
     ELSE = 405,
     ELSEIF_SYM = 406,
     ENABLE_SYM = 407,
     ENCLOSED = 408,
     END = 409,
     ENDS_SYM = 410,
     END_OF_INPUT = 411,
     ENGINES_SYM = 412,
     ENGINE_SYM = 413,
     ENUM_SYM = 414,
     EQ = 415,
     EQUAL_SYM = 416,
     ERROR_SYM = 417,
     ERRORS = 418,
     ESCAPED = 419,
     ESCAPE_SYM = 420,
     EVENTS_SYM = 421,
     EVENT_SYM = 422,
     EVERY_SYM = 423,
     EXCHANGE_SYM = 424,
     EXECUTE_SYM = 425,
     EXISTS = 426,
     EXIT_SYM = 427,
     EXPANSION_SYM = 428,
     EXPIRE_SYM = 429,
     EXPORT_SYM = 430,
     EXTENDED_SYM = 431,
     EXTENT_SIZE_SYM = 432,
     EXTRACT_SYM = 433,
     FALSE_SYM = 434,
     FAST_SYM = 435,
     FAULTS_SYM = 436,
     FETCH_SYM = 437,
     FILE_SYM = 438,
     FILE_BLOCK_SIZE_SYM = 439,
     FILTER_SYM = 440,
     FIRST_SYM = 441,
     FIXED_SYM = 442,
     FLOAT_NUM = 443,
     FLOAT_SYM = 444,
     FLUSH_SYM = 445,
     FOLLOWS_SYM = 446,
     FORCE_SYM = 447,
     FOREIGN = 448,
     FOR_SYM = 449,
     FORMAT_SYM = 450,
     FOUND_SYM = 451,
     FROM = 452,
     FULL = 453,
     FULLTEXT_SYM = 454,
     FUNCTION_SYM = 455,
     GE = 456,
     GENERAL = 457,
     GENERATED = 458,
     GROUP_REPLICATION = 459,
     GEOMETRYCOLLECTION_SYM = 460,
     GEOMETRY_SYM = 461,
     GET_FORMAT = 462,
     GET_SYM = 463,
     GLOBAL_SYM = 464,
     GRANT = 465,
     GRANTS = 466,
     GROUP_SYM = 467,
     GROUP_CONCAT_SYM = 468,
     GT_SYM = 469,
     HANDLER_SYM = 470,
     HASH_SYM = 471,
     HAVING = 472,
     HELP_SYM = 473,
     HEX_NUM = 474,
     HIGH_PRIORITY = 475,
     HOST_SYM = 476,
     HOSTS_SYM = 477,
     HOUR_MICROSECOND_SYM = 478,
     HOUR_MINUTE_SYM = 479,
     HOUR_SECOND_SYM = 480,
     HOUR_SYM = 481,
     IDENT = 482,
     IDENTIFIED_SYM = 483,
     IDENT_QUOTED = 484,
     IF = 485,
     IGNORE_SYM = 486,
     IGNORE_SERVER_IDS_SYM = 487,
     IMPORT = 488,
     INDEXES = 489,
     INDEX_SYM = 490,
     INFILE_SYM = 491,
     INITIAL_SIZE_SYM = 492,
     INNER_SYM = 493,
     INOUT_SYM = 494,
     INSENSITIVE_SYM = 495,
     INSERT_SYM = 496,
     INSERT_METHOD = 497,
     INSTANCE_SYM = 498,
     INSTALL_SYM = 499,
     INTERVAL_SYM = 500,
     INTO = 501,
     INT_SYM = 502,
     INVOKER_SYM = 503,
     IN_SYM = 504,
     IO_AFTER_GTIDS = 505,
     IO_BEFORE_GTIDS = 506,
     IO_SYM = 507,
     IPC_SYM = 508,
     IS = 509,
     ISOLATION = 510,
     ISSUER_SYM = 511,
     ITERATE_SYM = 512,
     JOIN_SYM = 513,
     JSON_SEPARATOR_SYM = 514,
     JSON_SYM = 515,
     KEYS = 516,
     KEY_BLOCK_SIZE = 517,
     KEY_SYM = 518,
     KILL_SYM = 519,
     LANGUAGE_SYM = 520,
     LAST_SYM = 521,
     LE = 522,
     LEADING = 523,
     LEAVES = 524,
     LEAVE_SYM = 525,
     LEFT = 526,
     LESS_SYM = 527,
     LEVEL_SYM = 528,
     LEX_HOSTNAME = 529,
     LIKE = 530,
     LIMIT = 531,
     LINEAR_SYM = 532,
     LINES = 533,
     LINESTRING_SYM = 534,
     LIST_SYM = 535,
     LOAD = 536,
     LOCAL_SYM = 537,
     OBSOLETE_TOKEN_538 = 538,
     LOCKS_SYM = 539,
     LOCK_SYM = 540,
     LOGFILE_SYM = 541,
     LOGS_SYM = 542,
     LONGBLOB_SYM = 543,
     LONGTEXT_SYM = 544,
     LONG_NUM = 545,
     LONG_SYM = 546,
     LOOP_SYM = 547,
     LOW_PRIORITY = 548,
     LT = 549,
     MASTER_AUTO_POSITION_SYM = 550,
     MASTER_BIND_SYM = 551,
     MASTER_CONNECT_RETRY_SYM = 552,
     MASTER_DELAY_SYM = 553,
     MASTER_HOST_SYM = 554,
     MASTER_LOG_FILE_SYM = 555,
     MASTER_LOG_POS_SYM = 556,
     MASTER_PASSWORD_SYM = 557,
     MASTER_PORT_SYM = 558,
     MASTER_RETRY_COUNT_SYM = 559,
     MASTER_SSL_CAPATH_SYM = 561,
     MASTER_TLS_VERSION_SYM = 562,
     MASTER_SSL_CA_SYM = 563,
     MASTER_SSL_CERT_SYM = 564,
     MASTER_SSL_CIPHER_SYM = 565,
     MASTER_SSL_CRL_SYM = 566,
     MASTER_SSL_CRLPATH_SYM = 567,
     MASTER_SSL_KEY_SYM = 568,
     MASTER_SSL_SYM = 569,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
     MASTER_SYM = 571,
     MASTER_USER_SYM = 572,
     MASTER_HEARTBEAT_PERIOD_SYM = 573,
     MATCH = 574,
     MAX_CONNECTIONS_PER_HOUR = 575,
     MAX_QUERIES_PER_HOUR = 576,
     MAX_ROWS = 577,
     MAX_SIZE_SYM = 578,
     MAX_SYM = 579,
     MAX_UPDATES_PER_HOUR = 580,
     MAX_USER_CONNECTIONS_SYM = 581,
     MAX_VALUE_SYM = 582,
     MEDIUMBLOB_SYM = 583,
     MEDIUMINT_SYM = 584,
     MEDIUMTEXT_SYM = 585,
     MEDIUM_SYM = 586,
     MEMORY_SYM = 587,
     MERGE_SYM = 588,
     MESSAGE_TEXT_SYM = 589,
     MICROSECOND_SYM = 590,
     MIGRATE_SYM = 591,
     MINUTE_MICROSECOND_SYM = 592,
     MINUTE_SECOND_SYM = 593,
     MINUTE_SYM = 594,
     MIN_ROWS = 595,
     MIN_SYM = 596,
     MODE_SYM = 597,
     MODIFIES_SYM = 598,
     MODIFY_SYM = 599,
     MOD_SYM = 600,
     MONTH_SYM = 601,
     MULTILINESTRING_SYM = 602,
     MULTIPOINT_SYM = 603,
     MULTIPOLYGON_SYM = 604,
     MUTEX_SYM = 605,
     MYSQL_ERRNO_SYM = 606,
     NAMES_SYM = 607,
     NAME_SYM = 608,
     NATIONAL_SYM = 609,
     NATURAL = 610,
     NCHAR_STRING = 611,
     NCHAR_SYM = 612,
     NDBCLUSTER_SYM = 613,
     NE = 614,
     NEG = 615,
     NEVER_SYM = 616,
     NEW_SYM = 617,
     NEXT_SYM = 618,
     NODEGROUP_SYM = 619,
     NONE_SYM = 620,
     NOT2_SYM = 621,
     NOT_SYM = 622,
     NOW_SYM = 623,
     NO_SYM = 624,
     NO_WAIT_SYM = 625,
     NO_WRITE_TO_BINLOG = 626,
     NULL_SYM = 627,
     NUM = 628,
     NUMBER_SYM = 629,
     NUMERIC_SYM = 630,
     NVARCHAR_SYM = 631,
     OFFSET_SYM = 632,
     ON_SYM = 633,
     ONE_SYM = 634,
     ONLY_SYM = 635,
     OPEN_SYM = 636,
     OPTIMIZE = 637,
     OPTIMIZER_COSTS_SYM = 638,
     OPTIONS_SYM = 639,
     OPTION = 640,
     OPTIONALLY = 641,
     OR2_SYM = 642,
     ORDER_SYM = 643,
     OR_OR_SYM = 644,
     OR_SYM = 645,
     OUTER_SYM = 646,
     OUTFILE = 647,
     OUT_SYM = 648,
     OWNER_SYM = 649,
     PACK_KEYS_SYM = 650,
     PAGE_SYM = 651,
     PARAM_MARKER = 652,
     PARSER_SYM = 653,
     OBSOLETE_TOKEN_654 = 654,
     PARTIAL = 655,
     PARTITION_SYM = 656,
     PARTITIONS_SYM = 657,
     PARTITIONING_SYM = 658,
     PASSWORD = 659,
     PHASE_SYM = 660,
     PLUGIN_DIR_SYM = 661,
     PLUGIN_SYM = 662,
     PLUGINS_SYM = 663,
     POINT_SYM = 664,
     POLYGON_SYM = 665,
     PORT_SYM = 666,
     POSITION_SYM = 667,
     PRECEDES_SYM = 668,
     PRECISION = 669,
     PREPARE_SYM = 670,
     PRESERVE_SYM = 671,
     PREV_SYM = 672,
     PRIMARY_SYM = 673,
     PRIVILEGES = 674,
     PROCEDURE_SYM = 675,
     PROCESS = 676,
     PROCESSLIST_SYM = 677,
     PROFILE_SYM = 678,
     PROFILES_SYM = 679,
     PROXY_SYM = 680,
     PURGE = 681,
     QUARTER_SYM = 682,
     QUERY_SYM = 683,
     QUICK = 684,
     RANGE_SYM = 685,
     READS_SYM = 686,
     READ_ONLY_SYM = 687,
     READ_SYM = 688,
     READ_WRITE_SYM = 689,
     REAL_SYM = 690,
     REBUILD_SYM = 691,
     RECOVER_SYM = 692,
     OBSOLETE_TOKEN_693 = 693,
     REDO_BUFFER_SIZE_SYM = 694,
     REDUNDANT_SYM = 695,
     REFERENCES = 696,
     REGEXP = 697,
     RELAY = 698,
     RELAYLOG_SYM = 699,
     RELAY_LOG_FILE_SYM = 700,
     RELAY_LOG_POS_SYM = 701,
     RELAY_THREAD = 702,
     RELEASE_SYM = 703,
     RELOAD = 704,
     REMOVE_SYM = 705,
     RENAME = 706,
     REORGANIZE_SYM = 707,
     REPAIR = 708,
     REPEATABLE_SYM = 709,
     REPEAT_SYM = 710,
     REPLACE_SYM = 711,
     REPLICATION = 712,
     REPLICATE_DO_DB = 713,
     REPLICATE_IGNORE_DB = 714,
     REPLICATE_DO_TABLE = 715,
     REPLICATE_IGNORE_TABLE = 716,
     REPLICATE_WILD_DO_TABLE = 717,
     REPLICATE_WILD_IGNORE_TABLE = 718,
     REPLICATE_REWRITE_DB = 719,
     REQUIRE_SYM = 720,
     RESET_SYM = 721,
     RESIGNAL_SYM = 722,
     RESOURCES = 723,
     RESTORE_SYM = 724,
     RESTRICT = 725,
     RESUME_SYM = 726,
     RETURNED_SQLSTATE_SYM = 727,
     RETURNS_SYM = 728,
     RETURN_SYM = 729,
     REVERSE_SYM = 730,
     REVOKE = 731,
     RIGHT = 732,
     ROLLBACK_SYM = 733,
     ROLLUP_SYM = 734,
     ROTATE_SYM = 735,
     ROUTINE_SYM = 736,
     ROWS_SYM = 737,
     ROW_FORMAT_SYM = 738,
     ROW_SYM = 739,
     ROW_COUNT_SYM = 740,
     RTREE_SYM = 741,
     SAVEPOINT_SYM = 742,
     SCHEDULE_SYM = 743,
     SCHEMA_NAME_SYM = 744,
     SECOND_MICROSECOND_SYM = 745,
     SECOND_SYM = 746,
     SECURITY_SYM = 747,
     SELECT_SYM = 748,
     SENSITIVE_SYM = 749,
     SEPARATOR_SYM = 750,
     SERIALIZABLE_SYM = 751,
     SERIAL_SYM = 752,
     SESSION_SYM = 753,
     SERVER_SYM = 754,
     OBSOLETE_TOKEN_755 = 755,
     SET_SYM = 756,
     SET_VAR = 757,
     SHARE_SYM = 758,
     SHIFT_LEFT = 759,
     SHIFT_RIGHT = 760,
     SHOW = 761,
     SHUTDOWN = 762,
     SIGNAL_SYM = 763,
     SIGNED_SYM = 764,
     SIMPLE_SYM = 765,
     SLAVE = 766,
     SLOW = 767,
     SMALLINT_SYM = 768,
     SNAPSHOT_SYM = 769,
     SOCKET_SYM = 770,
     SONAME_SYM = 771,
     SOUNDS_SYM = 772,
     SOURCE_SYM = 773,
     SPATIAL_SYM = 774,
     SPECIFIC_SYM = 775,
     SQLEXCEPTION_SYM = 776,
     SQLSTATE_SYM = 777,
     SQLWARNING_SYM = 778,
     SQL_AFTER_GTIDS = 779,
     SQL_AFTER_MTS_GAPS = 780,
     SQL_BEFORE_GTIDS = 781,
     SQL_BIG_RESULT = 782,
     SQL_BUFFER_RESULT = 783,
     OBSOLETE_TOKEN_784 = 784,
     SQL_CALC_FOUND_ROWS = 785,
     SQL_NO_CACHE_SYM = 786,
     SQL_SMALL_RESULT = 787,
     SQL_SYM = 788,
     SQL_THREAD = 789,
     SSL_SYM = 790,
     STACKED_SYM = 791,
     STARTING = 792,
     STARTS_SYM = 793,
     START_SYM = 794,
     STATS_AUTO_RECALC_SYM = 795,
     STATS_PERSISTENT_SYM = 796,
     STATS_SAMPLE_PAGES_SYM = 797,
     STATUS_SYM = 798,
     STDDEV_SAMP_SYM = 799,
     STD_SYM = 800,
     STOP_SYM = 801,
     STORAGE_SYM = 802,
     STORED_SYM = 803,
     STRAIGHT_JOIN = 804,
     STRING_SYM = 805,
     SUBCLASS_ORIGIN_SYM = 806,
     SUBDATE_SYM = 807,
     SUBJECT_SYM = 808,
     SUBPARTITIONS_SYM = 809,
     SUBPARTITION_SYM = 810,
     SUBSTRING = 811,
     SUM_SYM = 812,
     SUPER_SYM = 813,
     SUSPEND_SYM = 814,
     SWAPS_SYM = 815,
     SWITCHES_SYM = 816,
     SYSDATE = 817,
     TABLES = 818,
     TABLESPACE_SYM = 819,
     OBSOLETE_TOKEN_820 = 820,
     TABLE_SYM = 821,
     TABLE_CHECKSUM_SYM = 822,
     TABLE_NAME_SYM = 823,
     TEMPORARY = 824,
     TEMPTABLE_SYM = 825,
     TERMINATED = 826,
     TEXT_STRING = 827,
     TEXT_SYM = 828,
     THAN_SYM = 829,
     THEN_SYM = 830,
     TIMESTAMP_SYM = 831,
     TIMESTAMP_ADD = 832,
     TIMESTAMP_DIFF = 833,
     TIME_SYM = 834,
     TINYBLOB_SYM = 835,
     TINYINT_SYM = 836,
     TINYTEXT_SYN = 837,
     TO_SYM = 838,
     TRAILING = 839,
     TRANSACTION_SYM = 840,
     TRIGGERS_SYM = 841,
     TRIGGER_SYM = 842,
     TRIM = 843,
     TRUE_SYM = 844,
     TRUNCATE_SYM = 845,
     TYPES_SYM = 846,
     TYPE_SYM = 847,
     OBSOLETE_TOKEN_848 = 848,
     ULONGLONG_NUM = 849,
     UNCOMMITTED_SYM = 850,
     UNDEFINED_SYM = 851,
     UNDERSCORE_CHARSET = 852,
     UNDOFILE_SYM = 853,
     UNDO_BUFFER_SIZE_SYM = 854,
     UNDO_SYM = 855,
     UNICODE_SYM = 856,
     UNINSTALL_SYM = 857,
     UNION_SYM = 858,
     UNIQUE_SYM = 859,
     UNKNOWN_SYM = 860,
     UNLOCK_SYM = 861,
     UNSIGNED_SYM = 862,
     UNTIL_SYM = 863,
     UPDATE_SYM = 864,
     UPGRADE_SYM = 865,
     USAGE = 866,
     USER = 867,
     USE_FRM = 868,
     USE_SYM = 869,
     USING = 870,
     UTC_DATE_SYM = 871,
     UTC_TIMESTAMP_SYM = 872,
     UTC_TIME_SYM = 873,
     VALIDATION_SYM = 874,
     VALUES = 875,
     VALUE_SYM = 876,
     VARBINARY_SYM = 877,
     VARCHAR_SYM = 878,
     VARIABLES = 879,
     VARIANCE_SYM = 880,
     VARYING = 881,
     VAR_SAMP_SYM = 882,
     VIEW_SYM = 883,
     VIRTUAL_SYM = 884,
     WAIT_SYM = 885,
     WARNINGS = 886,
     WEEK_SYM = 887,
     WEIGHT_STRING_SYM = 888,
     WHEN_SYM = 889,
     WHERE = 890,
     WHILE_SYM = 891,
     WITH = 892,
     OBSOLETE_TOKEN_893 = 893,
     WITH_ROLLUP_SYM = 894,
     WITHOUT_SYM = 895,
     WORK_SYM = 896,
     WRAPPER_SYM = 897,
     WRITE_SYM = 898,
     X509_SYM = 899,
     XA_SYM = 900,
     XID_SYM = 901,
     XML_SYM = 902,
     XOR = 903,
     YEAR_MONTH_SYM = 904,
     YEAR_SYM = 905,
     ZEROFILL_SYM = 906,
     JSON_UNQUOTED_SEPARATOR_SYM = 907,
     PERSIST_SYM = 908,
     ROLE_SYM = 909,
     ADMIN_SYM = 910,
     INVISIBLE_SYM = 911,
     VISIBLE_SYM = 912,
     EXCEPT_SYM = 913,
     COMPONENT_SYM = 914,
     RECURSIVE_SYM = 915,
     GRAMMAR_SELECTOR_EXPR = 916,
     GRAMMAR_SELECTOR_GCOL = 917,
     GRAMMAR_SELECTOR_PART = 918,
     GRAMMAR_SELECTOR_CTE = 919,
     JSON_OBJECTAGG = 920,
     JSON_ARRAYAGG = 921,
     OF_SYM = 922,
     SKIP_SYM = 923,
     LOCKED_SYM = 924,
     NOWAIT_SYM = 925,
     GROUPING_SYM = 926,
     PERSIST_ONLY_SYM = 927,
     HISTOGRAM_SYM = 928,
     BUCKETS_SYM = 929,
     OBSOLETE_TOKEN_930 = 930,
     CLONE_SYM = 931,
     CUME_DIST_SYM = 932,
     DENSE_RANK_SYM = 933,
     EXCLUDE_SYM = 934,
     FIRST_VALUE_SYM = 935,
     FOLLOWING_SYM = 936,
     GROUPS_SYM = 937,
     LAG_SYM = 938,
     LAST_VALUE_SYM = 939,
     LEAD_SYM = 940,
     NTH_VALUE_SYM = 941,
     NTILE_SYM = 942,
     NULLS_SYM = 943,
     OTHERS_SYM = 944,
     OVER_SYM = 945,
     PERCENT_RANK_SYM = 946,
     PRECEDING_SYM = 947,
     RANK_SYM = 948,
     RESPECT_SYM = 949,
     ROW_NUMBER_SYM = 950,
     TIES_SYM = 951,
     UNBOUNDED_SYM = 952,
     WINDOW_SYM = 953,
     EMPTY_SYM = 954,
     JSON_TABLE_SYM = 955,
     NESTED_SYM = 956,
     ORDINALITY_SYM = 957,
     PATH_SYM = 958,
     HISTORY_SYM = 959,
     REUSE_SYM = 960,
     SRID_SYM = 961,
     THREAD_PRIORITY_SYM = 962,
     RESOURCE_SYM = 963,
     SYSTEM_SYM = 964,
     VCPU_SYM = 965,
     MASTER_PUBLIC_KEY_PATH_SYM = 966,
     GET_MASTER_PUBLIC_KEY_SYM = 967,
     RESTART_SYM = 968,
     DEFINITION_SYM = 969,
     DESCRIPTION_SYM = 970,
     ORGANIZATION_SYM = 971,
     REFERENCE_SYM = 972,
     ACTIVE_SYM = 973,
     INACTIVE_SYM = 974,
     LATERAL_SYM = 975,
     ARRAY_SYM = 976,
     MEMBER_SYM = 977,
     OPTIONAL_SYM = 978,
     SECONDARY_SYM = 979,
     SECONDARY_ENGINE_SYM = 980,
     SECONDARY_LOAD_SYM = 981,
     SECONDARY_UNLOAD_SYM = 982,
     RETAIN_SYM = 983,
     OLD_SYM = 984,
     ENFORCED_SYM = 985,
     OJ_SYM = 986,
     NETWORK_NAMESPACE_SYM = 987,
     RANDOM_SYM = 988,
     MASTER_COMPRESSION_ALGORITHM_SYM = 989,
     MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
     PRIVILEGE_CHECKS_USER_SYM = 991,
     MASTER_TLS_CIPHERSUITES_SYM = 992,
     REQUIRE_ROW_FORMAT_SYM = 993,
     PASSWORD_LOCK_TIME_SYM = 994,
     FAILED_LOGIN_ATTEMPTS_SYM = 995,
     REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
     STREAM_SYM = 997,
     OFF_SYM = 998,
     RETURNING_SYM = 999,
     YYUNDEF = 1150,
     JSON_VALUE_SYM = 1151,
     TLS_SYM = 1152,
     ATTRIBUTE_SYM = 1153,
     ENGINE_ATTRIBUTE_SYM = 1154,
     SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
     SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
     ZONE_SYM = 1157,
     GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
     REPLICA_SYM = 1159,
     REPLICAS_SYM = 1160,
     ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
     GET_SOURCE_PUBLIC_KEY_SYM = 1162,
     SOURCE_AUTO_POSITION_SYM = 1163,
     SOURCE_BIND_SYM = 1164,
     SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
     SOURCE_CONNECT_RETRY_SYM = 1166,
     SOURCE_DELAY_SYM = 1167,
     SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
     SOURCE_HOST_SYM = 1169,
     SOURCE_LOG_FILE_SYM = 1170,
     SOURCE_LOG_POS_SYM = 1171,
     SOURCE_PASSWORD_SYM = 1172,
     SOURCE_PORT_SYM = 1173,
     SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
     SOURCE_RETRY_COUNT_SYM = 1175,
     SOURCE_SSL_SYM = 1176,
     SOURCE_SSL_CA_SYM = 1177,
     SOURCE_SSL_CAPATH_SYM = 1178,
     SOURCE_SSL_CERT_SYM = 1179,
     SOURCE_SSL_CIPHER_SYM = 1180,
     SOURCE_SSL_CRL_SYM = 1181,
     SOURCE_SSL_CRLPATH_SYM = 1182,
     SOURCE_SSL_KEY_SYM = 1183,
     SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
     SOURCE_TLS_CIPHERSUITES_SYM = 1185,
     SOURCE_TLS_VERSION_SYM = 1186,
     SOURCE_USER_SYM = 1187,
     SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
     ST_COLLECT_SYM = 1189,
     KEYRING_SYM = 1190,
     AUTHENTICATION_SYM = 1191,
     FACTOR_SYM = 1192,
     FINISH_SYM = 1193,
     INITIATE_SYM = 1194,
     REGISTRATION_SYM = 1195,
     UNREGISTER_SYM = 1196,
     INITIAL_SYM = 1197,
     CHALLENGE_RESPONSE_SYM = 1198,
     GTID_ONLY_SYM = 1199,
     INTERSECT_SYM = 1200,
     BULK_SYM = 1201,
     URL_SYM = 1202,
     GENERATE_SYM = 1203,
     KEYWORD_USED_AS_IDENT = 1205,
     KEYWORD_USED_AS_KEYWORD = 1206,
     CONDITIONLESS_JOIN = 1207,
     SUBQUERY_AS_EXPR = 1208,
     EMPTY_FROM_CLAUSE = 1209
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE_SYM 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define INTERSECT_SYM 1200
#define BULK_SYM 1201
#define URL_SYM 1202
#define GENERATE_SYM 1203
#define KEYWORD_USED_AS_IDENT 1205
#define KEYWORD_USED_AS_KEYWORD 1206
#define CONDITIONLESS_JOIN 1207
#define SUBQUERY_AS_EXPR 1208
#define EMPTY_FROM_CLAUSE 1209




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 264 of yacc.c  */
#line 2215 "y.tab.c"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1141
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   91123

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  822
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1030
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3242
/* YYNRULES -- Number of states.  */
#define YYNSTATES  5602

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1209

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   819,     2,     2,     2,   807,   802,     2,
     811,   812,   805,   804,   816,   803,   817,   806,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   818,   814,
       2,     2,     2,     2,   815,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   808,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   820,   801,   821,   809,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,     2,   798,   799,   800,   810,   813
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    13,    20,    24,    28,    30,
      31,    36,    39,    40,    42,    44,    46,    48,    50,    52,
      54,    56,    58,    60,    62,    64,    66,    68,    70,    72,
      74,    76,    78,    80,    82,    84,    86,    88,    90,    92,
      94,    96,    98,   100,   102,   104,   106,   108,   110,   112,
     114,   116,   118,   120,   122,   124,   126,   128,   130,   132,
     134,   136,   138,   140,   142,   144,   146,   148,   150,   152,
     154,   156,   158,   160,   162,   164,   166,   168,   170,   172,
     174,   176,   178,   180,   182,   184,   186,   188,   190,   192,
     194,   196,   198,   200,   202,   204,   206,   208,   210,   212,
     214,   216,   218,   220,   222,   224,   226,   228,   230,   232,
     234,   236,   238,   240,   242,   244,   246,   248,   250,   252,
     254,   256,   258,   260,   262,   264,   266,   268,   270,   272,
     274,   276,   278,   280,   282,   284,   286,   288,   290,   292,
     294,   296,   298,   300,   302,   304,   306,   308,   310,   312,
     314,   316,   320,   322,   324,   329,   331,   334,   335,   340,
     341,   344,   348,   350,   353,   354,   358,   360,   363,   364,
     371,   372,   379,   381,   385,   389,   393,   397,   401,   405,
     409,   413,   416,   420,   422,   426,   428,   431,   435,   441,
     449,   452,   456,   458,   462,   466,   469,   473,   475,   479,
     481,   483,   487,   489,   491,   493,   495,   497,   499,   501,
     503,   505,   507,   509,   511,   513,   515,   517,   519,   521,
     523,   525,   527,   529,   531,   533,   535,   537,   539,   541,
     543,   545,   547,   549,   551,   553,   555,   557,   559,   561,
     563,   565,   567,   569,   571,   573,   575,   577,   579,   581,
     583,   585,   587,   591,   595,   599,   603,   607,   611,   615,
     619,   623,   627,   631,   635,   639,   643,   647,   651,   655,
     659,   663,   667,   671,   675,   679,   685,   689,   693,   697,
     701,   705,   709,   713,   717,   721,   723,   724,   726,   730,
     732,   734,   736,   738,   740,   742,   744,   746,   748,   750,
     752,   754,   756,   758,   760,   762,   766,   770,   774,   778,
     779,   783,   793,   800,   808,   818,   823,   834,   835,   842,
     845,   855,   863,   870,   878,   890,   899,   907,   908,   912,
     916,   923,   927,   928,   932,   945,   957,   969,   971,   975,
     978,   981,   984,   987,   990,   993,   996,   997,  1010,  1011,
    1018,  1021,  1022,  1024,  1028,  1030,  1031,  1034,  1035,  1038,
    1039,  1041,  1045,  1050,  1051,  1054,  1055,  1058,  1060,  1062,
    1064,  1066,  1068,  1070,  1072,  1074,  1076,  1078,  1080,  1082,
    1084,  1088,  1090,  1091,  1094,  1095,  1098,  1101,  1104,  1107,
    1110,  1114,  1118,  1120,  1122,  1124,  1127,  1131,  1135,  1139,
    1140,  1144,  1145,  1147,  1151,  1153,  1157,  1158,  1160,  1164,
    1166,  1171,  1172,  1174,  1176,  1178,  1179,  1183,  1186,  1190,
    1191,  1195,  1201,  1207,  1208,  1216,  1217,  1224,  1226,  1228,
    1230,  1234,  1236,  1238,  1240,  1244,  1245,  1247,  1249,  1251,
    1253,  1256,  1258,  1262,  1264,  1266,  1267,  1269,  1270,  1273,
    1277,  1283,  1285,  1287,  1289,  1291,  1293,  1295,  1297,  1299,
    1301,  1303,  1305,  1307,  1309,  1311,  1313,  1317,  1322,  1323,
    1325,  1327,  1329,  1333,  1335,  1339,  1343,  1345,  1348,  1350,
    1352,  1354,  1356,  1360,  1364,  1366,  1368,  1370,  1372,  1374,
    1376,  1378,  1380,  1382,  1384,  1386,  1388,  1390,  1392,  1396,
    1397,  1400,  1402,  1404,  1406,  1408,  1410,  1412,  1414,  1416,
    1418,  1420,  1422,  1424,  1426,  1427,  1433,  1434,  1437,  1438,
    1442,  1443,  1446,  1449,  1452,  1455,  1456,  1463,  1466,  1467,
    1470,  1472,  1474,  1478,  1479,  1480,  1481,  1489,  1490,  1493,
    1496,  1498,  1500,  1501,  1502,  1511,  1512,  1519,  1521,  1524,
    1526,  1529,  1530,  1531,  1538,  1539,  1540,  1547,  1548,  1551,
    1552,  1558,  1559,  1561,  1562,  1568,  1569,  1572,  1573,  1579,
    1584,  1585,  1586,  1595,  1596,  1597,  1606,  1608,  1610,  1612,
    1614,  1616,  1617,  1620,  1621,  1626,  1627,  1629,  1631,  1635,
    1637,  1639,  1641,  1643,  1645,  1647,  1649,  1651,  1653,  1655,
    1657,  1658,  1660,  1662,  1666,  1668,  1670,  1672,  1674,  1676,
    1678,  1680,  1681,  1683,  1685,  1689,  1691,  1692,  1694,  1696,
    1700,  1702,  1704,  1706,  1708,  1710,  1712,  1714,  1715,  1717,
    1719,  1723,  1725,  1727,  1729,  1732,  1734,  1736,  1739,  1743,
    1745,  1749,  1753,  1757,  1761,  1765,  1769,  1773,  1778,  1782,
    1784,  1786,  1790,  1794,  1796,  1798,  1801,  1803,  1806,  1808,
    1809,  1812,  1814,  1817,  1819,  1826,  1833,  1839,  1844,  1850,
    1855,  1861,  1862,  1864,  1865,  1869,  1870,  1873,  1874,  1883,
    1893,  1894,  1896,  1898,  1902,  1903,  1906,  1907,  1911,  1913,
    1917,  1923,  1924,  1929,  1933,  1935,  1937,  1939,  1943,  1945,
    1949,  1950,  1955,  1957,  1961,  1963,  1965,  1966,  1970,  1972,
    1976,  1980,  1981,  1983,  1986,  1988,  1992,  1997,  2001,  2005,
    2009,  2014,  2019,  2023,  2025,  2028,  2030,  2035,  2036,  2038,
    2040,  2043,  2045,  2047,  2049,  2050,  2054,  2056,  2059,  2061,
    2065,  2066,  2068,  2072,  2076,  2080,  2084,  2088,  2092,  2096,
    2100,  2104,  2108,  2112,  2116,  2120,  2124,  2128,  2132,  2136,
    2140,  2144,  2148,  2154,  2156,  2158,  2162,  2167,  2172,  2176,
    2179,  2182,  2186,  2190,  2193,  2197,  2201,  2203,  2205,  2207,
    2212,  2217,  2222,  2224,  2226,  2228,  2230,  2232,  2234,  2236,
    2238,  2240,  2242,  2244,  2246,  2248,  2250,  2254,  2256,  2258,
    2262,  2263,  2265,  2272,  2280,  2288,  2296,  2305,  2309,  2314,
    2315,  2318,  2319,  2321,  2322,  2324,  2327,  2330,  2340,  2341,
    2344,  2345,  2347,  2349,  2353,  2357,  2361,  2363,  2366,  2368,
    2370,  2374,  2377,  2381,  2384,  2387,  2389,  2393,  2397,  2400,
    2404,  2406,  2409,  2412,  2415,  2417,  2420,  2422,  2424,  2426,
    2429,  2433,  2436,  2440,  2443,  2446,  2452,  2458,  2461,  2463,
    2465,  2467,  2469,  2471,  2473,  2475,  2477,  2479,  2481,  2483,
    2486,  2489,  2491,  2494,  2496,  2499,  2503,  2506,  2508,  2510,
    2512,  2514,  2516,  2518,  2521,  2522,  2524,  2526,  2528,  2530,
    2532,  2533,  2535,  2536,  2538,  2540,  2546,  2547,  2551,  2552,
    2555,  2559,  2560,  2562,  2565,  2567,  2569,  2571,  2573,  2577,
    2581,  2585,  2589,  2590,  2592,  2593,  2595,  2596,  2598,  2601,
    2603,  2605,  2608,  2611,  2614,  2619,  2623,  2625,  2629,  2632,
    2634,  2637,  2640,  2643,  2646,  2649,  2652,  2655,  2657,  2661,
    2665,  2667,  2669,  2671,  2673,  2675,  2677,  2679,  2682,  2684,
    2686,  2689,  2691,  2693,  2695,  2696,  2699,  2701,  2703,  2705,
    2707,  2709,  2711,  2712,  2715,  2716,  2718,  2720,  2723,  2726,
    2728,  2731,  2734,  2735,  2737,  2739,  2741,  2745,  2747,  2751,
    2752,  2754,  2755,  2760,  2761,  2763,  2769,  2770,  2774,  2778,
    2780,  2781,  2784,  2787,  2790,  2791,  2795,  2799,  2806,  2813,
    2815,  2817,  2820,  2823,  2826,  2829,  2832,  2834,  2836,  2837,
    2839,  2841,  2843,  2845,  2846,  2848,  2849,  2851,  2853,  2856,
    2858,  2862,  2863,  2865,  2867,  2870,  2872,  2873,  2875,  2877,
    2880,  2882,  2884,  2888,  2891,  2893,  2897,  2901,  2903,  2907,
    2911,  2912,  2914,  2917,  2920,  2922,  2924,  2926,  2928,  2930,
    2934,  2936,  2939,  2945,  2949,  2951,  2953,  2958,  2959,  2961,
    2963,  2967,  2972,  2977,  2978,  2984,  2985,  2991,  2992,  2998,
    2999,  3005,  3006,  3011,  3012,  3023,  3031,  3038,  3045,  3052,
    3057,  3065,  3073,  3080,  3086,  3092,  3098,  3104,  3110,  3116,
    3120,  3124,  3125,  3128,  3137,  3141,  3142,  3145,  3148,  3149,
    3151,  3153,  3156,  3159,  3162,  3165,  3171,  3175,  3179,  3183,
    3187,  3193,  3198,  3202,  3207,  3212,  3215,  3218,  3221,  3222,
    3225,  3228,  3230,  3233,  3236,  3239,  3242,  3246,  3247,  3251,
    3253,  3258,  3259,  3263,  3264,  3267,  3268,  3270,  3272,  3275,
    3277,  3281,  3283,  3286,  3287,  3289,  3291,  3295,  3298,  3301,
    3305,  3312,  3318,  3322,  3327,  3332,  3337,  3342,  3348,  3353,
    3357,  3361,  3370,  3378,  3383,  3388,  3390,  3392,  3393,  3395,
    3398,  3401,  3403,  3405,  3407,  3411,  3415,  3417,  3421,  3423,
    3427,  3434,  3440,  3443,  3450,  3456,  3461,  3466,  3470,  3474,
    3478,  3482,  3485,  3488,  3495,  3504,  3510,  3516,  3521,  3526,
    3531,  3535,  3541,  3547,  3553,  3559,  3561,  3565,  3567,  3569,
    3571,  3572,  3574,  3576,  3579,  3582,  3586,  3588,  3590,  3594,
    3596,  3598,  3599,  3601,  3602,  3604,  3605,  3607,  3609,  3610,
    3613,  3615,  3616,  3618,  3620,  3622,  3625,  3628,  3631,  3632,
    3634,  3636,  3640,  3642,  3644,  3646,  3650,  3654,  3658,  3660,
    3662,  3667,  3668,  3669,  3681,  3685,  3686,  3688,  3690,  3694,
    3698,  3701,  3704,  3705,  3709,  3710,  3714,  3715,  3719,  3720,
    3724,  3725,  3727,  3729,  3733,  3735,  3737,  3738,  3741,  3743,
    3747,  3751,  3755,  3757,  3762,  3763,  3765,  3767,  3773,  3774,
    3776,  3778,  3781,  3783,  3785,  3787,  3793,  3794,  3798,  3802,
    3803,  3809,  3814,  3817,  3822,  3823,  3825,  3827,  3830,  3832,
    3834,  3836,  3838,  3840,  3843,  3848,  3849,  3851,  3853,  3854,
    3859,  3863,  3867,  3873,  3875,  3879,  3883,  3889,  3897,  3899,
    3903,  3906,  3908,  3910,  3919,  3925,  3927,  3931,  3935,  3940,
    3941,  3946,  3947,  3950,  3952,  3955,  3957,  3961,  3964,  3968,
    3972,  3976,  3981,  3983,  3985,  3990,  3995,  4000,  4004,  4008,
    4010,  4012,  4014,  4024,  4033,  4034,  4036,  4039,  4041,  4043,
    4045,  4049,  4052,  4055,  4056,  4058,  4061,  4063,  4065,  4067,
    4070,  4072,  4076,  4081,  4086,  4088,  4090,  4093,  4094,  4096,
    4099,  4101,  4105,  4107,  4109,  4111,  4114,  4115,  4118,  4121,
    4123,  4125,  4126,  4129,  4133,  4137,  4141,  4144,  4148,  4153,
    4157,  4162,  4166,  4171,  4173,  4177,  4182,  4186,  4191,  4193,
    4197,  4202,  4208,  4216,  4223,  4232,  4239,  4245,  4252,  4257,
    4261,  4267,  4272,  4279,  4283,  4288,  4290,  4292,  4293,  4297,
    4301,  4305,  4309,  4313,  4317,  4323,  4329,  4333,  4337,  4341,
    4345,  4349,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,
    4369,  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,
    4389,  4391,  4393,  4395,  4397,  4399,  4403,  4405,  4407,  4409,
    4411,  4413,  4415,  4419,  4422,  4425,  4428,  4431,  4433,  4437,
    4443,  4450,  4453,  4458,  4466,  4469,  4477,  4487,  4500,  4506,
    4513,  4520,  4525,  4530,  4536,  4540,  4544,  4545,  4547,  4552,
    4559,  4562,  4567,  4572,  4577,  4588,  4595,  4604,  4613,  4620,
    4625,  4630,  4637,  4642,  4647,  4652,  4659,  4664,  4672,  4680,
    4688,  4695,  4702,  4709,  4716,  4720,  4725,  4732,  4741,  4744,
    4747,  4756,  4765,  4772,  4779,  4781,  4788,  4795,  4804,  4813,
    4820,  4829,  4836,  4839,  4848,  4857,  4860,  4863,  4866,  4867,
    4870,  4875,  4880,  4885,  4890,  4894,  4903,  4910,  4919,  4924,
    4931,  4936,  4943,  4952,  4957,  4961,  4968,  4973,  4980,  4985,
    4993,  5001,  5012,  5014,  5019,  5024,  5029,  5034,  5039,  5046,
    5051,  5056,  5063,  5066,  5070,  5071,  5076,  5077,  5081,  5082,
    5084,  5086,  5090,  5093,  5095,  5097,  5103,  5110,  5116,  5122,
    5128,  5136,  5142,  5149,  5155,  5162,  5168,  5175,  5181,  5188,
    5194,  5201,  5207,  5213,  5219,  5225,  5231,  5238,  5247,  5252,
    5257,  5262,  5267,  5272,  5278,  5286,  5294,  5301,  5308,  5318,
    5319,  5323,  5325,  5327,  5329,  5331,  5334,  5335,  5338,  5339,
    5342,  5345,  5346,  5349,  5352,  5353,  5355,  5358,  5360,  5362,
    5364,  5368,  5373,  5374,  5376,  5377,  5381,  5382,  5386,  5387,
    5391,  5393,  5395,  5398,  5401,  5404,  5409,  5412,  5417,  5419,
    5422,  5425,  5428,  5433,  5434,  5438,  5441,  5444,  5448,  5450,
    5452,  5454,  5459,  5464,  5467,  5472,  5473,  5475,  5476,  5479,
    5480,  5484,  5488,  5490,  5493,  5496,  5500,  5503,  5505,  5508,
    5510,  5513,  5515,  5517,  5520,  5523,  5526,  5528,  5530,  5533,
    5535,  5537,  5539,  5541,  5543,  5545,  5547,  5548,  5550,  5552,
    5556,  5558,  5562,  5564,  5568,  5569,  5571,  5572,  5575,  5580,
    5586,  5588,  5590,  5595,  5597,  5599,  5605,  5613,  5619,  5627,
    5631,  5635,  5639,  5644,  5649,  5651,  5654,  5657,  5659,  5663,
    5667,  5668,  5670,  5671,  5673,  5674,  5676,  5681,  5683,  5685,
    5687,  5689,  5691,  5693,  5697,  5703,  5707,  5711,  5716,  5720,
    5724,  5728,  5733,  5742,  5747,  5749,  5753,  5757,  5765,  5770,
    5771,  5773,  5774,  5776,  5778,  5781,  5783,  5786,  5790,  5794,
    5796,  5798,  5801,  5802,  5805,  5809,  5813,  5815,  5817,  5824,
    5831,  5833,  5836,  5837,  5839,  5841,  5842,  5844,  5846,  5848,
    5850,  5854,  5856,  5858,  5862,  5864,  5866,  5868,  5870,  5872,
    5874,  5876,  5878,  5880,  5882,  5884,  5886,  5888,  5890,  5892,
    5894,  5896,  5898,  5900,  5902,  5904,  5906,  5908,  5910,  5912,
    5913,  5915,  5916,  5919,  5920,  5922,  5923,  5925,  5928,  5929,
    5932,  5935,  5939,  5943,  5945,  5950,  5951,  5955,  5957,  5961,
    5962,  5965,  5967,  5971,  5975,  5976,  5981,  5985,  5987,  5988,
    5990,  5994,  5996,  5999,  6000,  6002,  6006,  6010,  6012,  6013,
    6015,  6017,  6019,  6020,  6022,  6025,  6027,  6031,  6035,  6037,
    6039,  6041,  6043,  6045,  6046,  6049,  6051,  6053,  6055,  6057,
    6059,  6061,  6063,  6065,  6067,  6069,  6071,  6073,  6075,  6077,
    6079,  6081,  6083,  6085,  6087,  6089,  6091,  6093,  6095,  6097,
    6101,  6103,  6106,  6108,  6111,  6117,  6120,  6122,  6125,  6132,
    6139,  6144,  6151,  6156,  6162,  6167,  6172,  6178,  6183,  6188,
    6193,  6199,  6205,  6210,  6217,  6222,  6224,  6228,  6230,  6234,
    6235,  6238,  6239,  6243,  6244,  6246,  6247,  6249,  6251,  6255,
    6257,  6259,  6269,  6280,  6289,  6296,  6304,  6311,  6312,  6314,
    6316,  6318,  6320,  6322,  6323,  6325,  6327,  6331,  6336,  6338,
    6342,  6347,  6351,  6353,  6356,  6358,  6361,  6363,  6365,  6369,
    6371,  6375,  6377,  6379,  6381,  6382,  6384,  6388,  6393,  6394,
    6396,  6400,  6402,  6404,  6406,  6407,  6411,  6412,  6418,  6429,
    6430,  6432,  6436,  6438,  6442,  6443,  6445,  6456,  6464,  6473,
    6474,  6477,  6478,  6481,  6483,  6485,  6487,  6491,  6492,  6494,
    6495,  6497,  6499,  6503,  6505,  6507,  6510,  6513,  6516,  6518,
    6520,  6522,  6524,  6525,  6529,  6533,  6539,  6545,  6550,  6556,
    6562,  6565,  6570,  6575,  6580,  6588,  6592,  6596,  6599,  6606,
    6614,  6622,  6626,  6633,  6640,  6644,  6648,  6651,  6657,  6662,
    6666,  6671,  6675,  6679,  6682,  6685,  6690,  6697,  6703,  6708,
    6713,  6717,  6722,  6727,  6732,  6737,  6742,  6747,  6752,  6757,
    6762,  6767,  6769,  6771,  6773,  6775,  6776,  6778,  6779,  6782,
    6783,  6785,  6786,  6788,  6789,  6791,  6793,  6796,  6798,  6800,
    6801,  6804,  6805,  6808,  6809,  6812,  6814,  6818,  6822,  6824,
    6826,  6828,  6830,  6832,  6836,  6838,  6840,  6841,  6845,  6848,
    6850,  6851,  6853,  6855,  6856,  6861,  6862,  6867,  6869,  6870,
    6874,  6875,  6879,  6883,  6885,  6888,  6891,  6894,  6897,  6900,
    6904,  6906,  6908,  6910,  6912,  6914,  6916,  6917,  6919,  6920,
    6924,  6928,  6932,  6934,  6935,  6938,  6940,  6944,  6948,  6949,
    6954,  6955,  6960,  6961,  6965,  6966,  6968,  6969,  6972,  6973,
    6977,  6981,  6984,  6987,  6991,  6992,  6994,  6996,  6999,  7022,
    7024,  7026,  7027,  7029,  7030,  7032,  7033,  7035,  7037,  7039,
    7041,  7042,  7045,  7048,  7049,  7054,  7055,  7057,  7059,  7061,
    7062,  7065,  7068,  7070,  7074,  7079,  7083,  7087,  7088,  7091,
    7094,  7096,  7100,  7104,  7105,  7110,  7111,  7115,  7117,  7119,
    7120,  7124,  7127,  7131,  7133,  7135,  7138,  7139,  7142,  7146,
    7148,  7152,  7153,  7157,  7159,  7161,  7164,  7167,  7169,  7171,
    7173,  7175,  7177,  7180,  7183,  7185,  7187,  7189,  7191,  7193,
    7195,  7197,  7199,  7201,  7203,  7206,  7209,  7211,  7213,  7215,
    7217,  7219,  7221,  7223,  7225,  7228,  7231,  7234,  7235,  7237,
    7239,  7243,  7249,  7252,  7254,  7256,  7258,  7260,  7262,  7266,
    7272,  7274,  7278,  7281,  7286,  7288,  7290,  7292,  7294,  7296,
    7298,  7300,  7302,  7304,  7306,  7308,  7310,  7312,  7314,  7316,
    7318,  7320,  7322,  7324,  7326,  7328,  7330,  7332,  7334,  7336,
    7338,  7342,  7344,  7347,  7349,  7353,  7355,  7357,  7359,  7361,
    7363,  7365,  7367,  7369,  7371,  7373,  7375,  7377,  7379,  7381,
    7383,  7385,  7387,  7389,  7391,  7393,  7395,  7397,  7399,  7401,
    7403,  7405,  7407,  7409,  7411,  7413,  7415,  7417,  7419,  7421,
    7423,  7425,  7427,  7429,  7431,  7433,  7435,  7437,  7439,  7441,
    7443,  7445,  7447,  7449,  7451,  7453,  7455,  7457,  7459,  7461,
    7463,  7465,  7467,  7469,  7471,  7473,  7475,  7477,  7479,  7481,
    7483,  7485,  7487,  7489,  7491,  7493,  7495,  7497,  7499,  7501,
    7503,  7505,  7507,  7509,  7511,  7513,  7515,  7517,  7519,  7521,
    7523,  7525,  7527,  7529,  7531,  7533,  7535,  7537,  7539,  7541,
    7543,  7545,  7547,  7549,  7551,  7553,  7555,  7557,  7559,  7561,
    7563,  7565,  7567,  7569,  7571,  7573,  7575,  7577,  7579,  7581,
    7583,  7585,  7587,  7589,  7591,  7593,  7595,  7597,  7599,  7601,
    7603,  7605,  7607,  7609,  7611,  7613,  7615,  7617,  7619,  7621,
    7623,  7625,  7627,  7629,  7631,  7633,  7635,  7637,  7639,  7641,
    7643,  7645,  7647,  7649,  7651,  7653,  7655,  7657,  7659,  7661,
    7663,  7665,  7667,  7669,  7671,  7673,  7675,  7677,  7679,  7681,
    7683,  7685,  7687,  7689,  7691,  7693,  7695,  7697,  7699,  7701,
    7703,  7705,  7707,  7709,  7711,  7713,  7715,  7717,  7719,  7721,
    7723,  7725,  7727,  7729,  7731,  7733,  7735,  7737,  7739,  7741,
    7743,  7745,  7747,  7749,  7751,  7753,  7755,  7757,  7759,  7761,
    7763,  7765,  7767,  7769,  7771,  7773,  7775,  7777,  7779,  7781,
    7783,  7785,  7787,  7789,  7791,  7793,  7795,  7797,  7799,  7801,
    7803,  7805,  7807,  7809,  7811,  7813,  7815,  7817,  7819,  7821,
    7823,  7825,  7827,  7829,  7831,  7833,  7835,  7837,  7839,  7841,
    7843,  7845,  7847,  7849,  7851,  7853,  7855,  7857,  7859,  7861,
    7863,  7865,  7867,  7869,  7871,  7873,  7875,  7877,  7879,  7881,
    7883,  7885,  7887,  7889,  7891,  7893,  7895,  7897,  7899,  7901,
    7903,  7905,  7907,  7909,  7911,  7913,  7915,  7917,  7919,  7921,
    7923,  7925,  7927,  7929,  7931,  7933,  7935,  7937,  7939,  7941,
    7943,  7945,  7947,  7949,  7951,  7953,  7955,  7957,  7959,  7961,
    7963,  7965,  7967,  7969,  7971,  7973,  7975,  7977,  7979,  7981,
    7983,  7985,  7987,  7989,  7991,  7993,  7995,  7997,  7999,  8001,
    8003,  8005,  8007,  8009,  8011,  8013,  8015,  8017,  8019,  8021,
    8023,  8025,  8027,  8029,  8031,  8033,  8035,  8037,  8039,  8041,
    8043,  8045,  8047,  8049,  8051,  8053,  8055,  8057,  8059,  8061,
    8063,  8065,  8067,  8069,  8071,  8073,  8075,  8077,  8079,  8081,
    8083,  8085,  8087,  8089,  8091,  8093,  8095,  8097,  8099,  8101,
    8103,  8105,  8107,  8109,  8111,  8113,  8115,  8117,  8119,  8121,
    8123,  8125,  8127,  8129,  8131,  8133,  8135,  8137,  8139,  8141,
    8143,  8145,  8147,  8149,  8151,  8153,  8155,  8157,  8159,  8161,
    8163,  8165,  8167,  8169,  8171,  8173,  8175,  8177,  8179,  8181,
    8183,  8185,  8187,  8189,  8191,  8193,  8195,  8197,  8199,  8201,
    8203,  8205,  8207,  8209,  8211,  8213,  8215,  8217,  8219,  8221,
    8223,  8225,  8227,  8229,  8231,  8233,  8235,  8237,  8239,  8241,
    8243,  8245,  8247,  8249,  8251,  8253,  8255,  8257,  8259,  8261,
    8263,  8265,  8267,  8269,  8271,  8273,  8275,  8277,  8279,  8281,
    8283,  8285,  8287,  8289,  8291,  8293,  8295,  8297,  8299,  8301,
    8303,  8305,  8307,  8309,  8311,  8313,  8315,  8317,  8319,  8321,
    8323,  8325,  8327,  8329,  8331,  8333,  8335,  8337,  8339,  8341,
    8343,  8346,  8349,  8352,  8355,  8361,  8367,  8375,  8383,  8387,
    8391,  8395,  8402,  8409,  8416,  8421,  8422,  8425,  8430,  8437,
    8439,  8443,  8445,  8448,  8451,  8452,  8455,  8457,  8461,  8464,
    8466,  8468,  8470,  8472,  8474,  8476,  8477,  8479,  8481,  8483,
    8484,  8487,  8490,  8493,  8494,  8497,  8500,  8503,  8506,  8509,
    8513,  8517,  8522,  8529,  8532,  8536,  8540,  8543,  8545,  8549,
    8553,  8555,  8559,  8562,  8565,  8567,  8568,  8571,  8575,  8576,
    8579,  8582,  8585,  8588,  8591,  8594,  8596,  8598,  8600,  8602,
    8604,  8606,  8608,  8610,  8611,  8616,  8621,  8623,  8625,  8627,
    8631,  8635,  8637,  8639,  8642,  8645,  8646,  8650,  8653,  8655,
    8657,  8661,  8666,  8669,  8676,  8682,  8692,  8696,  8700,  8703,
    8708,  8712,  8719,  8727,  8738,  8740,  8742,  8744,  8746,  8748,
    8750,  8752,  8754,  8756,  8758,  8760,  8767,  8777,  8778,  8790,
    8801,  8810,  8816,  8826,  8827,  8839,  8847,  8848,  8850,  8852,
    8854,  8855,  8857,  8859,  8863,  8866,  8870,  8873,  8876,  8879,
    8882,  8884,  8886,  8888,  8890,  8892,  8894,  8896,  8898,  8900,
    8902,  8904,  8907,  8910,  8912,  8916,  8919,  8922,  8925,  8928,
    8931,  8934,  8937,  8940,  8942,  8944,  8947,  8950,  8953,  8954,
    8958,  8959,  8961,  8965,  8967,  8970,  8973,  8976,  8978,  8982,
    8986,  8988,  8992,  8994,  8998,  9000,  9004,  9005,  9009,  9010,
    9014,  9018,  9021,  9029,  9033,  9037,  9040,  9041,  9044,  9049,
    9051,  9053,  9055,  9057,  9059,  9061,  9065,  9070,  9074,  9080,
    9086,  9093,  9097,  9101,  9105,  9111,  9117,  9121,  9125,  9131,
    9134,  9138,  9142,  9146,  9149,  9154,  9162,  9167,  9175,  9179,
    9185,  9188,  9190,  9194,  9196,  9200,  9201,  9205,  9207,  9211,
    9212,  9215,  9218,  9221,  9224,  9225,  9229,  9230,  9234,  9235,
    9239,  9244,  9248,  9252,  9253,  9257,  9258,  9262,  9263,  9265,
    9266,  9270,  9273,  9274,  9276,  9279,  9280,  9282,  9287,  9292,
    9298,  9301,  9305,  9306,  9308,  9310,  9312,  9314,  9316,  9318,
    9320,  9322,  9324,  9326,  9328,  9330,  9332,  9333,  9337,  9341,
    9346,  9348,  9350,  9352,  9354,  9356,  9358,  9360,  9362,  9364,
    9366,  9368,  9370,  9372,  9373,  9377,  9379,  9382,  9384,  9387,
    9391,  9395,  9399,  9400,  9404,  9408,  9409,  9417,  9420,  9421,
    9425,  9430,  9435,  9437,  9439,  9440,  9443,  9444,  9458,  9467,
    9475,  9476,  9477,  9478,  9479,  9495,  9496,  9497,  9498,  9499,
    9512,  9517,  9522,  9526,  9531,  9535,  9539,  9540,  9543,  9545,
    9549,  9555,  9557,  9559,  9560,  9562,  9564,  9565,  9568,  9569,
    9571,  9575,  9576,  9578,  9580,  9582,  9584,  9589,  9591,  9595,
    9596,  9599,  9605,  9610,  9614,  9618,  9620,  9624,  9629,  9636,
    9647,  9649,  9655,  9656,  9659,  9663,  9665,  9667,  9668,  9672,
    9674,  9678,  9680,  9684,  9686,  9689,  9690,  9694,  9695,  9697,
    9699,  9700,  9702
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     823,     0,    -1,   824,    -1,   660,  1330,   156,    -1,   662,
    1059,   156,    -1,   661,  1669,   811,  1326,   812,   156,    -1,
     663,  1791,   156,    -1,   752,  1326,   156,    -1,   156,    -1,
      -1,   827,   825,   814,   826,    -1,   827,   156,    -1,    -1,
     156,    -1,   828,    -1,  1779,    -1,  1190,    -1,  1199,    -1,
    1194,    -1,  1734,    -1,  1201,    -1,  1192,    -1,  1207,    -1,
    1204,    -1,  1202,    -1,  1203,    -1,  1189,    -1,  1205,    -1,
    1196,    -1,  1275,    -1,  1278,    -1,   924,    -1,   841,    -1,
    1279,    -1,  1269,    -1,  1840,    -1,  1785,    -1,   897,    -1,
     902,    -1,   896,    -1,   895,    -1,   899,    -1,   894,    -1,
     829,    -1,  1523,    -1,  1588,    -1,  1471,    -1,  1474,    -1,
    1480,    -1,  1475,    -1,  1473,    -1,  1484,    -1,  1477,    -1,
    1476,    -1,  1487,    -1,  1485,    -1,  1486,    -1,  1482,    -1,
    1483,    -1,  1472,    -1,  1481,    -1,  1478,    -1,  1479,    -1,
     833,    -1,  1589,    -1,  1595,    -1,   954,    -1,  1243,    -1,
    1742,    -1,  1736,    -1,   838,    -1,  1839,    -1,  1496,    -1,
    1836,    -1,  1619,    -1,  1622,    -1,  1724,    -1,  1283,    -1,
    1290,    -1,  1294,    -1,   831,    -1,  1615,    -1,  1788,    -1,
    1285,    -1,  1271,    -1,  1497,    -1,  1604,    -1,   953,    -1,
    1733,    -1,  1740,    -1,  1786,    -1,  1787,    -1,  1300,    -1,
    1697,    -1,  1701,    -1,  1699,    -1,  1544,    -1,  1546,    -1,
    1559,    -1,  1560,    -1,  1543,    -1,  1551,    -1,  1550,    -1,
    1563,    -1,  1575,    -1,  1569,    -1,  1568,    -1,  1564,    -1,
    1570,    -1,  1576,    -1,  1565,    -1,  1533,    -1,  1540,    -1,
    1541,    -1,  1542,    -1,  1549,    -1,  1553,    -1,  1536,    -1,
    1574,    -1,  1572,    -1,  1562,    -1,  1548,    -1,  1566,    -1,
    1538,    -1,  1539,    -1,  1561,    -1,  1573,    -1,  1571,    -1,
    1557,    -1,  1555,    -1,  1554,    -1,  1547,    -1,  1567,    -1,
    1545,    -1,  1556,    -1,  1537,    -1,  1534,    -1,  1535,    -1,
    1558,    -1,  1552,    -1,  1732,    -1,   946,    -1,  1256,    -1,
    1253,    -1,  1252,    -1,  1527,    -1,  1837,    -1,  1730,    -1,
    1518,    -1,  1621,    -1,  1824,    -1,   830,   414,  1678,    -1,
     121,    -1,   144,    -1,   414,  1678,   197,   832,    -1,  1672,
      -1,   815,  1682,    -1,    -1,   170,  1678,   834,   835,    -1,
      -1,   614,   836,    -1,   836,   816,   837,    -1,   837,    -1,
     815,  1682,    -1,    -1,   218,   839,  1682,    -1,   315,    -1,
     456,   517,    -1,    -1,    58,   840,   582,   842,   857,   893,
      -1,    -1,    58,   456,   185,   843,   844,   893,    -1,   845,
      -1,   844,   816,   845,    -1,   457,   160,   846,    -1,   458,
     160,   846,    -1,   459,   160,   851,    -1,   460,   160,   851,
      -1,   461,   160,   854,    -1,   462,   160,   854,    -1,   463,
     160,   849,    -1,   811,   812,    -1,   811,   847,   812,    -1,
     848,    -1,   847,   816,   848,    -1,  1678,    -1,   811,   812,
      -1,   811,   850,   812,    -1,   811,   848,   816,   848,   812,
      -1,   850,   816,   811,   848,   816,   848,   812,    -1,   811,
     812,    -1,   811,   852,   812,    -1,   853,    -1,   852,   816,
     853,    -1,  1687,   817,  1678,    -1,   811,   812,    -1,   811,
     855,   812,    -1,   856,    -1,   855,   816,   856,    -1,  1671,
      -1,   883,    -1,   857,   816,   883,    -1,   295,    -1,   757,
      -1,   299,    -1,   763,    -1,   296,    -1,   758,    -1,   316,
      -1,   781,    -1,   302,    -1,   766,    -1,   303,    -1,   767,
      -1,   297,    -1,   760,    -1,   304,    -1,   769,    -1,   298,
      -1,   761,    -1,   313,    -1,   770,    -1,   307,    -1,   771,
      -1,   305,    -1,   772,    -1,   309,    -1,   774,    -1,   310,
      -1,   775,    -1,   311,    -1,   776,    -1,   312,    -1,   777,
      -1,   314,    -1,   778,    -1,   306,    -1,   780,    -1,   736,
      -1,   779,    -1,   308,    -1,   773,    -1,   710,    -1,   768,
      -1,   711,    -1,   756,    -1,   317,    -1,   762,    -1,   733,
      -1,   759,    -1,   734,    -1,   782,    -1,   859,   160,  1670,
      -1,   731,   160,  1670,    -1,   860,   160,  1670,    -1,   861,
     160,  1670,    -1,   862,   160,  1670,    -1,   863,   160,  1461,
      -1,   864,   160,  1461,    -1,   865,   160,  1461,    -1,   866,
     160,  1461,    -1,   867,   160,  1461,    -1,   868,   160,  1670,
      -1,   869,   160,  1670,    -1,   875,   160,  1670,    -1,   876,
     160,   889,    -1,   877,   160,  1670,    -1,   870,   160,  1670,
      -1,   873,   160,  1670,    -1,   874,   160,  1461,    -1,   871,
     160,  1670,    -1,   872,   160,  1670,    -1,   878,   160,  1670,
      -1,   879,   160,  1461,    -1,   880,   160,  1656,    -1,   232,
     160,   811,   884,   812,    -1,   881,   160,  1672,    -1,   882,
     160,  1461,    -1,   858,   160,  1461,    -1,   735,   160,   886,
      -1,   737,   160,  1461,    -1,   740,   160,   887,    -1,   750,
     160,  1462,    -1,   755,   160,   888,    -1,   793,   160,  1462,
      -1,   892,    -1,    -1,   885,    -1,   884,   816,   885,    -1,
    1461,    -1,  1684,    -1,   371,    -1,   741,    -1,   377,    -1,
     742,    -1,   797,    -1,   742,    -1,   282,    -1,   571,    -1,
    1670,    -1,   371,    -1,   300,    -1,   764,    -1,   301,    -1,
     765,    -1,   890,   160,  1670,    -1,   891,   160,  1463,    -1,
     444,   160,  1670,    -1,   445,   160,  1461,    -1,    -1,   194,
      60,  1670,    -1,    99,  1492,   565,  1090,  1667,   811,  1102,
     812,  1055,    -1,    99,  1492,   565,  1090,  1667,  1055,    -1,
      99,  1492,   565,  1090,  1667,   275,  1667,    -1,    99,  1492,
     565,  1090,  1667,   811,   275,  1667,   812,    -1,    99,   653,
    1090,  1754,    -1,    99,   707,   212,  1678,   591,  1510,  1843,
    1844,  1848,  1849,    -1,    -1,    99,   108,  1090,  1678,   898,
    1087,    -1,    99,  1795,    -1,    99,   611,  1090,  1770,   901,
    1774,  1213,  1210,  1209,    -1,    99,   286,   212,  1678,     7,
    1039,  1031,    -1,    99,   563,  1678,  1020,  1021,  1022,    -1,
      99,   599,   563,  1678,     7,  1037,  1028,    -1,    99,   498,
    1682,   193,   111,   641,  1682,   383,   811,   903,   812,    -1,
      99,   389,   455,   518,   716,   708,  1464,   900,    -1,    99,
     518,   716,   708,  1090,  1464,   900,    -1,    -1,   900,   352,
    1670,    -1,   900,   713,  1670,    -1,   900,   715,  1670,   228,
      48,  1464,    -1,   900,   714,  1670,    -1,    -1,   125,   653,
    1754,    -1,    99,  1167,   235,  1678,  1179,   377,  1667,   811,
    1185,   812,  1174,  1233,    -1,    99,   199,   235,  1678,   377,
    1667,   811,  1185,   812,  1168,  1233,    -1,    99,   518,   235,
    1678,   377,  1667,   811,  1185,   812,  1171,  1233,    -1,   904,
      -1,   903,   816,   904,    -1,   611,  1672,    -1,   221,  1672,
      -1,   108,  1672,    -1,   393,  1672,    -1,   403,  1672,    -1,
     514,  1672,    -1,   410,  1461,    -1,    -1,   167,  1090,   918,
     906,   377,   487,   907,   912,   909,   914,   143,   915,    -1,
      -1,   168,  1326,  1429,   908,   910,   911,    -1,    25,  1326,
      -1,    -1,   152,    -1,   137,   377,   510,    -1,   137,    -1,
      -1,   537,  1326,    -1,    -1,   155,  1326,    -1,    -1,   913,
      -1,   377,    81,   415,    -1,   377,    81,   366,   415,    -1,
      -1,    77,  1672,    -1,    -1,   916,   917,    -1,   970,    -1,
     972,    -1,   968,    -1,   989,    -1,  1007,    -1,  1009,    -1,
    1004,    -1,   974,    -1,   976,    -1,   977,    -1,   978,    -1,
     979,    -1,   981,    -1,  1678,   817,  1678,    -1,  1678,    -1,
      -1,   919,   921,    -1,    -1,   920,   922,    -1,    77,  1672,
      -1,   265,   532,    -1,   368,   532,    -1,    93,   532,    -1,
     430,   532,   111,    -1,   342,   532,   111,    -1,   923,    -1,
     921,    -1,   134,    -1,  1333,   134,    -1,   532,   491,   127,
      -1,   532,   491,   248,    -1,    51,   918,   925,    -1,    -1,
     811,  1385,   812,    -1,    -1,   927,    -1,   927,   816,   928,
      -1,   928,    -1,  1678,  1115,  1148,    -1,    -1,   930,    -1,
     930,   816,   931,    -1,   931,    -1,   932,  1678,  1115,  1148,
      -1,    -1,   249,    -1,   392,    -1,   239,    -1,    -1,   933,
     967,   814,    -1,   967,   814,    -1,   934,   967,   814,    -1,
      -1,   935,   936,   814,    -1,   124,   965,  1115,  1148,   966,
      -1,   124,  1678,    86,   194,   942,    -1,    -1,   124,   939,
     215,   194,   937,   940,   967,    -1,    -1,   124,  1678,   105,
     194,   938,  1300,    -1,   172,    -1,    95,    -1,   941,    -1,
     940,   816,   941,    -1,   945,    -1,  1461,    -1,   943,    -1,
     521,   944,  1673,    -1,    -1,   620,    -1,   942,    -1,  1678,
      -1,   522,    -1,  1333,   196,    -1,   520,    -1,   507,   947,
     949,    -1,  1678,    -1,   943,    -1,    -1,   947,    -1,    -1,
     500,   950,    -1,   952,   160,   951,    -1,   950,   816,   952,
     160,   951,    -1,  1655,    -1,  1378,    -1,  1664,    -1,    66,
      -1,   550,    -1,    90,    -1,    92,    -1,    91,    -1,    56,
      -1,   488,    -1,   567,    -1,    76,    -1,   106,    -1,   333,
      -1,   350,    -1,   466,   948,   949,    -1,   208,   955,   135,
     956,    -1,    -1,   103,    -1,   535,    -1,   957,    -1,    86,
     961,   962,    -1,   958,    -1,   957,   816,   958,    -1,   959,
     160,   960,    -1,  1678,    -1,   815,  1682,    -1,   373,    -1,
     484,    -1,   951,    -1,   963,    -1,   962,   816,   963,    -1,
     959,   160,   964,    -1,    66,    -1,   550,    -1,    90,    -1,
      92,    -1,    91,    -1,    56,    -1,   488,    -1,   567,    -1,
      76,    -1,   106,    -1,   333,    -1,   350,    -1,   471,    -1,
    1678,    -1,   965,   816,  1678,    -1,    -1,   125,  1326,    -1,
     970,    -1,   972,    -1,   968,    -1,   989,    -1,  1007,    -1,
    1009,    -1,  1004,    -1,   974,    -1,   976,    -1,   977,    -1,
     978,    -1,   979,    -1,   981,    -1,    -1,   230,   969,   984,
     154,   230,    -1,    -1,   971,   828,    -1,    -1,   473,   973,
    1326,    -1,    -1,   975,  1013,    -1,   270,  1680,    -1,   257,
    1680,    -1,   380,  1678,    -1,    -1,   182,   982,  1678,   246,
     980,   983,    -1,    68,  1678,    -1,    -1,   362,   197,    -1,
     197,    -1,  1678,    -1,   983,   816,  1678,    -1,    -1,    -1,
      -1,   985,  1326,   986,   574,   934,   987,   988,    -1,    -1,
     151,   984,    -1,   150,   934,    -1,   990,    -1,   993,    -1,
      -1,    -1,    54,   991,  1326,   992,   995,  1003,   154,    54,
      -1,    -1,    54,   994,   996,  1003,   154,    54,    -1,   997,
      -1,   995,   997,    -1,  1000,    -1,   996,  1000,    -1,    -1,
      -1,   633,   998,  1326,   999,   574,   934,    -1,    -1,    -1,
     633,  1001,  1326,  1002,   574,   934,    -1,    -1,   150,   934,
      -1,    -1,  1680,   818,  1005,  1013,  1006,    -1,    -1,  1680,
      -1,    -1,  1680,   818,  1008,  1011,  1006,    -1,    -1,  1010,
    1011,    -1,    -1,    32,  1012,   935,   933,   154,    -1,   292,
     934,   154,   292,    -1,    -1,    -1,   635,  1014,  1326,  1015,
     143,   934,   154,   635,    -1,    -1,    -1,   454,   934,   607,
    1016,  1326,  1017,   154,   454,    -1,    31,    -1,     9,    -1,
     241,    -1,   608,    -1,   130,    -1,    -1,     7,  1037,    -1,
      -1,   613,   286,   212,  1678,    -1,    -1,  1023,    -1,  1024,
      -1,  1023,  1093,  1024,    -1,  1040,    -1,  1041,    -1,  1043,
      -1,  1044,    -1,  1047,    -1,  1049,    -1,  1051,    -1,  1048,
      -1,  1050,    -1,  1052,    -1,  1053,    -1,    -1,  1026,    -1,
    1027,    -1,  1026,  1093,  1027,    -1,  1040,    -1,  1041,    -1,
    1043,    -1,  1049,    -1,  1051,    -1,  1052,    -1,  1053,    -1,
      -1,  1029,    -1,  1030,    -1,  1029,  1093,  1030,    -1,  1049,
      -1,    -1,  1032,    -1,  1033,    -1,  1032,  1093,  1033,    -1,
    1040,    -1,  1045,    -1,  1046,    -1,  1047,    -1,  1049,    -1,
    1051,    -1,  1048,    -1,    -1,  1035,    -1,  1036,    -1,  1035,
    1093,  1036,    -1,  1040,    -1,  1049,    -1,  1051,    -1,   110,
    1672,    -1,   717,    -1,   718,    -1,   597,  1672,    -1,   237,
    1510,  1054,    -1,  1042,    -1,    26,  1510,  1054,    -1,   322,
    1510,  1054,    -1,   177,  1510,  1054,    -1,   598,  1510,  1054,
      -1,   438,  1510,  1054,    -1,   363,  1510,  1462,    -1,    77,
    1510,  1672,    -1,  1579,   158,  1510,  1682,    -1,   184,  1510,
    1054,    -1,   629,    -1,   369,    -1,    84,  1510,  1672,    -1,
     748,  1510,  1851,    -1,  1464,    -1,  1669,    -1,  1092,  1056,
      -1,  1056,    -1,  1059,  1057,    -1,  1057,    -1,    -1,  1631,
    1058,    -1,  1058,    -1,    21,  1505,    -1,  1505,    -1,   400,
      48,  1060,  1063,  1064,  1068,    -1,  1061,   263,  1062,   811,
    1065,   812,    -1,  1061,   216,   811,  1330,   812,    -1,   429,
     811,  1330,   812,    -1,   429,    73,   811,  1066,   812,    -1,
     280,   811,  1330,   812,    -1,   280,    73,   811,  1066,   812,
      -1,    -1,   277,    -1,    -1,    12,   160,  1462,    -1,    -1,
     401,  1462,    -1,    -1,   554,    48,  1061,   216,   811,  1330,
     812,  1067,    -1,   554,    48,  1061,   263,  1062,   811,  1066,
     812,  1067,    -1,    -1,  1066,    -1,  1678,    -1,  1066,   816,
    1678,    -1,    -1,   553,  1462,    -1,    -1,   811,  1069,   812,
      -1,  1070,    -1,  1069,   816,  1070,    -1,   400,  1678,  1071,
    1082,  1079,    -1,    -1,   619,   272,   573,  1072,    -1,   619,
     249,  1073,    -1,   326,    -1,  1075,    -1,  1075,    -1,   811,
    1074,   812,    -1,  1075,    -1,  1074,   816,  1075,    -1,    -1,
     811,  1076,  1077,   812,    -1,  1078,    -1,  1077,   816,  1078,
      -1,   326,    -1,  1330,    -1,    -1,   811,  1080,   812,    -1,
    1081,    -1,  1080,   816,  1081,    -1,   554,  1682,  1082,    -1,
      -1,  1083,    -1,  1083,  1084,    -1,  1084,    -1,   563,  1510,
    1678,    -1,  1579,   158,  1510,  1682,    -1,   363,  1510,  1462,
      -1,   321,  1510,  1464,    -1,   339,  1510,  1464,    -1,   111,
     136,  1510,  1672,    -1,   235,   136,  1510,  1672,    -1,    77,
    1510,  1672,    -1,  1086,    -1,  1085,  1086,    -1,  1089,    -1,
     432,   379,  1510,  1095,    -1,    -1,  1088,    -1,  1089,    -1,
    1088,  1089,    -1,  1097,    -1,  1096,    -1,  1098,    -1,    -1,
     230,  1333,   171,    -1,  1094,    -1,  1091,  1094,    -1,  1094,
      -1,  1092,  1093,  1094,    -1,    -1,   816,    -1,   158,  1510,
    1682,    -1,   724,  1510,   371,    -1,   724,  1510,  1682,    -1,
     321,  1510,  1463,    -1,   339,  1510,  1463,    -1,    28,  1510,
    1463,    -1,   403,  1510,  1672,    -1,    77,  1510,  1672,    -1,
      83,  1510,  1672,    -1,    84,  1510,  1672,    -1,    27,  1510,
    1463,    -1,   394,  1510,  1095,    -1,   539,  1510,  1095,    -1,
     540,  1510,  1095,    -1,   541,  1510,  1461,    -1,   541,  1510,
     125,    -1,    63,  1510,  1461,    -1,   566,  1510,  1461,    -1,
     129,  1510,  1461,    -1,   482,  1510,  1099,    -1,   602,  1510,
     811,  1603,   812,    -1,  1096,    -1,  1097,    -1,   242,  1510,
    1100,    -1,   111,   136,  1510,  1672,    -1,   235,   136,  1510,
    1672,    -1,   563,  1510,  1678,    -1,   546,   139,    -1,   546,
     331,    -1,    87,  1510,  1672,    -1,   262,  1510,  1463,    -1,
     538,   584,    -1,   748,  1510,  1851,    -1,   749,  1510,  1851,
      -1,  1042,    -1,  1461,    -1,   125,    -1,  1149,  1142,  1510,
    1143,    -1,  1149,    71,  1510,  1147,    -1,  1149,    84,  1510,
    1672,    -1,   125,    -1,   187,    -1,   148,    -1,    82,    -1,
     439,    -1,    80,    -1,   368,    -1,   186,    -1,   266,    -1,
     549,    -1,   434,    -1,   123,    -1,   247,    -1,  1103,    -1,
    1102,   816,  1103,    -1,  1104,    -1,  1106,    -1,  1678,  1112,
    1105,    -1,    -1,  1157,    -1,  1164,  1178,   811,  1185,   812,
    1174,    -1,   199,  1165,  1187,   811,  1185,   812,  1168,    -1,
     518,  1165,  1187,   811,  1185,   812,  1171,    -1,  1108,  1163,
    1178,   811,  1185,   812,  1174,    -1,  1108,   193,   263,  1187,
     811,  1183,   812,  1157,    -1,  1108,  1107,  1110,    -1,    64,
     811,  1326,   812,    -1,    -1,    89,  1187,    -1,    -1,   366,
      -1,    -1,  1111,    -1,  1109,   729,    -1,  1115,  1135,    -1,
    1115,  1148,  1113,    21,   811,  1326,   812,  1114,  1135,    -1,
      -1,   203,    15,    -1,    -1,   628,    -1,   547,    -1,  1120,
    1133,  1129,    -1,  1121,  1134,  1129,    -1,  1123,  1125,  1129,
      -1,    40,    -1,    40,  1132,    -1,    45,    -1,    44,    -1,
      62,  1132,  1152,    -1,    62,  1152,    -1,  1117,  1132,  1153,
      -1,  1117,  1153,    -1,    35,  1132,    -1,    35,    -1,  1118,
    1132,  1152,    -1,  1119,  1132,  1153,    -1,   621,  1132,    -1,
     649,  1133,  1129,    -1,   115,    -1,   578,  1127,    -1,   575,
    1127,    -1,   112,  1127,    -1,   579,    -1,    42,  1133,    -1,
    1116,    -1,   327,    -1,   288,    -1,   291,   621,    -1,   291,
    1118,  1152,    -1,   581,  1152,    -1,   572,  1133,  1152,    -1,
     329,  1152,    -1,   289,  1152,    -1,   159,   811,  1188,   812,
    1152,    -1,   500,   811,  1188,   812,  1152,    -1,   291,  1152,
      -1,   496,    -1,   260,    -1,   206,    -1,   205,    -1,   408,
      -1,   347,    -1,   279,    -1,   346,    -1,   409,    -1,   348,
      -1,   356,    -1,   353,    62,    -1,    62,   625,    -1,   622,
      -1,   353,   622,    -1,   375,    -1,   356,   622,    -1,   353,
      62,   625,    -1,   356,   625,    -1,   247,    -1,   580,    -1,
     512,    -1,   328,    -1,    34,    -1,   434,    -1,   142,  1122,
      -1,    -1,   413,    -1,   189,    -1,   123,    -1,   374,    -1,
     187,    -1,    -1,  1132,    -1,    -1,  1132,    -1,  1126,    -1,
     811,   372,   816,   372,   812,    -1,    -1,   811,   372,   812,
      -1,    -1,   811,   812,    -1,   811,   372,   812,    -1,    -1,
    1130,    -1,  1130,  1131,    -1,  1131,    -1,   508,    -1,   606,
      -1,   650,    -1,   811,   290,   812,    -1,   811,   593,   812,
      -1,   811,   122,   812,    -1,   811,   372,   812,    -1,    -1,
    1132,    -1,    -1,  1126,    -1,    -1,  1136,    -1,  1136,  1137,
      -1,  1137,    -1,   371,    -1,  1333,   371,    -1,  1333,   723,
      -1,   125,  1141,    -1,   125,   811,  1326,   812,    -1,   377,
     608,  1140,    -1,    27,    -1,   496,   125,   620,    -1,  1156,
     263,    -1,   603,    -1,   603,   263,    -1,    77,  1672,    -1,
      71,  1147,    -1,    75,  1138,    -1,   546,  1139,    -1,   705,
    1464,    -1,  1108,  1107,    -1,  1111,    -1,   748,  1510,  1851,
      -1,   749,  1510,  1851,    -1,  1181,    -1,   125,    -1,   187,
      -1,   148,    -1,   125,    -1,   139,    -1,   331,    -1,   367,
    1128,    -1,  1140,    -1,  1652,    -1,    62,   500,    -1,    61,
      -1,  1682,    -1,    35,    -1,    -1,  1142,  1143,    -1,  1682,
      -1,    35,    -1,  1145,    -1,   125,    -1,  1682,    -1,    35,
      -1,    -1,    71,  1147,    -1,    -1,   125,    -1,    23,    -1,
      35,    23,    -1,    23,    35,    -1,   600,    -1,   600,    35,
      -1,    35,   600,    -1,    -1,  1150,    -1,  1151,    -1,    49,
      -1,  1142,  1143,  1153,    -1,    35,    -1,    35,  1142,  1143,
      -1,    -1,    35,    -1,    -1,   811,  1462,  1155,   812,    -1,
      -1,   417,    -1,   440,  1667,  1158,  1160,  1161,    -1,    -1,
     811,  1159,   812,    -1,  1159,   816,  1678,    -1,  1678,    -1,
      -1,   318,   198,    -1,   318,   399,    -1,   318,   509,    -1,
      -1,   377,   608,  1162,    -1,   377,   130,  1162,    -1,   377,
     608,  1162,   377,   130,  1162,    -1,   377,   130,  1162,   377,
     608,  1162,    -1,   469,    -1,    52,    -1,   500,   371,    -1,
     368,     6,    -1,   500,   125,    -1,   417,   263,    -1,   603,
    1165,    -1,   263,    -1,   235,    -1,    -1,  1164,    -1,   261,
      -1,   235,    -1,   234,    -1,    -1,   603,    -1,    -1,  1169,
      -1,  1170,    -1,  1169,  1170,    -1,  1177,    -1,   636,   397,
    1669,    -1,    -1,  1172,    -1,  1173,    -1,  1172,  1173,    -1,
    1177,    -1,    -1,  1175,    -1,  1176,    -1,  1175,  1176,    -1,
    1177,    -1,  1180,    -1,   262,  1510,  1461,    -1,    77,  1672,
      -1,  1181,    -1,   748,  1510,  1851,    -1,   749,  1510,  1851,
      -1,  1187,    -1,  1187,   614,  1182,    -1,  1678,   591,  1182,
      -1,    -1,  1180,    -1,   614,  1182,    -1,   591,  1182,    -1,
     656,    -1,   655,    -1,    47,    -1,   485,    -1,   216,    -1,
    1183,   816,  1184,    -1,  1184,    -1,  1678,  1454,    -1,  1678,
     811,   372,   812,  1454,    -1,  1185,   816,  1186,    -1,  1186,
      -1,  1184,    -1,   811,  1326,   812,  1454,    -1,    -1,  1678,
      -1,  1649,    -1,  1188,   816,  1649,    -1,    14,   565,  1667,
    1221,    -1,    14,   565,  1667,  1222,    -1,    -1,    14,   108,
    1220,  1191,  1085,    -1,    -1,    14,   419,   918,  1193,   919,
      -1,    -1,    14,   200,   918,  1195,   919,    -1,    -1,    14,
    1803,  1798,  1197,  1805,    -1,    -1,    14,  1798,  1198,  1805,
      -1,    -1,    14,  1798,   167,   918,  1200,  1217,  1218,   909,
     914,  1219,    -1,    14,   286,   212,  1678,     7,  1039,  1034,
      -1,    14,   563,  1678,     7,  1037,  1025,    -1,    14,   563,
    1678,   144,  1037,  1025,    -1,    14,   563,  1678,   450,   582,
    1678,    -1,    14,   563,  1678,  1026,    -1,    14,   599,   563,
    1678,   500,  1038,  1028,    -1,    14,   498,  1682,   383,   811,
     903,   812,    -1,  1208,  1771,  1774,  1213,  1210,  1209,    -1,
    1208,  1216,  1762,  1206,  1755,    -1,  1208,  1216,  1761,  1206,
    1755,    -1,  1208,  1216,   138,   728,   403,    -1,  1208,  1685,
     125,   653,    13,    -1,  1208,  1685,   125,   653,   364,    -1,
    1208,  1685,   125,   653,  1754,    -1,  1208,  1685,  1757,    -1,
    1208,  1216,  1757,    -1,    -1,   455,  1675,    -1,    14,   707,
     212,  1678,  1844,  1848,  1849,  1850,    -1,    14,   611,  1490,
      -1,    -1,   747,  1673,    -1,    77,  1673,    -1,    -1,  1211,
      -1,  1212,    -1,  1211,  1212,    -1,     5,   605,    -1,     5,
     285,    -1,   403,   174,    -1,   403,   174,   245,  1462,   120,
      -1,   403,   174,   360,    -1,   403,   174,   125,    -1,   403,
     703,  1462,    -1,   403,   703,   125,    -1,   403,   704,   245,
    1462,   120,    -1,   403,   704,   245,   125,    -1,   403,   464,
     103,    -1,   403,   464,   103,   125,    -1,   403,   464,   103,
     722,    -1,   739,  1462,    -1,   738,  1462,    -1,   738,   696,
      -1,    -1,   636,  1214,    -1,  1214,  1215,    -1,  1215,    -1,
     320,  1461,    -1,   324,  1461,    -1,   319,  1461,    -1,   325,
    1461,    -1,   611,   811,   812,    -1,    -1,   377,   487,   907,
      -1,   913,    -1,   377,   487,   907,   913,    -1,    -1,   450,
     582,   918,    -1,    -1,   143,   915,    -1,    -1,  1678,    -1,
    1224,    -1,  1224,  1223,    -1,  1225,    -1,  1230,   816,  1225,
      -1,  1059,    -1,   449,   402,    -1,    -1,  1230,    -1,  1229,
      -1,  1230,   816,  1229,    -1,   138,   563,    -1,   233,   563,
      -1,     7,   400,  1284,    -1,     7,   400,  1284,   811,  1069,
     812,    -1,     7,   400,  1284,   401,  1462,    -1,   144,   400,
    1428,    -1,   435,   400,  1284,  1228,    -1,   381,   400,  1284,
    1228,    -1,    17,   400,  1284,  1228,    -1,    64,   400,  1228,
    1280,    -1,   452,   400,  1284,  1228,  1272,    -1,    69,   400,
    1284,  1462,    -1,   589,   400,  1228,    -1,   451,   400,  1284,
      -1,   451,   400,  1284,  1428,   246,   811,  1069,   812,    -1,
     169,   400,  1678,   636,   565,  1667,  1226,    -1,   138,   400,
    1228,   563,    -1,   233,   400,  1228,   563,    -1,   725,    -1,
     726,    -1,    -1,  1227,    -1,   636,   618,    -1,   639,   618,
      -1,    13,    -1,  1428,    -1,  1231,    -1,  1229,   816,  1231,
      -1,  1229,   816,  1232,    -1,  1091,    -1,  1229,   816,  1091,
      -1,  1232,    -1,  1230,   816,  1232,    -1,     7,  1238,  1678,
    1112,  1105,  1241,    -1,     7,  1238,   811,  1102,   812,    -1,
       7,  1106,    -1,    58,  1238,  1678,  1678,  1112,  1241,    -1,
     343,  1238,  1678,  1112,  1241,    -1,   144,  1238,  1678,  1240,
      -1,   144,   193,   263,  1678,    -1,   144,   417,   263,    -1,
     144,  1164,  1678,    -1,   144,    64,  1678,    -1,   144,    89,
    1678,    -1,   137,   261,    -1,   152,   261,    -1,    14,  1238,
    1678,   500,   125,  1652,    -1,    14,  1238,  1678,   500,   125,
     811,  1326,   812,    -1,    14,  1238,  1678,   144,   125,    -1,
      14,  1238,  1678,   500,  1181,    -1,    14,   235,  1678,  1181,
      -1,    14,    64,  1678,  1111,    -1,    14,    89,  1678,  1111,
      -1,   450,  1242,  1667,    -1,   450,  1164,  1678,   582,  1678,
      -1,   450,    74,  1678,   582,  1678,    -1,    96,   582,  1142,
    1143,  1148,    -1,    96,   582,  1142,   125,  1148,    -1,   192,
      -1,   387,    48,  1449,    -1,  1234,    -1,  1236,    -1,  1227,
      -1,    -1,  1236,    -1,  1234,    -1,  1236,  1234,    -1,  1234,
    1236,    -1,    12,  1510,  1235,    -1,   125,    -1,  1678,    -1,
     285,  1510,  1237,    -1,   125,    -1,  1678,    -1,    -1,    74,
      -1,    -1,   231,    -1,    -1,   469,    -1,    52,    -1,    -1,
       9,  1678,    -1,   186,    -1,    -1,   582,    -1,   160,    -1,
      21,    -1,  1244,  1245,    -1,   545,   204,    -1,   538,   204,
      -1,    -1,  1246,    -1,  1247,    -1,  1246,   816,  1247,    -1,
    1248,    -1,  1249,    -1,  1250,    -1,   611,   160,  1670,    -1,
     403,   160,  1670,    -1,   126,   160,  1670,    -1,   510,    -1,
     753,    -1,   545,  1251,  1264,   893,    -1,    -1,    -1,   538,
    1251,  1264,  1254,  1267,  1260,  1261,  1262,  1263,  1255,   893,
      -1,   538,   584,  1257,    -1,    -1,  1258,    -1,  1259,    -1,
    1258,   816,  1259,    -1,   636,    88,   513,    -1,   432,   379,
      -1,   432,   642,    -1,    -1,   611,   160,  1672,    -1,    -1,
     403,   160,  1672,    -1,    -1,   126,   160,  1672,    -1,    -1,
     405,   160,  1672,    -1,    -1,  1265,    -1,  1266,    -1,  1265,
     816,  1266,    -1,   533,    -1,   446,    -1,    -1,   607,  1268,
      -1,   892,    -1,  1268,   816,   892,    -1,   525,   160,  1672,
      -1,   523,   160,  1672,    -1,   524,    -1,    63,  1726,  1488,
    1270,    -1,    -1,   428,    -1,   176,    -1,   452,  1284,  1726,
    1488,  1272,    -1,    -1,  1273,    -1,  1274,    -1,  1273,  1274,
      -1,   428,    -1,   176,    -1,   612,    -1,    17,  1284,  1726,
    1488,  1277,    -1,    -1,   636,   372,   673,    -1,   614,   111,
    1673,    -1,    -1,   608,   672,   377,  1428,  1276,    -1,   144,
     672,   377,  1428,    -1,    36,  1672,    -1,    64,  1726,  1488,
    1280,    -1,    -1,  1281,    -1,  1282,    -1,  1282,  1281,    -1,
     428,    -1,   180,    -1,   330,    -1,   176,    -1,    59,    -1,
     194,   609,    -1,   381,  1284,  1726,  1488,    -1,    -1,   370,
      -1,   282,    -1,    -1,   450,  1726,  1286,  1288,    -1,   450,
     611,  1287,    -1,  1685,   582,  1685,    -1,  1287,   816,  1685,
     582,  1685,    -1,  1289,    -1,  1288,   816,  1289,    -1,  1667,
     582,  1667,    -1,    50,   235,  1291,   249,  1293,    -1,    50,
     235,  1667,  1297,  1298,   249,  1293,    -1,  1292,    -1,  1291,
     816,  1292,    -1,  1667,  1298,    -1,  1678,    -1,   125,    -1,
     281,   235,   246,    50,  1667,  1297,  1298,  1299,    -1,   281,
     235,   246,    50,  1295,    -1,  1296,    -1,  1295,   816,  1296,
      -1,  1667,  1298,  1299,    -1,   400,   811,  1228,   812,    -1,
      -1,  1164,   811,  1424,   812,    -1,    -1,   231,   269,    -1,
    1302,    -1,  1302,  1316,    -1,  1301,    -1,   811,  1301,   812,
      -1,  1302,  1469,    -1,  1302,  1469,  1316,    -1,  1302,  1316,
    1469,    -1,  1303,  1451,  1456,    -1,  1438,  1303,  1451,  1456,
      -1,  1305,    -1,  1304,    -1,  1303,   602,  1789,  1303,    -1,
    1303,   657,  1789,  1303,    -1,  1303,   794,  1789,  1303,    -1,
     811,  1304,   812,    -1,   811,  1505,   812,    -1,  1306,    -1,
    1311,    -1,  1312,    -1,   492,  1313,  1322,  1469,  1307,  1435,
    1446,  1437,  1443,    -1,   492,  1313,  1322,  1307,  1435,  1446,
    1437,  1443,    -1,    -1,  1308,    -1,   197,  1309,    -1,   145,
      -1,  1310,    -1,  1392,    -1,  1310,   816,  1392,    -1,   619,
    1508,    -1,   565,  1667,    -1,    -1,  1314,    -1,  1314,  1315,
      -1,  1315,    -1,  1793,    -1,   530,    -1,  1316,  1317,    -1,
    1317,    -1,   194,  1318,  1320,    -1,   194,  1318,  1319,  1320,
      -1,   285,   249,   502,   341,    -1,   608,    -1,   502,    -1,
     666,  1489,    -1,    -1,  1321,    -1,   667,   668,    -1,   669,
      -1,  1322,   816,  1323,    -1,  1323,    -1,   805,    -1,  1661,
      -1,  1326,  1324,    -1,    -1,    21,  1678,    -1,    21,  1677,
      -1,  1678,    -1,  1677,    -1,    -1,   811,   812,    -1,  1326,
    1331,  1326,    -1,  1326,   647,  1326,    -1,  1326,  1332,  1326,
      -1,   366,  1326,    -1,  1327,   254,   588,    -1,  1327,   254,
    1333,   588,    -1,  1327,   254,   179,    -1,  1327,   254,  1333,
     179,    -1,  1327,   254,   604,    -1,  1327,   254,  1333,   604,
      -1,  1327,    -1,  1327,   254,   371,    -1,  1327,   254,  1333,
     371,    -1,  1327,  1335,  1328,    -1,  1327,  1335,  1336,  1791,
      -1,  1328,    -1,  1330,   249,  1791,    -1,  1330,  1333,   249,
    1791,    -1,  1330,   249,   811,  1326,   812,    -1,  1330,   249,
     811,  1326,   816,  1386,   812,    -1,  1330,  1333,   249,   811,
    1326,   812,    -1,  1330,  1333,   249,   811,  1326,   816,  1386,
     812,    -1,  1330,   721,  1329,   811,  1337,   812,    -1,  1330,
      33,  1330,    19,  1328,    -1,  1330,  1333,    33,  1330,    19,
    1328,    -1,  1330,   516,   275,  1330,    -1,  1330,   275,  1337,
      -1,  1330,   275,  1337,   165,  1337,    -1,  1330,  1333,   275,
    1337,    -1,  1330,  1333,   275,  1337,   165,  1337,    -1,  1330,
     441,  1330,    -1,  1330,  1333,   441,  1330,    -1,  1330,    -1,
     666,    -1,    -1,  1330,   801,  1330,    -1,  1330,   802,  1330,
      -1,  1330,   503,  1330,    -1,  1330,   504,  1330,    -1,  1330,
     804,  1330,    -1,  1330,   803,  1330,    -1,  1330,   804,   245,
    1326,  1429,    -1,  1330,   803,   245,  1326,  1429,    -1,  1330,
     805,  1330,    -1,  1330,   806,  1330,    -1,  1330,   807,  1330,
      -1,  1330,   141,  1330,    -1,  1330,   344,  1330,    -1,  1330,
     808,  1330,    -1,  1337,    -1,   389,    -1,   386,    -1,    19,
      -1,    18,    -1,   366,    -1,   365,    -1,   819,    -1,   365,
      -1,   160,    -1,   161,    -1,   201,    -1,   214,    -1,   267,
      -1,   294,    -1,   358,    -1,    13,    -1,    20,    -1,  1664,
      -1,  1339,    -1,  1340,    -1,  1344,    -1,  1342,    -1,  1337,
      71,  1682,    -1,  1655,    -1,  1650,    -1,  1378,    -1,  1377,
      -1,  1351,    -1,  1353,    -1,  1337,   388,  1337,    -1,   804,
    1337,    -1,   803,  1337,    -1,   809,  1337,    -1,  1334,  1337,
      -1,  1790,    -1,   811,  1326,   812,    -1,   811,  1326,   816,
    1386,   812,    -1,   483,   811,  1326,   816,  1386,   812,    -1,
     171,  1791,    -1,   820,  1678,  1326,   821,    -1,   318,  1387,
      10,   811,  1330,  1345,   812,    -1,    35,  1337,    -1,    55,
     811,  1326,    21,  1384,  1338,   812,    -1,    55,   811,  1326,
      25,   282,    21,  1384,  1338,   812,    -1,    55,   811,  1326,
      25,   578,   751,  1659,  1673,    21,   112,  1127,   812,    -1,
      54,  1389,  1391,  1390,   154,    -1,    96,   811,  1326,   816,
    1384,   812,    -1,    96,   811,  1326,   614,  1143,   812,    -1,
     125,   811,  1664,   812,    -1,   619,   811,  1665,   812,    -1,
     245,  1326,  1429,   804,  1326,    -1,  1664,   259,  1673,    -1,
    1664,   651,  1673,    -1,    -1,   720,    -1,    62,   811,  1386,
     812,    -1,    62,   811,  1386,   614,  1143,   812,    -1,   104,
    1325,    -1,   115,   811,  1326,   812,    -1,   120,   811,  1326,
     812,    -1,   226,   811,  1326,   812,    -1,   241,   811,  1326,
     816,  1326,   816,  1326,   816,  1326,   812,    -1,   245,   811,
    1326,   816,  1326,   812,    -1,   245,   811,  1326,   816,  1326,
     816,  1386,   812,    -1,   745,   811,  1337,   816,  1648,  1341,
    1413,   812,    -1,   271,   811,  1326,   816,  1326,   812,    -1,
     338,   811,  1326,   812,    -1,   345,   811,  1326,   812,    -1,
     476,   811,  1326,   816,  1326,   812,    -1,   490,   811,  1326,
     812,    -1,   578,   811,  1326,   812,    -1,   575,   811,  1326,
     812,    -1,   575,   811,  1326,   816,  1326,   812,    -1,   587,
     811,  1326,   812,    -1,   587,   811,   268,  1326,   197,  1326,
     812,    -1,   587,   811,   583,  1326,   197,  1326,   812,    -1,
     587,   811,    46,  1326,   197,  1326,   812,    -1,   587,   811,
     268,   197,  1326,   812,    -1,   587,   811,   583,   197,  1326,
     812,    -1,   587,   811,    46,   197,  1326,   812,    -1,   587,
     811,  1326,   197,  1326,   812,    -1,   611,   811,   812,    -1,
     649,   811,  1326,   812,    -1,     8,   811,  1326,   816,  1326,
     812,    -1,     8,   811,  1326,   816,   245,  1326,  1429,   812,
      -1,   102,  1325,    -1,   107,  1128,    -1,   113,   811,  1326,
     816,   245,  1326,  1429,   812,    -1,   114,   811,  1326,   816,
     245,  1326,  1429,   812,    -1,   178,   811,  1429,   197,  1326,
     812,    -1,   207,   811,  1431,   816,  1326,   812,    -1,  1140,
      -1,   411,   811,  1330,   249,  1326,   812,    -1,   551,   811,
    1326,   816,  1326,   812,    -1,   551,   811,  1326,   816,   245,
    1326,  1429,   812,    -1,   555,   811,  1326,   816,  1326,   816,
    1326,   812,    -1,   555,   811,  1326,   816,  1326,   812,    -1,
     555,   811,  1326,   197,  1326,   194,  1326,   812,    -1,   555,
     811,  1326,   197,  1326,   812,    -1,   561,  1128,    -1,   576,
     811,  1430,   816,  1326,   816,  1326,   812,    -1,   577,   811,
    1430,   816,  1326,   816,  1326,   812,    -1,   615,  1325,    -1,
     617,  1128,    -1,   616,  1128,    -1,    -1,   743,  1384,    -1,
      23,   811,  1326,   812,    -1,    61,   811,  1326,   812,    -1,
      69,   811,  1386,   812,    -1,    72,   811,  1326,   812,    -1,
     108,   811,   812,    -1,   230,   811,  1326,   816,  1326,   816,
    1326,   812,    -1,   195,   811,  1326,   816,  1326,   812,    -1,
     195,   811,  1326,   816,  1326,   816,  1326,   812,    -1,   334,
     811,  1326,   812,    -1,   344,   811,  1326,   816,  1326,   812,
      -1,   426,   811,  1326,   812,    -1,   454,   811,  1326,   816,
    1326,   812,    -1,   455,   811,  1326,   816,  1326,   816,  1326,
     812,    -1,   474,   811,  1326,   812,    -1,   484,   811,   812,
      -1,   589,   811,  1326,   816,  1326,   812,    -1,   631,   811,
    1326,   812,    -1,   631,   811,  1326,   816,  1326,   812,    -1,
     632,   811,  1326,   812,    -1,   632,   811,  1326,    21,    62,
    1154,   812,    -1,   632,   811,  1326,    21,    35,  1154,   812,
      -1,   632,   811,  1326,   816,  1461,   816,  1461,   816,  1461,
     812,    -1,  1343,    -1,   205,   811,  1385,   812,    -1,   279,
     811,  1386,   812,    -1,   346,   811,  1386,   812,    -1,   347,
     811,  1386,   812,    -1,   348,   811,  1386,   812,    -1,   408,
     811,  1326,   816,  1326,   812,    -1,   409,   811,  1386,   812,
      -1,  1669,   811,  1348,   812,    -1,  1678,   817,  1678,   811,
    1385,   812,    -1,  1346,  1347,    -1,   249,    44,   341,    -1,
      -1,   249,   354,   265,   341,    -1,    -1,   636,   427,   173,
      -1,    -1,  1349,    -1,  1350,    -1,  1349,   816,  1350,    -1,
    1326,  1324,    -1,  1352,    -1,  1376,    -1,    29,   811,  1383,
     812,  1360,    -1,    29,   811,   140,  1383,   812,  1360,    -1,
      38,   811,  1383,   812,  1360,    -1,    39,   811,  1383,   812,
    1360,    -1,   665,   811,  1383,   812,  1360,    -1,   664,   811,
    1383,   816,  1383,   812,  1360,    -1,   783,   811,  1383,   812,
    1360,    -1,   783,   811,   140,  1383,   812,  1360,    -1,    41,
     811,  1383,   812,  1360,    -1,    97,   811,  1434,   805,   812,
    1360,    -1,    97,   811,  1383,   812,  1360,    -1,    97,   811,
     140,  1386,   812,  1360,    -1,   340,   811,  1383,   812,  1360,
      -1,   340,   811,   140,  1383,   812,  1360,    -1,   323,   811,
    1383,   812,  1360,    -1,   323,   811,   140,  1383,   812,  1360,
      -1,   544,   811,  1383,   812,  1360,    -1,   624,   811,  1383,
     812,  1360,    -1,   543,   811,  1383,   812,  1360,    -1,   626,
     811,  1383,   812,  1360,    -1,   556,   811,  1383,   812,  1360,
      -1,   556,   811,   140,  1383,   812,  1360,    -1,   213,   811,
    1379,  1386,  1381,  1380,   812,  1360,    -1,   694,   811,   812,
    1361,    -1,   692,   811,   812,  1361,    -1,   677,   811,   812,
    1361,    -1,   676,   811,   812,  1361,    -1,   690,   811,   812,
    1361,    -1,   686,   811,  1355,   812,  1361,    -1,   684,   811,
    1326,  1354,   812,  1358,  1361,    -1,   682,   811,  1326,  1354,
     812,  1358,  1361,    -1,   679,   811,  1326,   812,  1358,  1361,
      -1,   683,   811,  1326,   812,  1358,  1361,    -1,   685,   811,
    1326,   816,  1337,   812,  1359,  1358,  1361,    -1,    -1,   816,
    1355,  1357,    -1,  1657,    -1,  1356,    -1,  1650,    -1,  1678,
      -1,   815,  1682,    -1,    -1,   816,  1326,    -1,    -1,   693,
     687,    -1,   231,   687,    -1,    -1,   197,   186,    -1,   197,
     266,    -1,    -1,  1361,    -1,   689,  1362,    -1,  1363,    -1,
    1364,    -1,  1678,    -1,   811,  1365,   812,    -1,  1366,  1367,
    1368,  1369,    -1,    -1,  1363,    -1,    -1,   400,    48,  1447,
      -1,    -1,   387,    48,  1453,    -1,    -1,  1375,  1370,  1374,
      -1,  1371,    -1,  1372,    -1,   696,   691,    -1,  1656,   691,
      -1,  1650,   691,    -1,   245,  1326,  1429,   691,    -1,   103,
     483,    -1,    33,  1373,    19,  1373,    -1,  1371,    -1,   696,
     680,    -1,  1656,   680,    -1,  1650,   680,    -1,   245,  1326,
    1429,   680,    -1,    -1,   678,   103,   483,    -1,   678,   212,
      -1,   678,   695,    -1,   678,   368,   688,    -1,   481,    -1,
     429,    -1,   681,    -1,   670,   811,  1386,   812,    -1,   815,
    1682,   501,  1326,    -1,   815,  1682,    -1,   815,   815,  1710,
    1715,    -1,    -1,   140,    -1,    -1,   494,  1649,    -1,    -1,
     387,    48,  1382,    -1,  1382,   816,  1662,    -1,  1662,    -1,
    1434,  1326,    -1,    35,  1133,    -1,    62,  1133,  1152,    -1,
    1117,  1133,    -1,   508,    -1,   508,   247,    -1,   606,    -1,
     606,   247,    -1,   115,    -1,   649,    -1,   578,  1127,    -1,
     112,  1127,    -1,   123,  1125,    -1,   260,    -1,  1121,    -1,
     189,  1124,    -1,   408,    -1,   279,    -1,   409,    -1,   347,
      -1,   346,    -1,   348,    -1,   205,    -1,    -1,  1386,    -1,
    1326,    -1,  1386,   816,  1326,    -1,  1388,    -1,   811,  1388,
     812,    -1,  1664,    -1,  1388,   816,  1664,    -1,    -1,  1326,
      -1,    -1,   150,  1326,    -1,   633,  1326,   574,  1326,    -1,
    1391,   633,  1326,   574,  1326,    -1,  1402,    -1,  1394,    -1,
     820,   730,  1393,   821,    -1,  1402,    -1,  1394,    -1,  1392,
    1396,  1392,   377,  1326,    -1,  1392,  1396,  1392,   614,   811,
    1427,   812,    -1,  1392,  1397,  1392,   377,  1326,    -1,  1392,
    1397,  1392,   614,   811,  1427,   812,    -1,  1392,  1396,  1392,
      -1,  1392,  1395,  1402,    -1,   354,  1398,   258,    -1,   354,
     476,  1399,   258,    -1,   354,   271,  1399,   258,    -1,   258,
      -1,   238,   258,    -1,   100,   258,    -1,   548,    -1,   271,
    1399,   258,    -1,   476,  1399,   258,    -1,    -1,   238,    -1,
      -1,   390,    -1,    -1,  1401,    -1,   400,   811,  1427,   812,
      -1,  1405,    -1,  1404,    -1,  1407,    -1,  1406,    -1,  1403,
      -1,  1408,    -1,   811,  1403,   812,    -1,   811,  1310,   816,
    1392,   812,    -1,   811,  1404,   812,    -1,   811,  1405,   812,
      -1,  1667,  1400,  1433,  1423,    -1,   811,  1406,   812,    -1,
     811,  1394,   812,    -1,  1791,  1433,  1441,    -1,   719,  1791,
    1433,  1441,    -1,   699,   811,  1326,   816,  1648,  1409,   812,
    1433,    -1,    73,   811,  1410,   812,    -1,  1411,    -1,  1410,
     816,  1411,    -1,  1678,   194,   701,    -1,  1678,  1115,  1148,
    1412,   702,  1648,  1414,    -1,   700,   702,  1648,  1409,    -1,
      -1,   171,    -1,    -1,  1415,    -1,  1416,    -1,  1415,  1416,
      -1,  1413,    -1,  1416,  1415,    -1,  1417,   377,   698,    -1,
    1417,   377,   162,    -1,   162,    -1,   371,    -1,   125,  1651,
      -1,    -1,   194,   258,    -1,   194,   387,    48,    -1,   194,
     212,    48,    -1,   192,    -1,   231,    -1,  1419,  1164,  1418,
     811,  1426,   812,    -1,   613,  1164,  1418,   811,  1424,   812,
      -1,  1420,    -1,  1421,  1420,    -1,    -1,  1421,    -1,  1422,
      -1,    -1,  1426,    -1,  1678,    -1,   417,    -1,  1425,    -1,
    1426,   816,  1425,    -1,  1428,    -1,  1678,    -1,  1428,   816,
    1678,    -1,  1430,    -1,   116,    -1,   117,    -1,   118,    -1,
     119,    -1,   223,    -1,   224,    -1,   225,    -1,   336,    -1,
     337,    -1,   489,    -1,   648,    -1,   120,    -1,   631,    -1,
     226,    -1,   338,    -1,   345,    -1,   426,    -1,   490,    -1,
     334,    -1,   649,    -1,   115,    -1,   578,    -1,   575,    -1,
     112,    -1,    -1,    21,    -1,    -1,  1432,  1678,    -1,    -1,
      13,    -1,    -1,  1436,    -1,   634,  1326,    -1,    -1,   217,
    1326,    -1,   636,  1439,    -1,   636,   659,  1439,    -1,  1439,
     816,  1440,    -1,  1440,    -1,  1678,  1441,    21,  1791,    -1,
      -1,   811,  1442,   812,    -1,  1678,    -1,  1442,   816,  1678,
      -1,    -1,   697,  1444,    -1,  1445,    -1,  1444,   816,  1445,
      -1,  1363,    21,  1364,    -1,    -1,   212,    48,  1447,  1448,
      -1,  1447,   816,  1663,    -1,  1663,    -1,    -1,   638,    -1,
    1449,   816,  1450,    -1,  1450,    -1,  1665,  1454,    -1,    -1,
    1452,    -1,   387,    48,  1453,    -1,  1453,   816,  1662,    -1,
    1662,    -1,    -1,  1455,    -1,    22,    -1,   131,    -1,    -1,
    1457,    -1,   276,  1458,    -1,  1459,    -1,  1459,   816,  1459,
      -1,  1459,   376,  1459,    -1,  1678,    -1,  1650,    -1,   593,
      -1,   290,    -1,   372,    -1,    -1,   276,  1459,    -1,   372,
      -1,   219,    -1,   290,    -1,   593,    -1,   122,    -1,   188,
      -1,   372,    -1,   219,    -1,   290,    -1,   593,    -1,  1465,
      -1,   372,    -1,   593,    -1,   290,    -1,   122,    -1,   188,
      -1,   372,    -1,   219,    -1,   593,    -1,   290,    -1,  1465,
      -1,  1466,    -1,   122,    -1,   188,    -1,  1467,   816,  1468,
      -1,  1468,    -1,   815,  1682,    -1,  1682,    -1,   246,  1470,
      -1,   391,  1674,  1144,  1632,  1635,    -1,   146,  1674,    -1,
    1467,    -1,   143,  1322,    -1,   144,  1492,  1726,  1490,  1488,
    1240,    -1,   144,   235,  1678,   377,  1667,  1233,    -1,   144,
     108,  1490,  1678,    -1,   144,   200,  1490,  1678,   817,  1678,
      -1,   144,   200,  1490,  1678,    -1,   144,   707,   212,  1678,
    1850,    -1,   144,   419,  1490,   918,    -1,   144,   611,  1490,
    1753,    -1,   144,   627,  1490,  1488,  1240,    -1,   144,   167,
    1490,   918,    -1,   144,   586,  1490,   918,    -1,   144,   563,
    1678,  1493,    -1,   144,   599,   563,  1678,  1028,    -1,   144,
     286,   212,  1678,  1493,    -1,   144,   498,  1490,  1682,    -1,
     144,   518,   716,   708,  1490,  1464,    -1,   144,   653,  1490,
    1754,    -1,  1667,    -1,  1488,   816,  1667,    -1,  1668,    -1,
    1489,   816,  1668,    -1,    -1,   230,   171,    -1,    -1,   231,
     604,   611,    -1,    -1,   568,    -1,    -1,  1494,    -1,  1495,
      -1,  1494,  1093,  1495,    -1,  1049,    -1,  1051,    -1,   241,
    1498,  1239,  1500,  1667,  1400,  1501,  1516,  1517,    -1,   241,
    1498,  1239,  1500,  1667,  1400,   500,  1520,  1516,  1517,    -1,
     241,  1498,  1239,  1500,  1667,  1400,  1502,  1517,    -1,   455,
    1499,  1500,  1667,  1400,  1501,    -1,   455,  1499,  1500,  1667,
    1400,   500,  1520,    -1,   455,  1499,  1500,  1667,  1400,  1502,
      -1,    -1,   293,    -1,   128,    -1,   220,    -1,  1522,    -1,
     128,    -1,    -1,   246,    -1,  1504,    -1,   811,   812,  1504,
      -1,   811,  1503,   812,  1504,    -1,  1505,    -1,   811,   812,
    1505,    -1,   811,  1503,   812,  1505,    -1,  1503,   816,  1660,
      -1,  1660,    -1,  1506,  1507,    -1,  1302,    -1,  1302,  1316,
      -1,   620,    -1,   619,    -1,  1507,   816,  1511,    -1,  1511,
      -1,  1508,   816,  1512,    -1,  1512,    -1,   160,    -1,   501,
      -1,    -1,  1509,    -1,   811,  1513,   812,    -1,   483,   811,
    1513,   812,    -1,    -1,  1514,    -1,  1514,   816,  1515,    -1,
    1515,    -1,  1326,    -1,   125,    -1,    -1,    21,  1678,  1441,
      -1,    -1,   377,   147,   263,   608,  1520,    -1,  1519,   608,
    1522,  1239,  1310,   500,  1520,  1435,  1451,  1460,    -1,    -1,
    1438,    -1,  1520,   816,  1521,    -1,  1521,    -1,  1665,  1509,
    1515,    -1,    -1,   293,    -1,  1519,   130,  1525,   197,  1667,
    1433,  1400,  1435,  1451,  1460,    -1,  1519,   130,  1525,  1489,
     197,  1310,  1435,    -1,  1519,   130,  1525,   197,  1489,   614,
    1310,  1435,    -1,    -1,   817,   805,    -1,    -1,  1526,  1525,
      -1,   428,    -1,   293,    -1,   231,    -1,   589,  1528,  1667,
      -1,    -1,   565,    -1,    -1,  1530,    -1,  1531,    -1,  1530,
     816,  1531,    -1,    98,    -1,   331,    -1,    43,   252,    -1,
      94,   560,    -1,   395,   181,    -1,   253,    -1,   559,    -1,
     517,    -1,    13,    -1,    -1,   194,   427,   372,    -1,   505,
     109,  1587,    -1,   505,  1583,   562,  1580,  1587,    -1,   505,
    1581,   585,  1580,  1587,    -1,   505,   166,  1580,  1587,    -1,
     505,   565,   542,  1580,  1587,    -1,   505,   380,   562,  1580,
    1587,    -1,   505,   407,    -1,   505,   158,  1577,   287,    -1,
     505,   158,  1577,   349,    -1,   505,   158,  1577,   542,    -1,
     505,  1583,    73,  1584,  1667,  1580,  1587,    -1,   505,  1578,
     287,    -1,   505,   510,   222,    -1,   505,   754,    -1,   505,
      36,   166,  1585,  1586,  1456,    -1,   505,   443,   166,  1585,
    1586,  1456,   893,    -1,   505,  1582,  1166,  1584,  1667,  1580,
    1435,    -1,   505,  1579,   157,    -1,   505,    97,   811,   805,
     812,   630,    -1,   505,    97,   811,   805,   812,   163,    -1,
     505,   630,  1456,    -1,   505,   163,  1456,    -1,   505,   423,
      -1,   505,   422,  1529,  1532,  1456,    -1,   505,  1709,   542,
    1587,    -1,   505,  1581,   421,    -1,   505,  1709,   623,  1587,
      -1,   505,  1142,  1587,    -1,   505,    72,  1587,    -1,   505,
     418,    -1,   505,   211,    -1,   505,   211,   194,  1685,    -1,
     505,   211,   194,  1685,   614,  1753,    -1,   505,    99,   108,
    1090,  1678,    -1,   505,    99,   565,  1667,    -1,   505,    99,
     627,  1667,    -1,   505,   315,   542,    -1,   505,  1251,   542,
     893,    -1,   505,    99,   419,   918,    -1,   505,    99,   200,
     918,    -1,   505,    99,   586,   918,    -1,   505,   419,   542,
    1587,    -1,   505,   200,   542,  1587,    -1,   505,   419,    70,
     918,    -1,   505,   200,    70,   918,    -1,   505,    99,   167,
     918,    -1,   505,    99,   611,  1685,    -1,  1682,    -1,    13,
      -1,   315,    -1,    35,    -1,    -1,   546,    -1,    -1,  1584,
    1678,    -1,    -1,   198,    -1,    -1,   176,    -1,    -1,   198,
      -1,   176,    -1,   176,   198,    -1,   197,    -1,   249,    -1,
      -1,   249,  1672,    -1,    -1,   197,  1463,    -1,    -1,   275,
    1673,    -1,  1436,    -1,  1591,  1667,  1594,    -1,  1591,  1593,
    1590,    -1,  1300,    -1,  1496,    -1,  1497,    -1,  1518,    -1,
    1523,    -1,   194,    87,  1462,    -1,   131,    -1,   132,    -1,
      -1,   195,   160,  1682,    -1,    17,  1592,    -1,  1592,    -1,
      -1,  1649,    -1,  1678,    -1,    -1,   190,  1284,  1596,  1597,
      -1,    -1,  1726,  1603,  1598,  1599,    -1,  1601,    -1,    -1,
     636,   432,   285,    -1,    -1,   194,  1600,   175,    -1,  1601,
     816,  1602,    -1,  1602,    -1,   162,   287,    -1,   158,   287,
      -1,   202,   287,    -1,   511,   287,    -1,    35,   287,    -1,
     442,   287,   893,    -1,   222,    -1,   418,    -1,   287,    -1,
     542,    -1,   467,    -1,   382,    -1,    -1,  1488,    -1,    -1,
     465,  1605,  1606,    -1,   465,   652,  1607,    -1,  1606,   816,
    1609,    -1,  1609,    -1,    -1,  1490,  1608,    -1,  1678,    -1,
    1678,   817,  1678,    -1,   125,   817,  1678,    -1,    -1,   510,
    1610,  1613,   893,    -1,    -1,   753,  1611,  1613,   893,    -1,
      -1,   315,  1612,  1614,    -1,    -1,    13,    -1,    -1,   582,
    1464,    -1,    -1,   425,  1616,  1617,    -1,  1578,   287,  1618,
      -1,   582,  1672,    -1,    31,  1326,    -1,   264,  1620,  1326,
      -1,    -1,    87,    -1,   427,    -1,   613,  1678,    -1,   281,
    1623,  1626,  1625,  1624,  1627,  1674,  1628,  1629,  1630,   246,
     565,  1667,  1400,  1144,  1638,  1632,  1635,  1639,  1641,  1644,
    1647,    -1,   111,    -1,   646,    -1,    -1,   282,    -1,    -1,
     197,    -1,    -1,    85,    -1,   293,    -1,   236,    -1,   796,
      -1,    -1,    97,   372,    -1,  1669,   372,    -1,    -1,   249,
     417,   263,   387,    -1,    -1,  1631,    -1,   455,    -1,   231,
      -1,    -1,    73,  1633,    -1,  1633,  1634,    -1,  1634,    -1,
     570,    48,  1649,    -1,   385,   153,    48,  1649,    -1,   153,
      48,  1649,    -1,   164,    48,  1649,    -1,    -1,   278,  1636,
      -1,  1636,  1637,    -1,  1637,    -1,   570,    48,  1649,    -1,
     536,    48,  1649,    -1,    -1,   481,   228,    48,  1649,    -1,
      -1,   231,   372,  1640,    -1,   278,    -1,   481,    -1,    -1,
     811,  1642,   812,    -1,   811,   812,    -1,  1642,   816,  1643,
      -1,  1643,    -1,  1665,    -1,   815,  1682,    -1,    -1,   500,
    1645,    -1,  1645,   816,  1646,    -1,  1646,    -1,  1665,  1509,
    1515,    -1,    -1,    12,   160,   795,    -1,   571,    -1,   355,
      -1,   596,   571,    -1,  1648,  1673,    -1,  1673,    -1,   219,
      -1,    37,    -1,   396,    -1,  1654,    -1,   804,  1656,    -1,
     803,  1656,    -1,  1651,    -1,  1653,    -1,   371,    -1,  1648,
      -1,  1656,    -1,  1658,    -1,   179,    -1,   588,    -1,   219,
      -1,    37,    -1,   596,   219,    -1,   596,    37,    -1,  1654,
      -1,  1653,    -1,  1657,    -1,   122,    -1,   188,    -1,   372,
      -1,   290,    -1,   593,    -1,   115,   571,    -1,   578,   571,
      -1,   575,   571,    -1,    -1,   245,    -1,  1665,    -1,  1678,
     817,   805,    -1,  1678,   817,  1678,   817,   805,    -1,  1326,
    1454,    -1,  1326,    -1,  1678,    -1,  1666,    -1,  1678,    -1,
    1666,    -1,  1678,   817,  1678,    -1,  1678,   817,  1678,   817,
    1678,    -1,  1678,    -1,  1678,   817,  1678,    -1,  1678,  1524,
      -1,  1678,   817,  1678,  1524,    -1,   227,    -1,   229,    -1,
    1672,    -1,  1670,    -1,   571,    -1,   571,    -1,   571,    -1,
     571,    -1,  1672,    -1,   219,    -1,   571,    -1,  1669,    -1,
    1688,    -1,  1669,    -1,  1694,    -1,  1669,    -1,  1691,    -1,
    1669,    -1,  1695,    -1,  1678,    -1,  1672,    -1,   274,    -1,
    1679,    -1,  1672,    -1,   274,    -1,  1682,    -1,  1682,   815,
    1682,    -1,  1684,    -1,   104,  1325,    -1,  1683,    -1,  1683,
     815,  1682,    -1,  1678,    -1,  1693,    -1,  1689,    -1,  1690,
      -1,  1692,    -1,  1696,    -1,   170,    -1,   712,    -1,   506,
      -1,    23,    -1,    32,    -1,    49,    -1,    50,    -1,    61,
      -1,    63,    -1,   675,    -1,    77,    -1,    79,    -1,    93,
      -1,   121,    -1,   143,    -1,   154,    -1,   190,    -1,   191,
      -1,   215,    -1,   218,    -1,   233,    -1,   244,    -1,   265,
      -1,   368,    -1,   412,    -1,   414,    -1,   452,    -1,   465,
      -1,   477,    -1,   486,    -1,   508,    -1,   510,    -1,   538,
      -1,   545,    -1,   589,    -1,   600,    -1,   601,    -1,   644,
      -1,  1693,    -1,  1692,    -1,  1696,    -1,   167,    -1,   183,
      -1,   364,    -1,   420,    -1,   424,    -1,   448,    -1,   456,
      -1,   707,    -1,   557,    -1,     6,    -1,     5,    -1,   717,
      -1,     8,    -1,   654,    -1,     9,    -1,    10,    -1,    11,
      -1,    12,    -1,    15,    -1,    20,    -1,   720,    -1,    25,
      -1,   747,    -1,   785,    -1,    26,    -1,    27,    -1,    28,
      -1,    29,    -1,    30,    -1,    36,    -1,    40,    -1,    43,
      -1,    44,    -1,    45,    -1,    47,    -1,   673,    -1,   795,
      -1,    53,    -1,    56,    -1,    57,    -1,   792,    -1,    59,
      -1,    60,    -1,    65,    -1,    66,    -1,    67,    -1,    68,
      -1,    69,    -1,    70,    -1,    72,    -1,    73,    -1,    75,
      -1,    76,    -1,    78,    -1,    80,    -1,    81,    -1,   658,
      -1,    82,    -1,    83,    -1,    85,    -1,    87,    -1,    88,
      -1,    90,    -1,    91,    -1,    92,    -1,    94,    -1,    98,
      -1,   103,    -1,   106,    -1,   110,    -1,   111,    -1,   112,
      -1,   115,    -1,   120,    -1,   126,    -1,   127,    -1,   713,
      -1,   129,    -1,   714,    -1,   135,    -1,   136,    -1,   137,
      -1,   138,    -1,   139,    -1,   146,    -1,   147,    -1,   148,
      -1,   152,    -1,    84,    -1,   155,    -1,   729,    -1,   157,
      -1,   158,    -1,   748,    -1,   159,    -1,   163,    -1,   162,
      -1,   165,    -1,   166,    -1,   168,    -1,   169,    -1,   678,
      -1,   173,    -1,   174,    -1,   175,    -1,   176,    -1,   177,
      -1,   786,    -1,   739,    -1,   180,    -1,   181,    -1,   184,
      -1,   185,    -1,   787,    -1,   186,    -1,   187,    -1,   680,
      -1,   195,    -1,   196,    -1,   198,    -1,   202,    -1,   797,
      -1,   205,    -1,   206,    -1,   207,    -1,   711,    -1,   756,
      -1,   211,    -1,   204,    -1,   793,    -1,   216,    -1,   672,
      -1,   703,    -1,   222,    -1,   221,    -1,   226,    -1,   228,
      -1,   232,    -1,   718,    -1,   234,    -1,   237,    -1,   791,
      -1,   788,    -1,   242,    -1,   243,    -1,   655,    -1,   248,
      -1,   252,    -1,   253,    -1,   255,    -1,   256,    -1,   260,
      -1,   745,    -1,   262,    -1,   784,    -1,   266,    -1,   269,
      -1,   272,    -1,   273,    -1,   279,    -1,   280,    -1,   668,
      -1,   284,    -1,   286,    -1,   287,    -1,   295,    -1,   733,
      -1,   297,    -1,   298,    -1,   317,    -1,   299,    -1,   731,
      -1,   300,    -1,   301,    -1,   302,    -1,   303,    -1,   710,
      -1,   304,    -1,   305,    -1,   307,    -1,   308,    -1,   309,
      -1,   311,    -1,   310,    -1,   312,    -1,   313,    -1,   315,
      -1,   736,    -1,   306,    -1,   316,    -1,   734,    -1,   319,
      -1,   320,    -1,   321,    -1,   322,    -1,   324,    -1,   325,
      -1,   330,    -1,   721,    -1,   331,    -1,   332,    -1,   333,
      -1,   334,    -1,   335,    -1,   338,    -1,   339,    -1,   341,
      -1,   343,    -1,   345,    -1,   346,    -1,   347,    -1,   348,
      -1,   349,    -1,   350,    -1,   351,    -1,   352,    -1,   353,
      -1,   356,    -1,   357,    -1,   700,    -1,   360,    -1,   361,
      -1,   362,    -1,   363,    -1,   669,    -1,   369,    -1,   687,
      -1,   373,    -1,   375,    -1,   742,    -1,   376,    -1,   730,
      -1,   728,    -1,   378,    -1,   379,    -1,   380,    -1,   722,
      -1,   383,    -1,   701,    -1,   715,    -1,   688,    -1,   393,
      -1,   394,    -1,   395,    -1,   397,    -1,   399,    -1,   402,
      -1,   401,    -1,   403,    -1,   738,    -1,   702,    -1,   404,
      -1,   407,    -1,   405,    -1,   406,    -1,   408,    -1,   409,
      -1,   410,    -1,   691,    -1,   415,    -1,   416,    -1,   418,
      -1,   735,    -1,   421,    -1,   423,    -1,   422,    -1,   426,
      -1,   427,    -1,   428,    -1,   732,    -1,   431,    -1,   435,
      -1,   436,    -1,   438,    -1,   439,    -1,   716,    -1,   789,
      -1,   442,    -1,   443,    -1,   444,    -1,   445,    -1,   446,
      -1,   449,    -1,   755,    -1,   451,    -1,   453,    -1,   754,
      -1,   457,    -1,   459,    -1,   458,    -1,   460,    -1,   463,
      -1,   461,    -1,   462,    -1,   753,    -1,   737,    -1,   740,
      -1,   467,    -1,   693,    -1,   468,    -1,   470,    -1,   727,
      -1,   471,    -1,   743,    -1,   472,    -1,   704,    -1,   474,
      -1,   653,    -1,   478,    -1,   479,    -1,   480,    -1,   484,
      -1,   482,    -1,   485,    -1,   487,    -1,   488,    -1,   724,
      -1,   749,    -1,   725,    -1,   723,    -1,   726,    -1,   490,
      -1,   491,    -1,   495,    -1,   496,    -1,   498,    -1,   502,
      -1,   509,    -1,   667,    -1,   511,    -1,   513,    -1,   514,
      -1,   515,    -1,   516,    -1,   757,    -1,   758,    -1,   759,
      -1,   750,    -1,   760,    -1,   761,    -1,   762,    -1,   763,
      -1,   764,    -1,   765,    -1,   766,    -1,   767,    -1,   768,
      -1,   769,    -1,   772,    -1,   771,    -1,   773,    -1,   774,
      -1,   776,    -1,   775,    -1,   777,    -1,   770,    -1,   778,
      -1,   517,    -1,   779,    -1,   780,    -1,   781,    -1,   782,
      -1,   523,    -1,   524,    -1,   525,    -1,   527,    -1,   530,
      -1,   533,    -1,   705,    -1,   535,    -1,   537,    -1,   539,
      -1,   540,    -1,   541,    -1,   542,    -1,   546,    -1,   741,
      -1,   549,    -1,   783,    -1,   550,    -1,   551,    -1,   552,
      -1,   553,    -1,   554,    -1,   558,    -1,   559,    -1,   560,
      -1,   562,    -1,   563,    -1,   566,    -1,   567,    -1,   568,
      -1,   569,    -1,   572,    -1,   573,    -1,   706,    -1,   695,
      -1,   576,    -1,   577,    -1,   575,    -1,   578,    -1,   746,
      -1,   584,    -1,   585,    -1,   590,    -1,   591,    -1,   696,
      -1,   594,    -1,   595,    -1,   597,    -1,   598,    -1,   604,
      -1,   790,    -1,   607,    -1,   609,    -1,   796,    -1,   611,
      -1,   612,    -1,   618,    -1,   620,    -1,   623,    -1,   709,
      -1,   627,    -1,   656,    -1,   629,    -1,   630,    -1,   631,
      -1,   632,    -1,   639,    -1,   640,    -1,   641,    -1,   643,
      -1,   645,    -1,   646,    -1,   649,    -1,   751,    -1,  1693,
      -1,  1690,    -1,  1696,    -1,  1693,    -1,  1689,    -1,  1690,
      -1,  1692,    -1,   209,    -1,   282,    -1,   652,    -1,   671,
      -1,   497,    -1,   500,  1698,    -1,  1713,  1705,    -1,   584,
    1716,    -1,  1708,  1704,    -1,   403,  1509,  1675,  1206,  1755,
      -1,   403,   582,   732,  1206,  1755,    -1,   403,   194,  1685,
    1509,  1675,  1206,  1755,    -1,   403,   194,  1685,   582,   732,
    1206,  1755,    -1,   500,   653,  1754,    -1,   500,   653,   364,
      -1,   500,   653,   125,    -1,   500,   125,   653,  1754,   582,
    1754,    -1,   500,   125,   653,   364,   582,  1754,    -1,   500,
     125,   653,    13,   582,  1754,    -1,   500,   653,    13,  1700,
      -1,    -1,   657,  1754,    -1,   500,   707,   212,  1678,    -1,
     500,   707,   212,  1678,   194,  1703,    -1,  1462,    -1,  1702,
    1093,  1462,    -1,  1702,    -1,  1712,  1705,    -1,   584,  1716,
      -1,    -1,   816,  1706,    -1,  1707,    -1,  1706,   816,  1707,
      -1,  1708,  1712,    -1,  1713,    -1,   209,    -1,   652,    -1,
     671,    -1,   282,    -1,   497,    -1,    -1,   209,    -1,   282,
      -1,   497,    -1,    -1,   209,   817,    -1,   282,   817,    -1,
     497,   817,    -1,    -1,   652,   817,    -1,   671,   817,    -1,
     209,   817,    -1,   282,   817,    -1,   497,   817,    -1,  1714,
    1509,  1723,    -1,  1714,  1509,  1723,    -1,   815,  1682,  1509,
    1326,    -1,   815,   815,  1711,  1714,  1509,  1723,    -1,  1142,
    1146,    -1,   351,  1509,  1326,    -1,   351,  1143,  1148,    -1,
     351,   125,    -1,  1681,    -1,  1681,   817,  1678,    -1,   125,
     817,  1678,    -1,  1682,    -1,  1682,   817,  1678,    -1,  1717,
    1720,    -1,  1719,  1718,    -1,  1721,    -1,    -1,   816,  1717,
      -1,   255,   273,  1722,    -1,    -1,   816,  1719,    -1,   432,
     379,    -1,   432,   642,    -1,   432,   594,    -1,   432,    78,
      -1,   453,   432,    -1,   495,    -1,  1326,    -1,   125,    -1,
     377,    -1,    13,    -1,    35,    -1,   483,    -1,   708,    -1,
      -1,   285,  1726,  1725,  1727,    -1,   285,   243,   194,    30,
      -1,   565,    -1,   562,    -1,  1728,    -1,  1727,   816,  1728,
      -1,  1667,  1433,  1729,    -1,   432,    -1,   642,    -1,   293,
     642,    -1,   432,   282,    -1,    -1,   605,  1731,  1726,    -1,
     605,   243,    -1,   506,    -1,   712,    -1,    14,   243,  1735,
      -1,   479,  1682,   315,   263,    -1,   448,   746,    -1,   448,
     746,   368,   477,   377,   162,    -1,   448,   746,   194,    60,
    1678,    -1,   448,   746,   194,    60,  1678,   368,   477,   377,
     162,    -1,   152,  1678,  1678,    -1,   137,  1678,  1678,    -1,
     448,   784,    -1,   215,  1667,   380,  1433,    -1,   215,  1678,
      68,    -1,   215,  1678,   432,  1737,  1435,  1456,    -1,   215,
    1678,   432,  1678,  1738,  1435,  1456,    -1,   215,  1678,   432,
    1678,  1739,   811,  1514,   812,  1435,  1456,    -1,   186,    -1,
     362,    -1,   186,    -1,   362,    -1,   416,    -1,   266,    -1,
     160,    -1,   201,    -1,   267,    -1,   214,    -1,   294,    -1,
     475,  1490,  1746,   197,  1753,  1491,    -1,   475,  1490,  1746,
     377,  1744,  1752,   197,  1753,  1491,    -1,    -1,   475,  1490,
      13,  1745,  1741,   377,  1744,  1752,   197,  1753,  1491,    -1,
     475,  1490,    13,  1745,   816,   210,   384,   197,  1753,  1491,
      -1,   475,  1490,   424,   377,  1685,   197,  1753,  1491,    -1,
     210,  1746,   582,  1753,  1748,    -1,   210,  1746,   377,  1744,
    1752,   582,  1753,  1775,  1778,    -1,    -1,   210,    13,  1745,
    1743,   377,  1744,  1752,   582,  1753,  1775,  1778,    -1,   210,
     424,   377,  1685,   582,  1753,  1776,    -1,    -1,   565,    -1,
     200,    -1,   419,    -1,    -1,   418,    -1,  1747,    -1,  1746,
     816,  1747,    -1,  1683,  1772,    -1,  1683,   815,  1682,    -1,
     492,  1772,    -1,   241,  1772,    -1,   608,  1772,    -1,   440,
    1772,    -1,   130,    -1,   610,    -1,   235,    -1,    14,    -1,
      99,    -1,   144,    -1,   170,    -1,   448,    -1,   506,    -1,
     420,    -1,   183,    -1,   210,   384,    -1,   505,   109,    -1,
     557,    -1,    99,   568,   562,    -1,   285,   562,    -1,   456,
     510,    -1,   456,    67,    -1,    99,   627,    -1,   505,   627,
      -1,    99,   480,    -1,    14,   480,    -1,    99,   611,    -1,
     167,    -1,   586,    -1,    99,   563,    -1,    99,   653,    -1,
     144,   653,    -1,    -1,   636,   654,   384,    -1,    -1,    19,
      -1,  1751,  1749,  1750,    -1,  1751,    -1,   552,   571,    -1,
     256,   571,    -1,    65,   571,    -1,   805,    -1,  1687,   817,
     805,    -1,   805,   817,   805,    -1,  1678,    -1,  1687,   817,
    1678,    -1,  1685,    -1,  1753,   816,  1685,    -1,  1686,    -1,
    1754,   816,  1686,    -1,    -1,   727,   103,   403,    -1,    -1,
     138,   728,   403,    -1,  1769,   788,   789,    -1,  1769,   790,
      -1,  1769,   787,   789,   500,   792,    21,  1676,    -1,  1685,
    1760,  1759,    -1,  1685,  1763,  1767,    -1,  1685,  1759,    -1,
      -1,    19,  1760,    -1,    19,  1760,    19,  1760,    -1,  1761,
      -1,  1762,    -1,  1763,    -1,  1764,    -1,  1765,    -1,  1766,
      -1,   228,    48,  1675,    -1,   228,    48,   732,   403,    -1,
     228,   636,  1682,    -1,   228,   636,  1682,    21,  1676,    -1,
     228,   636,  1682,    48,  1675,    -1,   228,   636,  1682,    48,
     732,   403,    -1,   791,   785,  1762,    -1,   791,   785,  1764,
      -1,   791,   785,  1761,    -1,  1685,  1761,   455,  1675,  1755,
      -1,  1685,  1765,   455,  1675,  1755,    -1,  1685,  1761,  1755,
      -1,  1685,  1762,  1755,    -1,  1685,  1762,   455,  1675,  1755,
      -1,  1685,  1763,    -1,  1685,  1764,  1755,    -1,  1685,  1765,
    1755,    -1,  1685,  1766,  1755,    -1,  1685,  1756,    -1,  1685,
       7,  1769,  1760,    -1,  1685,     7,  1769,  1760,     7,  1769,
    1760,    -1,  1685,   343,  1769,  1760,    -1,  1685,   343,  1769,
    1760,   343,  1769,  1760,    -1,  1685,   144,  1769,    -1,  1685,
     144,  1769,   144,  1769,    -1,   372,   786,    -1,  1758,    -1,
    1770,   816,  1758,    -1,  1768,    -1,  1771,   816,  1768,    -1,
      -1,   811,  1773,   812,    -1,  1678,    -1,  1773,   816,  1678,
      -1,    -1,   464,  1750,    -1,   464,   534,    -1,   464,   643,
      -1,   464,   364,    -1,    -1,   636,   210,   384,    -1,    -1,
     636,   210,   384,    -1,    -1,   636,   653,  1754,    -1,   636,
     653,    13,  1700,    -1,   636,   653,   364,    -1,   636,   653,
     125,    -1,    -1,    21,  1685,  1777,    -1,    -1,    32,  1780,
    1781,    -1,    -1,   640,    -1,    -1,    19,   368,    57,    -1,
      19,    57,    -1,    -1,   447,    -1,   368,   447,    -1,    -1,
     486,    -1,    79,  1781,  1782,  1783,    -1,   477,  1781,  1782,
    1783,    -1,   477,  1781,   582,  1784,  1678,    -1,   486,  1678,
      -1,   447,   486,  1678,    -1,    -1,   140,    -1,    13,    -1,
    1792,    -1,  1792,    -1,  1304,    -1,   548,    -1,   220,    -1,
     140,    -1,   531,    -1,   526,    -1,   527,    -1,   529,    -1,
      13,    -1,    -1,  1800,  1794,  1796,    -1,  1799,  1794,  1797,
      -1,  1801,  1798,  1794,  1805,    -1,  1805,    -1,  1811,    -1,
    1819,    -1,  1814,    -1,   905,    -1,  1805,    -1,  1811,    -1,
    1819,    -1,  1814,    -1,  1813,    -1,   905,    -1,  1799,    -1,
    1800,    -1,    -1,   127,   160,  1685,    -1,  1802,    -1,  1802,
    1803,    -1,  1803,    -1,   389,   455,    -1,    12,   160,   595,
      -1,    12,   160,   332,    -1,    12,   160,   569,    -1,    -1,
     532,   491,   127,    -1,   532,   491,   248,    -1,    -1,  1804,
     627,  1667,  1441,  1806,    21,  1807,    -1,  1505,  1808,    -1,
      -1,   636,    64,   384,    -1,   636,    53,    64,   384,    -1,
     636,   282,    64,   384,    -1,   191,    -1,   412,    -1,    -1,
    1809,  1682,    -1,    -1,   586,  1090,   918,  1018,  1019,   377,
    1667,   194,   149,   483,  1810,  1812,   967,    -1,    11,   200,
    1090,  1678,   472,  1101,   515,  1672,    -1,   200,  1090,  1678,
     472,  1101,   515,  1672,    -1,    -1,    -1,    -1,    -1,   200,
    1090,   918,   811,  1815,   926,   812,  1816,   472,  1115,  1148,
    1817,   920,  1818,   967,    -1,    -1,    -1,    -1,    -1,   419,
    1090,   918,  1820,   811,  1821,   929,   812,  1822,   920,  1823,
     967,    -1,   644,  1827,  1826,  1828,    -1,   644,   154,  1826,
    1830,    -1,   644,   414,  1826,    -1,   644,    79,  1826,  1829,
      -1,   644,   477,  1826,    -1,   644,   436,  1825,    -1,    -1,
      96,   645,    -1,  1649,    -1,  1649,   816,  1649,    -1,  1649,
     816,  1649,   816,  1461,    -1,    32,    -1,   538,    -1,    -1,
     258,    -1,   470,    -1,    -1,   378,   404,    -1,    -1,   558,
      -1,   558,   194,   335,    -1,    -1,   209,    -1,   652,    -1,
    1326,    -1,   377,    -1,  1831,  1714,  1509,  1832,    -1,  1833,
      -1,  1834,   816,  1833,    -1,    -1,   500,  1834,    -1,   244,
     406,  1678,   515,  1672,    -1,   244,   658,  1838,  1835,    -1,
     601,   406,  1678,    -1,   601,   658,  1838,    -1,  1672,    -1,
    1838,   816,  1672,    -1,   233,   565,   197,  1838,    -1,   675,
     282,   111,   136,  1510,  1674,    -1,   675,   243,   197,  1685,
     818,  1461,   228,    48,  1672,  1841,    -1,  1842,    -1,   111,
     136,  1510,  1674,  1842,    -1,    -1,   464,   534,    -1,   464,
     368,   534,    -1,   611,    -1,   708,    -1,    -1,   709,  1510,
    1845,    -1,  1846,    -1,  1845,  1093,  1846,    -1,   372,    -1,
     372,   803,   372,    -1,   372,    -1,   803,   372,    -1,    -1,
     706,  1510,  1847,    -1,    -1,   152,    -1,   137,    -1,    -1,
     192,    -1,  1672,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2226,  2226,  2227,  2232,  2242,  2260,  2264,  2272,  2285,
    2284,  2309,  2316,  2318,  2322,  2323,  2328,  2329,  2330,  2331,
    2332,  2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,
    2342,  2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,
    2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,  2360,  2361,
    2362,  2363,  2364,  2365,  2366,  2367,  2368,  2369,  2370,  2371,
    2372,  2373,  2374,  2375,  2376,  2377,  2378,  2379,  2380,  2381,
    2382,  2383,  2384,  2385,  2386,  2387,  2388,  2389,  2390,  2391,
    2392,  2393,  2394,  2395,  2396,  2397,  2398,  2399,  2400,  2401,
    2402,  2403,  2404,  2405,  2406,  2407,  2408,  2409,  2410,  2411,
    2412,  2413,  2414,  2415,  2416,  2417,  2418,  2419,  2420,  2421,
    2422,  2423,  2424,  2425,  2426,  2427,  2428,  2429,  2430,  2431,
    2432,  2433,  2434,  2435,  2436,  2437,  2438,  2439,  2440,  2441,
    2442,  2443,  2444,  2445,  2446,  2447,  2448,  2449,  2450,  2451,
    2452,  2453,  2454,  2455,  2456,  2457,  2458,  2459,  2460,  2461,
    2462,  2466,  2476,  2477,  2481,  2501,  2508,  2519,  2518,  2529,
    2531,  2535,  2536,  2540,  2553,  2552,  2571,  2576,  2581,  2580,
    2597,  2596,  2614,  2615,  2618,  2625,  2632,  2639,  2646,  2653,
    2661,  2670,  2676,  2683,  2690,  2698,  2707,  2713,  2719,  2727,
    2735,  2741,  2748,  2755,  2763,  2775,  2781,  2788,  2795,  2803,
    2813,  2814,  2818,  2824,  2828,  2833,  2837,  2843,  2847,  2852,
    2856,  2861,  2865,  2870,  2874,  2879,  2883,  2888,  2892,  2897,
    2901,  2906,  2910,  2915,  2919,  2924,  2928,  2933,  2937,  2942,
    2946,  2951,  2955,  2960,  2964,  2969,  2973,  2978,  2982,  2987,
    2991,  2996,  3000,  3005,  3009,  3014,  3018,  3023,  3027,  3032,
    3036,  3041,  3045,  3049,  3053,  3057,  3061,  3071,  3075,  3079,
    3084,  3095,  3100,  3104,  3108,  3112,  3113,  3117,  3121,  3125,
    3130,  3134,  3138,  3142,  3148,  3182,  3186,  3190,  3194,  3200,
    3201,  3217,  3218,  3234,  3235,  3252,  3255,  3257,  3258,  3262,
    3268,  3274,  3283,  3287,  3291,  3295,  3302,  3306,  3310,  3324,
    3329,  3337,  3342,  3346,  3351,  3355,  3359,  3375,  3379,  3390,
    3391,  3396,  3406,  3416,  3421,  3429,  3436,  3449,  3448,  3463,
    3465,  3478,  3498,  3517,  3537,  3554,  3559,  3568,  3573,  3585,
    3597,  3611,  3627,  3631,  3638,  3647,  3655,  3666,  3667,  3671,
    3675,  3679,  3683,  3687,  3692,  3696,  3704,  3703,  3735,  3734,
    3743,  3752,  3753,  3759,  3765,  3775,  3781,  3789,  3791,  3800,
    3801,  3805,  3811,  3820,  3821,  3829,  3829,  3887,  3888,  3889,
    3890,  3891,  3892,  3893,  3894,  3895,  3896,  3897,  3898,  3899,
    3903,  3917,  3936,  3937,  3941,  3942,  3947,  3949,  3951,  3953,
    3955,  3957,  3959,  3965,  3966,  3967,  3971,  3975,  3982,  3989,
    3990,  3997,  3999,  4003,  4004,  4008,  4059,  4061,  4065,  4066,
    4070,  4120,  4121,  4122,  4123,  4127,  4128,  4132,  4133,  4138,
    4141,  4165,  4264,  4282,  4281,  4360,  4356,  4433,  4434,  4439,
    4441,  4446,  4469,  4480,  4484,  4506,  4507,  4511,  4515,  4528,
    4534,  4540,  4549,  4562,  4588,  4594,  4595,  4601,  4602,  4607,
    4613,  4626,  4628,  4630,  4636,  4638,  4640,  4642,  4644,  4646,
    4648,  4650,  4652,  4654,  4656,  4658,  4663,  4677,  4694,  4695,
    4697,  4702,  4708,  4717,  4723,  4732,  4740,  4768,  4776,  4778,
    4787,  4792,  4798,  4807,  4815,  4817,  4819,  4821,  4823,  4825,
    4827,  4829,  4831,  4833,  4835,  4837,  4839,  4844,  4864,  4888,
    4892,  4900,  4901,  4902,  4903,  4904,  4905,  4906,  4907,  4908,
    4909,  4910,  4911,  4912,  4917,  4916,  4927,  4927,  4992,  4991,
    5048,  5048,  5070,  5127,  5174,  5198,  5197,  5222,  5244,  5246,
    5247,  5251,  5269,  5290,  5298,  5336,  5290,  5364,  5366,  5367,
    5371,  5372,  5377,  5387,  5376,  5439,  5438,  5452,  5453,  5457,
    5458,  5463,  5471,  5462,  5521,  5529,  5520,  5575,  5588,  5593,
    5592,  5630,  5631,  5636,  5635,  5669,  5669,  5688,  5687,  5735,
    5750,  5758,  5749,  5816,  5824,  5813,  5866,  5868,  5873,  5875,
    5877,  5892,  5893,  5900,  5901,  5908,  5909,  5913,  5919,  5928,
    5929,  5930,  5931,  5932,  5933,  5934,  5935,  5936,  5937,  5938,
    5942,  5943,  5947,  5953,  5962,  5963,  5964,  5965,  5966,  5967,
    5968,  5972,  5973,  5977,  5983,  5992,  5996,  5997,  6001,  6007,
    6016,  6017,  6018,  6019,  6020,  6021,  6022,  6026,  6027,  6031,
    6037,  6046,  6047,  6048,  6052,  6056,  6057,  6061,  6065,  6072,
    6079,  6083,  6090,  6097,  6104,  6111,  6118,  6125,  6132,  6139,
    6143,  6150,  6157,  6164,  6165,  6240,  6246,  6250,  6255,  6260,
    6266,  6274,  6284,  6285,  6299,  6307,  6311,  6315,  6319,  6323,
    6327,  6334,  6335,  6340,  6341,  6359,  6360,  6372,  6373,  6378,
    6387,  6388,  6393,  6399,  6409,  6410,  6422,  6423,  6427,  6433,
    6442,  6451,  6454,  6459,  6467,  6468,  6472,  6476,  6483,  6490,
    6500,  6499,  6517,  6523,  6532,  6533,  6538,  6539,  6543,  6549,
    6558,  6565,  6566,  6570,  6576,  6585,  6587,  6589,  6591,  6593,
    6595,  6597,  6599,  6608,  6609,  6613,  6614,  6635,  6636,  6640,
    6641,  6645,  6650,  6655,  6670,  6671,  6675,  6681,  6690,  6696,
    6704,  6706,  6710,  6714,  6718,  6722,  6726,  6730,  6743,  6747,
    6751,  6755,  6759,  6763,  6767,  6771,  6775,  6793,  6797,  6801,
    6805,  6809,  6813,  6817,  6821,  6825,  6829,  6833,  6837,  6841,
    6845,  6849,  6853,  6867,  6871,  6875,  6879,  6886,  6900,  6904,
    6908,  6912,  6916,  6917,  6918,  6919,  6920,  6921,  6925,  6926,
    6927,  6931,  6932,  6933,  6934,  6938,  6944,  6953,  6954,  6958,
    6965,  6966,  6974,  6980,  6986,  6991,  7001,  7009,  7017,  7021,
    7022,  7026,  7027,  7031,  7032,  7036,  7040,  7044,  7065,  7067,
    7071,  7072,  7073,  7077,  7081,  7085,  7089,  7093,  7097,  7101,
    7105,  7110,  7115,  7124,  7133,  7137,  7141,  7146,  7155,  7159,
    7182,  7186,  7190,  7194,  7198,  7202,  7206,  7207,  7211,  7215,
    7219,  7224,  7229,  7234,  7239,  7244,  7248,  7252,  7257,  7261,
    7268,  7270,  7272,  7274,  7276,  7278,  7280,  7282,  7287,  7288,
    7292,  7293,  7297,  7298,  7299,  7300,  7301,  7305,  7306,  7307,
    7308,  7309,  7313,  7318,  7322,  7324,  7328,  7329,  7330,  7331,
    7336,  7340,  7349,  7353,  7358,  7362,  7371,  7372,  7376,  7377,
    7378,  7386,  7387,  7391,  7395,  7399,  7400,  7401,  7410,  7411,
    7412,  7413,  7416,  7417,  7422,  7426,  7430,  7431,  7435,  7454,
    7473,  7477,  7481,  7485,  7489,  7493,  7497,  7501,  7505,  7509,
    7513,  7517,  7521,  7525,  7529,  7533,  7542,  7547,  7560,  7564,
    7568,  7575,  7576,  7577,  7581,  7582,  7583,  7587,  7593,  7597,
    7601,  7602,  7606,  7615,  7619,  7620,  7624,  7633,  7637,  7638,
    7642,  7648,  7652,  7653,  7657,  7658,  7663,  7667,  7672,  7680,
    7689,  7696,  7707,  7711,  7716,  7721,  7726,  7733,  7739,  7750,
    7751,  7759,  7758,  7770,  7772,  7776,  7791,  7792,  7796,  7803,
    7813,  7814,  7815,  7816,  7821,  7825,  7830,  7835,  7841,  7850,
    7851,  7852,  7853,  7854,  7858,  7859,  7863,  7864,  7868,  7869,
    7873,  7874,  7875,  7879,  7880,  7884,  7885,  7889,  7895,  7904,
    7905,  7919,  7920,  7924,  7930,  7939,  7943,  7944,  7948,  7954,
    7963,  7964,  7969,  7970,  7974,  7978,  7982,  8006,  8007,  8008,
    8012,  8013,  8017,  8018,  8022,  8023,  8027,  8028,  8029,  8033,
    8039,  8049,  8055,  8070,  8076,  8086,  8087,  8096,  8097,  8101,
    8107,  8119,  8129,  8143,  8142,  8163,  8162,  8184,  8183,  8205,
    8204,  8223,  8217,  8240,  8239,  8275,  8297,  8316,  8336,  8344,
    8366,  8390,  8401,  8404,  8416,  8428,  8433,  8445,  8457,  8468,
    8475,  8483,  8484,  8488,  8498,  8508,  8513,  8520,  8529,  8530,
    8534,  8535,  8539,  8545,  8551,  8559,  8574,  8582,  8590,  8597,
    8604,  8611,  8618,  8624,  8630,  8636,  8648,  8660,  8669,  8670,
    8674,  8675,  8679,  8685,  8691,  8697,  8706,  8719,  8720,  8721,
    8722,  8726,  8727,  8739,  8740,  8744,  8745,  8749,  8750,  8765,
    8770,  8778,  8782,  8790,  8794,  8799,  8800,  8809,  8813,  8824,
    8828,  8832,  8836,  8840,  8845,  8850,  8855,  8860,  8867,  8871,
    8875,  8879,  8884,  8889,  8894,  8899,  8903,  8910,  8911,  8915,
    8919,  8926,  8927,  8935,  8942,  8947,  8951,  8956,  8967,  8968,
    8976,  8980,  8984,  8988,  8992,  8996,  9001,  9005,  9009,  9013,
    9017,  9021,  9025,  9029,  9033,  9037,  9042,  9046,  9050,  9054,
    9058,  9062,  9066,  9070,  9074,  9080,  9084,  9091,  9096,  9101,
    9109,  9110,  9115,  9120,  9126,  9135,  9139,  9143,  9160,  9164,
    9168,  9184,  9186,  9190,  9191,  9195,  9196,  9197,  9201,  9202,
    9203,  9207,  9208,  9209,  9210,  9214,  9215,  9223,  9231,  9233,
    9237,  9238,  9242,  9243,  9244,  9248,  9260,  9273,  9280,  9281,
    9285,  9300,  9315,  9299,  9339,  9356,  9359,  9366,  9370,  9377,
    9381,  9385,  9392,  9395,  9402,  9405,  9412,  9415,  9422,  9425,
    9433,  9436,  9443,  9447,  9454,  9458,  9466,  9470,  9495,  9496,
    9497,  9502,  9507,  9514,  9528,  9529,  9530,  9534,  9543,  9544,
    9548,  9549,  9557,  9558,  9559,  9563,  9580,  9584,  9600,  9609,
    9614,  9623,  9633,  9641,  9649,  9650,  9654,  9655,  9663,  9665,
    9667,  9669,  9671,  9673,  9678,  9685,  9686,  9687,  9692,  9691,
    9697,  9704,  9709,  9717,  9718,  9722,  9735,  9739,  9748,  9754,
    9763,  9770,  9771,  9775,  9780,  9787,  9793,  9802,  9809,  9816,
    9817,  9827,  9828,  9832,  9836,  9841,  9877,  9881,  9885,  9889,
    9928,  9934,  9944,  9948,  9952,  9957,  9962,  9970,  9971,  9975,
    9980,  9984,  9996, 10018, 10042, 10043, 10047, 10051, 10052, 10056,
   10062, 10071, 10078, 10090, 10093, 10097, 10102, 10106, 10110, 10119,
   10125, 10134, 10138, 10142, 10149, 10150, 10154, 10158, 10159, 10163,
   10164, 10168, 10174, 10180, 10190, 10191, 10199, 10200, 10201, 10202,
   10203, 10207, 10208, 10213, 10219, 10224, 10230, 10234, 10238, 10242,
   10246, 10250, 10254, 10258, 10262, 10266, 10270, 10274, 10287, 10291,
   10295, 10300, 10304, 10311, 10315, 10324, 10328, 10332, 10336, 10344,
   10348, 10352, 10357, 10362, 10370, 10378, 10382, 10383, 10387, 10391,
   10395, 10399, 10403, 10407, 10411, 10415, 10419, 10423, 10427, 10431,
   10435, 10439, 10443, 10447, 10448, 10452, 10453, 10460, 10461, 10465,
   10466, 10470, 10471, 10472, 10473, 10474, 10475, 10476, 10480, 10481,
   10485, 10486, 10487, 10488, 10489, 10490, 10495, 10496, 10497, 10498,
   10499, 10500, 10501, 10505, 10509, 10513, 10517, 10521, 10525, 10526,
   10530, 10534, 10538, 10542, 10546, 10551, 10555, 10559, 10567, 10571,
   10575, 10579, 10583, 10587, 10592, 10599, 10610, 10611, 10621, 10625,
   10629, 10633, 10637, 10641, 10645, 10649, 10653, 10657, 10664, 10668,
   10672, 10676, 10680, 10684, 10688, 10692, 10696, 10701, 10706, 10711,
   10715, 10719, 10723, 10727, 10732, 10736, 10755, 10759, 10763, 10767,
   10771, 10776, 10781, 10785, 10789, 10794, 10798, 10802, 10806, 10810,
   10814, 10818, 10822, 10827, 10831, 10835, 10839, 10843, 10854, 10857,
   10868, 10872, 10876, 10880, 10884, 10888, 10892, 10896, 10900, 10904,
   10908, 10912, 10916, 10920, 10924, 10928, 10932, 10936, 10940, 10944,
   10948, 10952, 10956, 10960, 10966, 10972, 10978, 10984, 10990, 10994,
   11012, 11016, 11023, 11025, 11038, 11039, 11043, 11044, 11048, 11049,
   11053, 11059, 11068, 11075, 11076, 11080, 11084, 11088, 11092, 11096,
   11106, 11116, 11120, 11124, 11128, 11132, 11136, 11140, 11149, 11153,
   11157, 11161, 11165, 11169, 11173, 11177, 11181, 11185, 11195, 11199,
   11203, 11207, 11211, 11215, 11219, 11230, 11241, 11245, 11249, 11262,
   11266, 11278, 11279, 11283, 11284, 11285, 11290, 11293, 11301, 11304,
   11308, 11317, 11320, 11324, 11332, 11335, 11342, 11349, 11353, 11360,
   11367, 11374, 11395, 11398, 11406, 11409, 11417, 11420, 11428, 11431,
   11440, 11445, 11452, 11456, 11460, 11464, 11468, 11475, 11482, 11486,
   11490, 11494, 11498, 11506, 11509, 11513, 11517, 11521, 11527, 11528,
   11529, 11533, 11540, 11550, 11554, 11562, 11563, 11568, 11573, 11577,
   11578, 11582, 11587, 11597, 11604, 11611, 11630, 11638, 11645, 11652,
   11659, 11666, 11673, 11680, 11687, 11694, 11701, 11708, 11716, 11723,
   11730, 11737, 11744, 11751, 11758, 11765, 11775, 11776, 11780, 11786,
   11795, 11796, 11800, 11806, 11815, 11816, 11820, 11821, 11825, 11833,
   11842, 11843, 11844, 11857, 11858, 11939, 11943, 11948, 11952, 11956,
   11966, 11973, 11974, 11975, 11979, 11980, 11981, 11982, 11985, 11986,
   11989, 11991, 11994, 11996, 12004, 12005, 12009, 12038, 12039, 12040,
   12041, 12043, 12045, 12049, 12050, 12059, 12060, 12064, 12071, 12072,
   12076, 12089, 12100, 12116, 12123, 12129, 12138, 12142, 12152, 12159,
   12162, 12173, 12177, 12182, 12187, 12196, 12197, 12208, 12211, 12214,
   12218, 12222, 12230, 12233, 12234, 12235, 12239, 12240, 12244, 12250,
   12259, 12260, 12268, 12269, 12273, 12278, 12284, 12288, 12294, 12303,
   12309, 12317, 12321, 12330, 12342, 12343, 12344, 12345, 12346, 12347,
   12348, 12349, 12350, 12351, 12352, 12353, 12357, 12358, 12359, 12360,
   12361, 12362, 12363, 12364, 12365, 12369, 12370, 12371, 12372, 12375,
   12377, 12381, 12382, 12385, 12387, 12391, 12392, 12396, 12400, 12401,
   12408, 12412, 12419, 12424, 12433, 12450, 12458, 12465, 12471, 12481,
   12484, 12491, 12497, 12506, 12520, 12521, 12528, 12533, 12544, 12545,
   12560, 12565, 12575, 12582, 12583, 12587, 12594, 12599, 12609, 12610,
   12614, 12615, 12619, 12620, 12624, 12631, 12637, 12643, 12652, 12656,
   12660, 12664, 12668, 12675, 12676, 12680, 12681, 12682, 12683, 12684,
   12685, 12689, 12690, 12691, 12692, 12693, 12697, 12698, 12699, 12700,
   12701, 12705, 12706, 12707, 12708, 12709, 12713, 12718, 12719, 12723,
   12729, 12738, 12742, 12749, 12756, 12762, 12766, 12774, 12787, 12803,
   12812, 12822, 12845, 12880, 12887, 12902, 12912, 12927, 12936, 12947,
   12967, 12989, 13012, 13020, 13027, 13034, 13040, 13049, 13055, 13064,
   13065, 13069, 13070, 13074, 13075, 13079, 13080, 13084, 13090, 13099,
   13100, 13107, 13127, 13147, 13165, 13178, 13195, 13211, 13212, 13213,
   13222, 13226, 13227, 13238, 13240, 13244, 13249, 13254, 13262, 13267,
   13272, 13280, 13286, 13295, 13302, 13303, 13310, 13311, 13315, 13320,
   13330, 13335, 13344, 13345, 13348, 13350, 13354, 13358, 13363, 13368,
   13372, 13378, 13387, 13388, 13396, 13400, 13414, 13418, 13427, 13444,
   13445, 13449, 13456, 13468, 13476, 13477, 13483, 13496, 13506, 13519,
   13521, 13525, 13526, 13530, 13531, 13532, 13536, 13542, 13544, 13548,
   13549, 13553, 13554, 13558, 13559, 13560, 13561, 13562, 13563, 13564,
   13565, 13566, 13570, 13571, 13583, 13589, 13596, 13603, 13610, 13617,
   13624, 13631, 13638, 13645, 13652, 13669, 13676, 13683, 13690, 13697,
   13705, 13722, 13729, 13736, 13743, 13750, 13757, 13768, 13775, 13782,
   13789, 13796, 13803, 13810, 13817, 13821, 13825, 13832, 13839, 13846,
   13853, 13860, 13869, 13876, 13883, 13890, 13897, 13904, 13911, 13918,
   13925, 13932, 13933, 13937, 13938, 13941, 13943, 13947, 13948, 13952,
   13953, 13957, 13958, 13962, 13963, 13964, 13965, 13969, 13970, 13974,
   13975, 13979, 13980, 13984, 13985, 13986, 13991, 13998, 14006, 14007,
   14008, 14009, 14010, 14011, 14018, 14019, 14024, 14028, 14048, 14053,
   14061, 14062, 14067, 14075, 14074, 14087, 14086, 14100, 14104, 14105,
   14118, 14117, 14140, 14141, 14146, 14148, 14150, 14152, 14154, 14156,
   14162, 14164, 14166, 14168, 14170, 14172, 14177, 14178, 14183, 14182,
   14189, 14199, 14200, 14205, 14210, 14219, 14220, 14229, 14242, 14241,
   14253, 14252, 14260, 14259, 14279, 14280, 14284, 14285, 14300, 14299,
   14310, 14314, 14318, 14332, 14344, 14345, 14346, 14352, 14363, 14410,
   14411, 14415, 14416, 14420, 14421, 14425, 14426, 14427, 14431, 14432,
   14437, 14438, 14439, 14451, 14452, 14456, 14457, 14461, 14462, 14466,
   14467, 14471, 14476, 14480, 14485, 14491, 14496, 14504, 14505, 14509,
   14514, 14518, 14523, 14531, 14532, 14536, 14537, 14541, 14542, 14546,
   14547, 14548, 14552, 14558, 14567, 14568, 14575, 14576, 14580, 14588,
   14608, 14627, 14628, 14634, 14639, 14645, 14650, 14658, 14665, 14672,
   14682, 14701, 14702, 14703, 14713, 14714, 14718, 14733, 14734, 14735,
   14736, 14740, 14744, 14748, 14752, 14756, 14763, 14764, 14768, 14769,
   14773, 14784, 14785, 14786, 14791, 14795, 14799, 14806, 14807, 14816,
   14820, 14824, 14834, 14841, 14848, 14852, 14856, 14860, 14864, 14868,
   14877, 14883, 14894, 14900, 14911, 14912, 14942, 14955, 14968, 14984,
   15000, 15017, 15021, 15022, 15029, 15045, 15046, 15057, 15058, 15068,
   15069, 15080, 15081, 15091, 15092, 15093, 15097, 15098, 15099, 15103,
   15108, 15116, 15120, 15133, 15138, 15146, 15170, 15171, 15172, 15173,
   15174, 15181, 15182, 15183, 15190, 15191, 15192, 15193, 15194, 15195,
   15196, 15197, 15198, 15199, 15200, 15201, 15202, 15203, 15204, 15205,
   15206, 15207, 15208, 15209, 15210, 15211, 15212, 15213, 15214, 15215,
   15216, 15217, 15218, 15219, 15220, 15221, 15222, 15223, 15224, 15239,
   15240, 15241, 15248, 15249, 15250, 15251, 15252, 15253, 15254, 15255,
   15256, 15264, 15265, 15266, 15267, 15268, 15269, 15270, 15271, 15272,
   15273, 15274, 15275, 15276, 15277, 15278, 15279, 15280, 15281, 15282,
   15283, 15284, 15285, 15286, 15287, 15288, 15289, 15290, 15291, 15292,
   15293, 15294, 15295, 15296, 15297, 15298, 15299, 15300, 15301, 15302,
   15303, 15304, 15305, 15306, 15307, 15308, 15309, 15310, 15311, 15312,
   15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320, 15321, 15322,
   15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330, 15331, 15332,
   15333, 15334, 15335, 15336, 15337, 15338, 15339, 15340, 15341, 15342,
   15343, 15344, 15345, 15346, 15347, 15348, 15349, 15350, 15351, 15352,
   15353, 15354, 15355, 15356, 15357, 15358, 15359, 15360, 15361, 15362,
   15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371, 15372,
   15373, 15374, 15381, 15382, 15383, 15384, 15385, 15386, 15387, 15388,
   15389, 15390, 15391, 15392, 15393, 15394, 15395, 15396, 15397, 15398,
   15399, 15400, 15401, 15402, 15403, 15404, 15405, 15406, 15407, 15408,
   15409, 15410, 15411, 15412, 15413, 15414, 15415, 15416, 15417, 15418,
   15419, 15420, 15421, 15422, 15423, 15424, 15425, 15426, 15427, 15428,
   15429, 15430, 15431, 15432, 15433, 15434, 15435, 15436, 15437, 15438,
   15439, 15440, 15441, 15442, 15443, 15444, 15445, 15446, 15447, 15448,
   15449, 15450, 15451, 15452, 15453, 15454, 15455, 15456, 15457, 15458,
   15459, 15460, 15461, 15462, 15463, 15464, 15465, 15466, 15467, 15468,
   15469, 15470, 15471, 15472, 15473, 15474, 15475, 15476, 15477, 15478,
   15479, 15480, 15481, 15482, 15483, 15484, 15485, 15486, 15487, 15488,
   15489, 15490, 15491, 15492, 15493, 15494, 15495, 15496, 15497, 15498,
   15499, 15500, 15501, 15502, 15503, 15504, 15505, 15506, 15507, 15508,
   15509, 15510, 15511, 15512, 15513, 15514, 15515, 15516, 15517, 15518,
   15519, 15520, 15521, 15522, 15523, 15524, 15525, 15526, 15527, 15528,
   15529, 15530, 15531, 15532, 15533, 15534, 15535, 15536, 15537, 15538,
   15539, 15540, 15541, 15542, 15543, 15544, 15545, 15546, 15547, 15548,
   15549, 15550, 15551, 15552, 15553, 15554, 15555, 15556, 15557, 15558,
   15559, 15560, 15561, 15562, 15563, 15564, 15565, 15566, 15567, 15568,
   15569, 15570, 15571, 15572, 15573, 15574, 15575, 15576, 15577, 15578,
   15579, 15580, 15581, 15582, 15583, 15584, 15585, 15586, 15587, 15588,
   15589, 15590, 15591, 15592, 15593, 15594, 15595, 15596, 15597, 15598,
   15599, 15600, 15601, 15602, 15603, 15604, 15605, 15606, 15607, 15608,
   15609, 15610, 15611, 15612, 15613, 15614, 15615, 15616, 15617, 15618,
   15619, 15620, 15621, 15622, 15623, 15624, 15625, 15626, 15627, 15628,
   15629, 15630, 15631, 15632, 15633, 15634, 15635, 15636, 15637, 15638,
   15639, 15640, 15641, 15642, 15643, 15644, 15645, 15646, 15647, 15648,
   15649, 15650, 15651, 15652, 15653, 15654, 15655, 15656, 15657, 15658,
   15659, 15660, 15661, 15662, 15663, 15664, 15665, 15666, 15667, 15668,
   15669, 15670, 15671, 15672, 15673, 15674, 15675, 15676, 15677, 15678,
   15679, 15680, 15681, 15682, 15683, 15684, 15685, 15686, 15687, 15688,
   15689, 15690, 15691, 15692, 15693, 15694, 15695, 15696, 15708, 15709,
   15710, 15722, 15723, 15724, 15725, 15734, 15735, 15736, 15737, 15738,
   15749, 15758, 15762, 15766, 15770, 15777, 15785, 15793, 15805, 15809,
   15814, 15819, 15824, 15829, 15834, 15842, 15843, 15847, 15851, 15858,
   15864, 15873, 15878, 15885, 15895, 15896, 15901, 15905, 15913, 15917,
   15921, 15922, 15923, 15924, 15925, 15929, 15930, 15931, 15932, 15936,
   15937, 15938, 15939, 15943, 15944, 15945, 15946, 15947, 15948, 15953,
   15962, 15966, 15970, 15976, 15980, 15987, 15991, 15998, 16002, 16015,
   16022, 16026, 16038, 16042, 16049, 16056, 16057, 16061, 16068, 16069,
   16073, 16074, 16078, 16079, 16080, 16081, 16085, 16086, 16087, 16091,
   16095, 16099, 16103, 16113, 16112, 16125, 16135, 16136, 16140, 16141,
   16145, 16173, 16174, 16175, 16180, 16185, 16184, 16197, 16208, 16216,
   16223, 16230, 16246, 16250, 16254, 16257, 16260, 16275, 16290, 16300,
   16304, 16308, 16317, 16328, 16344, 16345, 16349, 16350, 16351, 16352,
   16356, 16357, 16358, 16359, 16360, 16366, 16373, 16391, 16390, 16411,
   16418, 16431, 16436, 16453, 16452, 16469, 16482, 16483, 16484, 16485,
   16488, 16490, 16494, 16500, 16509, 16516, 16518, 16520, 16522, 16524,
   16526, 16528, 16530, 16532, 16534, 16536, 16538, 16540, 16542, 16544,
   16546, 16548, 16553, 16555, 16569, 16571, 16573, 16575, 16577, 16579,
   16581, 16583, 16585, 16587, 16589, 16591, 16593, 16595, 16600, 16601,
   16604, 16606, 16610, 16611, 16615, 16625, 16635, 16648, 16662, 16674,
   16686, 16698, 16715, 16721, 16730, 16736, 16745, 16746, 16750, 16751,
   16755, 16765, 16774, 16788, 16795, 16809, 16818, 16819, 16824, 16833,
   16834, 16835, 16836, 16837, 16838, 16842, 16855, 16869, 16883, 16897,
   16912, 16927, 16933, 16939, 16948, 16959, 16970, 16977, 16984, 16995,
   17002, 17009, 17016, 17024, 17030, 17038, 17055, 17063, 17077, 17088,
   17111, 17125, 17130, 17138, 17143, 17151, 17152, 17156, 17162, 17170,
   17172, 17176, 17180, 17184, 17191, 17192, 17197, 17198, 17202, 17203,
   17207, 17212, 17214, 17219, 17220, 17228, 17227, 17237, 17238, 17243,
   17244, 17245, 17250, 17251, 17252, 17256, 17257, 17261, 17273, 17282,
   17292, 17301, 17315, 17316, 17317, 17321, 17325, 17329, 17336, 17337,
   17338, 17339, 17340, 17341, 17342, 17348, 17359, 17368, 17370, 17372,
   17377, 17378, 17379, 17380, 17381, 17385, 17386, 17387, 17388, 17389,
   17390, 17400, 17401, 17406, 17419, 17432, 17434, 17436, 17441, 17446,
   17448, 17450, 17456, 17457, 17459, 17465, 17464, 17504, 17555, 17556,
   17557, 17558, 17568, 17570, 17576, 17581, 17600, 17589, 17668, 17702,
   17742, 17768, 17774, 17815, 17738, 17883, 17904, 17909, 17917, 17880,
   17938, 17943, 17948, 17953, 17958, 17963, 17971, 17972, 17975, 17984,
   17994, 18012, 18013, 18017, 18018, 18019, 18023, 18024, 18029, 18030,
   18032, 18037, 18038, 18039, 18043, 18044, 18051, 18058, 18066, 18076,
   18079, 18083, 18090, 18097, 18103, 18112, 18118, 18127, 18144, 18153,
   18175, 18179, 18187, 18190, 18194, 18201, 18202, 18207, 18213, 18217,
   18224, 18234, 18241, 18254, 18255, 18259, 18260, 18268, 18269, 18274,
   18282, 18283, 18288
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE_SYM",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "INTERSECT_SYM", "BULK_SYM",
  "URL_SYM", "GENERATE_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change_replication_source", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "string_list", "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_histogram_update_param", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "in_expression_user_variable_assignment",
  "rvalue_system_or_user_variable", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "in_sum_expr", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_reference", "esc_table_reference", "joined_table",
  "natural_join_type", "inner_join_type", "outer_join_type", "opt_inner",
  "opt_outer", "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty_or_error_json_table", "on_empty",
  "on_error", "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_ignore_unknown_user",
  "opt_temporary", "opt_drop_ts_options", "drop_ts_option_list",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "insert_columns", "insert_values",
  "query_expression_with_opt_locking_clauses", "value_or_values",
  "values_list", "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format", "opt_explain_options", "opt_describe_column",
  "flush", "$@46", "flush_options", "$@47", "opt_flush_lock", "$@48",
  "flush_options_list", "flush_option", "opt_table_list", "reset", "$@49",
  "reset_options", "opt_if_exists_ident", "persisted_variable_ident",
  "reset_option", "$@50", "$@51", "$@52", "opt_replica_reset_options",
  "source_reset_options", "purge", "$@53", "purge_options", "purge_option",
  "kill", "kill_option", "use", "load_stmt", "data_or_xml", "opt_local",
  "opt_from_keyword", "load_data_lock", "load_source_type",
  "opt_source_count", "opt_source_order", "opt_duplicate", "duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "opt_load_algorithm",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_column", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_rvalue_system_variable_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "lvalue_variable",
  "rvalue_system_variable", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@55",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@56", "grant",
  "$@57", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@58", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@59", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "install_option_type", "install_set_rvalue", "install_set_value",
  "install_set_value_list", "opt_install_set_value_list", "install_stmt",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1204,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1205,  1206,
    1207,   124,    38,    45,    43,    42,    47,    37,    94,   126,
    1208,    40,    41,  1209,    59,    64,    44,    46,    58,    33,
     123,   125
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   822,   823,   823,   823,   823,   823,   823,   824,   825,
     824,   824,   826,   826,   827,   827,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   829,   830,   830,   831,   832,   832,   834,   833,   835,
     835,   836,   836,   837,   839,   838,   840,   840,   842,   841,
     843,   841,   844,   844,   845,   845,   845,   845,   845,   845,
     845,   846,   846,   847,   847,   848,   849,   849,   850,   850,
     851,   851,   852,   852,   853,   854,   854,   855,   855,   856,
     857,   857,   858,   858,   859,   859,   860,   860,   861,   861,
     862,   862,   863,   863,   864,   864,   865,   865,   866,   866,
     867,   867,   868,   868,   869,   869,   870,   870,   871,   871,
     872,   872,   873,   873,   874,   874,   875,   875,   876,   876,
     877,   877,   878,   878,   879,   879,   880,   880,   881,   881,
     882,   882,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   884,   884,   884,   885,
     886,   886,   887,   887,   887,   887,   888,   888,   888,   889,
     889,   890,   890,   891,   891,   892,   892,   892,   892,   893,
     893,   894,   894,   894,   894,   895,   896,   898,   897,   897,
     897,   897,   897,   897,   897,   899,   899,   900,   900,   900,
     900,   900,   901,   901,   902,   902,   902,   903,   903,   904,
     904,   904,   904,   904,   904,   904,   906,   905,   908,   907,
     907,   909,   909,   909,   909,   910,   910,   911,   911,   912,
     912,   913,   913,   914,   914,   916,   915,   917,   917,   917,
     917,   917,   917,   917,   917,   917,   917,   917,   917,   917,
     918,   918,   919,   919,   920,   920,   921,   921,   921,   921,
     921,   921,   921,   922,   922,   922,   923,   923,   924,   925,
     925,   926,   926,   927,   927,   928,   929,   929,   930,   930,
     931,   932,   932,   932,   932,   933,   933,   934,   934,   935,
     935,   936,   936,   937,   936,   938,   936,   939,   939,   940,
     940,   941,   942,   942,   943,   944,   944,   945,   945,   945,
     945,   945,   946,   947,   947,   948,   948,   949,   949,   950,
     950,   951,   951,   951,   952,   952,   952,   952,   952,   952,
     952,   952,   952,   952,   952,   952,   953,   954,   955,   955,
     955,   956,   956,   957,   957,   958,   959,   959,   960,   960,
     961,   962,   962,   963,   964,   964,   964,   964,   964,   964,
     964,   964,   964,   964,   964,   964,   964,   965,   965,   966,
     966,   967,   967,   967,   967,   967,   967,   967,   967,   967,
     967,   967,   967,   967,   969,   968,   971,   970,   973,   972,
     975,   974,   976,   977,   978,   980,   979,   981,   982,   982,
     982,   983,   983,   985,   986,   987,   984,   988,   988,   988,
     989,   989,   991,   992,   990,   994,   993,   995,   995,   996,
     996,   998,   999,   997,  1001,  1002,  1000,  1003,  1003,  1005,
    1004,  1006,  1006,  1008,  1007,  1010,  1009,  1012,  1011,  1013,
    1014,  1015,  1013,  1016,  1017,  1013,  1018,  1018,  1019,  1019,
    1019,  1020,  1020,  1021,  1021,  1022,  1022,  1023,  1023,  1024,
    1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,
    1025,  1025,  1026,  1026,  1027,  1027,  1027,  1027,  1027,  1027,
    1027,  1028,  1028,  1029,  1029,  1030,  1031,  1031,  1032,  1032,
    1033,  1033,  1033,  1033,  1033,  1033,  1033,  1034,  1034,  1035,
    1035,  1036,  1036,  1036,  1037,  1038,  1038,  1039,  1040,  1041,
    1042,  1043,  1044,  1045,  1046,  1047,  1048,  1049,  1050,  1051,
    1051,  1052,  1053,  1054,  1054,  1055,  1055,  1056,  1056,  1057,
    1057,  1057,  1058,  1058,  1059,  1060,  1060,  1060,  1060,  1060,
    1060,  1061,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1064,
    1065,  1065,  1066,  1066,  1067,  1067,  1068,  1068,  1069,  1069,
    1070,  1071,  1071,  1071,  1072,  1072,  1073,  1073,  1074,  1074,
    1076,  1075,  1077,  1077,  1078,  1078,  1079,  1079,  1080,  1080,
    1081,  1082,  1082,  1083,  1083,  1084,  1084,  1084,  1084,  1084,
    1084,  1084,  1084,  1085,  1085,  1086,  1086,  1087,  1087,  1088,
    1088,  1089,  1089,  1089,  1090,  1090,  1091,  1091,  1092,  1092,
    1093,  1093,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1095,  1095,  1096,
    1097,  1098,  1099,  1099,  1099,  1099,  1099,  1099,  1100,  1100,
    1100,  1101,  1101,  1101,  1101,  1102,  1102,  1103,  1103,  1104,
    1105,  1105,  1106,  1106,  1106,  1106,  1106,  1106,  1107,  1108,
    1108,  1109,  1109,  1110,  1110,  1111,  1112,  1112,  1113,  1113,
    1114,  1114,  1114,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1117,  1117,
    1118,  1118,  1119,  1119,  1119,  1119,  1119,  1120,  1120,  1120,
    1120,  1120,  1121,  1121,  1122,  1122,  1123,  1123,  1123,  1123,
    1124,  1124,  1125,  1125,  1125,  1126,  1127,  1127,  1128,  1128,
    1128,  1129,  1129,  1130,  1130,  1131,  1131,  1131,  1132,  1132,
    1132,  1132,  1133,  1133,  1134,  1134,  1135,  1135,  1136,  1136,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1137,  1138,  1138,  1138,  1139,  1139,  1139,  1140,  1141,  1141,
    1142,  1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,  1146,
    1147,  1147,  1148,  1148,  1149,  1149,  1150,  1150,  1150,  1151,
    1151,  1151,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1153,
    1153,  1155,  1154,  1156,  1156,  1157,  1158,  1158,  1159,  1159,
    1160,  1160,  1160,  1160,  1161,  1161,  1161,  1161,  1161,  1162,
    1162,  1162,  1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,
    1166,  1166,  1166,  1167,  1167,  1168,  1168,  1169,  1169,  1170,
    1170,  1171,  1171,  1172,  1172,  1173,  1174,  1174,  1175,  1175,
    1176,  1176,  1177,  1177,  1177,  1177,  1177,  1178,  1178,  1178,
    1179,  1179,  1180,  1180,  1181,  1181,  1182,  1182,  1182,  1183,
    1183,  1184,  1184,  1185,  1185,  1186,  1186,  1187,  1187,  1188,
    1188,  1189,  1189,  1191,  1190,  1193,  1192,  1195,  1194,  1197,
    1196,  1198,  1196,  1200,  1199,  1201,  1202,  1202,  1202,  1202,
    1203,  1204,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1206,  1206,  1207,  1208,  1209,  1209,  1209,  1210,  1210,
    1211,  1211,  1212,  1212,  1212,  1212,  1212,  1212,  1212,  1212,
    1212,  1212,  1212,  1212,  1212,  1212,  1212,  1212,  1213,  1213,
    1214,  1214,  1215,  1215,  1215,  1215,  1216,  1217,  1217,  1217,
    1217,  1218,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1222,
    1222,  1223,  1223,  1224,  1224,  1224,  1224,  1225,  1225,  1225,
    1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,
    1225,  1225,  1225,  1225,  1225,  1225,  1225,  1226,  1226,  1227,
    1227,  1228,  1228,  1229,  1229,  1229,  1229,  1229,  1230,  1230,
    1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,
    1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,
    1231,  1231,  1231,  1231,  1231,  1231,  1231,  1232,  1232,  1232,
    1233,  1233,  1233,  1233,  1233,  1234,  1235,  1235,  1236,  1237,
    1237,  1238,  1238,  1239,  1239,  1240,  1240,  1240,  1241,  1241,
    1241,  1242,  1242,  1242,  1242,  1243,  1243,  1244,  1245,  1245,
    1246,  1246,  1247,  1247,  1247,  1248,  1249,  1250,  1251,  1251,
    1252,  1254,  1255,  1253,  1256,  1257,  1257,  1258,  1258,  1259,
    1259,  1259,  1260,  1260,  1261,  1261,  1262,  1262,  1263,  1263,
    1264,  1264,  1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,
    1268,  1268,  1268,  1269,  1270,  1270,  1270,  1271,  1272,  1272,
    1273,  1273,  1274,  1274,  1274,  1275,  1276,  1276,  1276,  1277,
    1277,  1277,  1278,  1279,  1280,  1280,  1281,  1281,  1282,  1282,
    1282,  1282,  1282,  1282,  1283,  1284,  1284,  1284,  1286,  1285,
    1285,  1287,  1287,  1288,  1288,  1289,  1290,  1290,  1291,  1291,
    1292,  1293,  1293,  1294,  1294,  1295,  1295,  1296,  1297,  1298,
    1298,  1299,  1299,  1300,  1300,  1300,  1301,  1301,  1301,  1301,
    1302,  1302,  1303,  1303,  1303,  1303,  1303,  1304,  1304,  1305,
    1305,  1305,  1306,  1306,  1307,  1307,  1308,  1309,  1309,  1310,
    1310,  1311,  1312,  1313,  1313,  1314,  1314,  1315,  1315,  1316,
    1316,  1317,  1317,  1317,  1318,  1318,  1319,  1320,  1320,  1321,
    1321,  1322,  1322,  1322,  1323,  1323,  1324,  1324,  1324,  1324,
    1324,  1325,  1325,  1326,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1327,  1327,  1327,  1327,  1327,  1328,
    1328,  1328,  1328,  1328,  1328,  1328,  1328,  1328,  1328,  1328,
    1328,  1328,  1328,  1328,  1328,  1328,  1329,  1329,  1330,  1330,
    1330,  1330,  1330,  1330,  1330,  1330,  1330,  1330,  1330,  1330,
    1330,  1330,  1330,  1331,  1331,  1332,  1332,  1333,  1333,  1334,
    1334,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1336,  1336,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1338,  1338,  1339,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1341,  1341,
    1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1343,  1343,  1343,  1343,  1343,  1343,  1343,
    1344,  1344,  1345,  1345,  1346,  1346,  1347,  1347,  1348,  1348,
    1349,  1349,  1350,  1351,  1351,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1353,  1353,
    1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,  1354,
    1354,  1355,  1355,  1356,  1356,  1356,  1357,  1357,  1358,  1358,
    1358,  1359,  1359,  1359,  1360,  1360,  1361,  1362,  1362,  1363,
    1364,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,  1369,
    1370,  1370,  1371,  1371,  1371,  1371,  1371,  1372,  1373,  1373,
    1373,  1373,  1373,  1374,  1374,  1374,  1374,  1374,  1375,  1375,
    1375,  1376,  1377,  1378,  1378,  1379,  1379,  1380,  1380,  1381,
    1381,  1382,  1382,  1383,  1384,  1384,  1384,  1384,  1384,  1384,
    1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,
    1384,  1384,  1384,  1384,  1384,  1384,  1385,  1385,  1386,  1386,
    1387,  1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,  1391,
    1392,  1392,  1392,  1393,  1393,  1394,  1394,  1394,  1394,  1394,
    1394,  1395,  1395,  1395,  1396,  1396,  1396,  1396,  1397,  1397,
    1398,  1398,  1399,  1399,  1400,  1400,  1401,  1402,  1402,  1402,
    1402,  1402,  1402,  1403,  1403,  1404,  1404,  1405,  1406,  1406,
    1407,  1407,  1408,  1409,  1410,  1410,  1411,  1411,  1411,  1412,
    1412,  1413,  1413,  1413,  1413,  1414,  1414,  1415,  1416,  1417,
    1417,  1417,  1418,  1418,  1418,  1418,  1419,  1419,  1420,  1420,
    1421,  1421,  1422,  1422,  1423,  1424,  1424,  1425,  1425,  1426,
    1426,  1427,  1428,  1428,  1429,  1429,  1429,  1429,  1429,  1429,
    1429,  1429,  1429,  1429,  1429,  1429,  1430,  1430,  1430,  1430,
    1430,  1430,  1430,  1430,  1430,  1431,  1431,  1431,  1431,  1432,
    1432,  1433,  1433,  1434,  1434,  1435,  1435,  1436,  1437,  1437,
    1438,  1438,  1439,  1439,  1440,  1441,  1441,  1442,  1442,  1443,
    1443,  1444,  1444,  1445,  1446,  1446,  1447,  1447,  1448,  1448,
    1449,  1449,  1450,  1451,  1451,  1452,  1453,  1453,  1454,  1454,
    1455,  1455,  1456,  1456,  1457,  1458,  1458,  1458,  1459,  1459,
    1459,  1459,  1459,  1460,  1460,  1461,  1461,  1461,  1461,  1461,
    1461,  1462,  1462,  1462,  1462,  1462,  1463,  1463,  1463,  1463,
    1463,  1464,  1464,  1464,  1464,  1464,  1465,  1466,  1466,  1467,
    1467,  1468,  1468,  1469,  1470,  1470,  1470,  1471,  1472,  1473,
    1474,  1475,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,
    1483,  1484,  1485,  1486,  1487,  1488,  1488,  1489,  1489,  1490,
    1490,  1491,  1491,  1492,  1492,  1493,  1493,  1494,  1494,  1495,
    1495,  1496,  1496,  1496,  1497,  1497,  1497,  1498,  1498,  1498,
    1498,  1499,  1499,  1500,  1500,  1501,  1501,  1501,  1502,  1502,
    1502,  1503,  1503,  1504,  1505,  1505,  1506,  1506,  1507,  1507,
    1508,  1508,  1509,  1509,  1510,  1510,  1511,  1512,  1513,  1513,
    1514,  1514,  1515,  1515,  1516,  1516,  1517,  1517,  1518,  1519,
    1519,  1520,  1520,  1521,  1522,  1522,  1523,  1523,  1523,  1524,
    1524,  1525,  1525,  1526,  1526,  1526,  1527,  1528,  1528,  1529,
    1529,  1530,  1530,  1531,  1531,  1531,  1531,  1531,  1531,  1531,
    1531,  1531,  1532,  1532,  1533,  1534,  1535,  1536,  1537,  1538,
    1539,  1540,  1541,  1542,  1543,  1544,  1545,  1545,  1546,  1547,
    1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1562,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1577,  1577,  1578,  1578,  1579,  1579,  1580,  1580,  1581,
    1581,  1582,  1582,  1583,  1583,  1583,  1583,  1584,  1584,  1585,
    1585,  1586,  1586,  1587,  1587,  1587,  1588,  1589,  1590,  1590,
    1590,  1590,  1590,  1590,  1591,  1591,  1592,  1592,  1593,  1593,
    1594,  1594,  1594,  1596,  1595,  1598,  1597,  1597,  1599,  1599,
    1600,  1599,  1601,  1601,  1602,  1602,  1602,  1602,  1602,  1602,
    1602,  1602,  1602,  1602,  1602,  1602,  1603,  1603,  1605,  1604,
    1604,  1606,  1606,  1607,  1607,  1608,  1608,  1608,  1610,  1609,
    1611,  1609,  1612,  1609,  1613,  1613,  1614,  1614,  1616,  1615,
    1617,  1618,  1618,  1619,  1620,  1620,  1620,  1621,  1622,  1623,
    1623,  1624,  1624,  1625,  1625,  1626,  1626,  1626,  1627,  1627,
    1628,  1628,  1628,  1629,  1629,  1630,  1630,  1631,  1631,  1632,
    1632,  1633,  1633,  1634,  1634,  1634,  1634,  1635,  1635,  1636,
    1636,  1637,  1637,  1638,  1638,  1639,  1639,  1640,  1640,  1641,
    1641,  1641,  1642,  1642,  1643,  1643,  1644,  1644,  1645,  1645,
    1646,  1647,  1647,  1648,  1648,  1648,  1648,  1649,  1649,  1649,
    1650,  1651,  1651,  1651,  1652,  1652,  1653,  1654,  1654,  1654,
    1654,  1654,  1654,  1654,  1654,  1654,  1655,  1655,  1656,  1656,
    1656,  1657,  1657,  1657,  1658,  1658,  1658,  1659,  1659,  1660,
    1661,  1661,  1662,  1663,  1664,  1664,  1665,  1665,  1666,  1666,
    1667,  1667,  1668,  1668,  1669,  1669,  1670,  1671,  1672,  1673,
    1674,  1675,  1676,  1676,  1677,  1678,  1678,  1679,  1679,  1680,
    1680,  1681,  1681,  1682,  1682,  1682,  1683,  1683,  1683,  1684,
    1684,  1685,  1685,  1686,  1686,  1687,  1688,  1688,  1688,  1688,
    1688,  1689,  1689,  1689,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1691,
    1691,  1691,  1692,  1692,  1692,  1692,  1692,  1692,  1692,  1692,
    1692,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1693,  1693,  1693,  1694,  1694,
    1694,  1695,  1695,  1695,  1695,  1696,  1696,  1696,  1696,  1696,
    1697,  1698,  1698,  1698,  1698,  1698,  1698,  1698,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1700,  1700,  1701,  1701,  1702,
    1702,  1703,  1704,  1704,  1705,  1705,  1706,  1706,  1707,  1707,
    1708,  1708,  1708,  1708,  1708,  1709,  1709,  1709,  1709,  1710,
    1710,  1710,  1710,  1711,  1711,  1711,  1711,  1711,  1711,  1712,
    1713,  1713,  1713,  1713,  1713,  1713,  1713,  1714,  1714,  1714,
    1715,  1715,  1716,  1716,  1717,  1718,  1718,  1719,  1720,  1720,
    1721,  1721,  1722,  1722,  1722,  1722,  1723,  1723,  1723,  1723,
    1723,  1723,  1723,  1725,  1724,  1724,  1726,  1726,  1727,  1727,
    1728,  1729,  1729,  1729,  1729,  1731,  1730,  1730,  1732,  1733,
    1734,  1735,  1735,  1735,  1735,  1735,  1735,  1735,  1735,  1736,
    1736,  1736,  1736,  1736,  1737,  1737,  1738,  1738,  1738,  1738,
    1739,  1739,  1739,  1739,  1739,  1740,  1740,  1741,  1740,  1740,
    1740,  1742,  1742,  1743,  1742,  1742,  1744,  1744,  1744,  1744,
    1745,  1745,  1746,  1746,  1747,  1747,  1747,  1747,  1747,  1747,
    1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,
    1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,
    1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1748,  1748,
    1749,  1749,  1750,  1750,  1751,  1751,  1751,  1752,  1752,  1752,
    1752,  1752,  1753,  1753,  1754,  1754,  1755,  1755,  1756,  1756,
    1757,  1757,  1757,  1758,  1758,  1758,  1759,  1759,  1759,  1760,
    1760,  1760,  1760,  1760,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,  1767,  1767,  1767,  1768,  1768,  1768,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,
    1769,  1770,  1770,  1771,  1771,  1772,  1772,  1773,  1773,  1774,
    1774,  1774,  1774,  1774,  1775,  1775,  1776,  1776,  1777,  1777,
    1777,  1777,  1777,  1778,  1778,  1780,  1779,  1781,  1781,  1782,
    1782,  1782,  1783,  1783,  1783,  1784,  1784,  1785,  1786,  1786,
    1787,  1788,  1789,  1789,  1789,  1790,  1791,  1792,  1793,  1793,
    1793,  1793,  1793,  1793,  1793,  1793,  1794,  1795,  1795,  1795,
    1796,  1796,  1796,  1796,  1796,  1797,  1797,  1797,  1797,  1797,
    1797,  1798,  1798,  1799,  1800,  1801,  1801,  1801,  1802,  1803,
    1803,  1803,  1804,  1804,  1804,  1806,  1805,  1807,  1808,  1808,
    1808,  1808,  1809,  1809,  1810,  1810,  1812,  1811,  1813,  1813,
    1815,  1816,  1817,  1818,  1814,  1820,  1821,  1822,  1823,  1819,
    1824,  1824,  1824,  1824,  1824,  1824,  1825,  1825,  1826,  1826,
    1826,  1827,  1827,  1828,  1828,  1828,  1829,  1829,  1830,  1830,
    1830,  1831,  1831,  1831,  1832,  1832,  1833,  1834,  1834,  1835,
    1835,  1836,  1836,  1837,  1837,  1838,  1838,  1839,  1840,  1840,
    1841,  1841,  1842,  1842,  1842,  1843,  1843,  1844,  1844,  1845,
    1845,  1846,  1846,  1847,  1847,  1848,  1848,  1849,  1849,  1849,
    1850,  1850,  1851
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     4,     1,     2,     0,     4,     0,
       2,     3,     1,     2,     0,     3,     1,     2,     0,     6,
       0,     6,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     3,     1,     3,     1,     2,     3,     5,     7,
       2,     3,     1,     3,     3,     2,     3,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     5,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       3,     9,     6,     7,     9,     4,    10,     0,     6,     2,
       9,     7,     6,     7,    11,     8,     7,     0,     3,     3,
       6,     3,     0,     3,    12,    11,    11,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     0,    12,     0,     6,
       2,     0,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     3,     4,     0,     2,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     0,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     1,     1,     1,     2,     3,     3,     3,     0,
       3,     0,     1,     3,     1,     3,     0,     1,     3,     1,
       4,     0,     1,     1,     1,     0,     3,     2,     3,     0,
       3,     5,     5,     0,     7,     0,     6,     1,     1,     1,
       3,     1,     1,     1,     3,     0,     1,     1,     1,     1,
       2,     1,     3,     1,     1,     0,     1,     0,     2,     3,
       5,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     4,     0,     1,
       1,     1,     3,     1,     3,     3,     1,     2,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     5,     0,     2,     0,     3,
       0,     2,     2,     2,     2,     0,     6,     2,     0,     2,
       1,     1,     3,     0,     0,     0,     7,     0,     2,     2,
       1,     1,     0,     0,     8,     0,     6,     1,     2,     1,
       2,     0,     0,     6,     0,     0,     6,     0,     2,     0,
       5,     0,     1,     0,     5,     0,     2,     0,     5,     4,
       0,     0,     8,     0,     0,     8,     1,     1,     1,     1,
       1,     0,     2,     0,     4,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     0,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     2,     1,     1,     2,     3,     1,
       3,     3,     3,     3,     3,     3,     3,     4,     3,     1,
       1,     3,     3,     1,     1,     2,     1,     2,     1,     0,
       2,     1,     2,     1,     6,     6,     5,     4,     5,     4,
       5,     0,     1,     0,     3,     0,     2,     0,     8,     9,
       0,     1,     1,     3,     0,     2,     0,     3,     1,     3,
       5,     0,     4,     3,     1,     1,     1,     3,     1,     3,
       0,     4,     1,     3,     1,     1,     0,     3,     1,     3,
       3,     0,     1,     2,     1,     3,     4,     3,     3,     3,
       4,     4,     3,     1,     2,     1,     4,     0,     1,     1,
       2,     1,     1,     1,     0,     3,     1,     2,     1,     3,
       0,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     5,     1,     1,     3,     4,     4,     3,     2,
       2,     3,     3,     2,     3,     3,     1,     1,     1,     4,
       4,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       0,     1,     6,     7,     7,     7,     8,     3,     4,     0,
       2,     0,     1,     0,     1,     2,     2,     9,     0,     2,
       0,     1,     1,     3,     3,     3,     1,     2,     1,     1,
       3,     2,     3,     2,     2,     1,     3,     3,     2,     3,
       1,     2,     2,     2,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     5,     5,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     2,     0,     1,     1,     1,     1,     1,
       0,     1,     0,     1,     1,     5,     0,     3,     0,     2,
       3,     0,     1,     2,     1,     1,     1,     1,     3,     3,
       3,     3,     0,     1,     0,     1,     0,     1,     2,     1,
       1,     2,     2,     2,     4,     3,     1,     3,     2,     1,
       2,     2,     2,     2,     2,     2,     2,     1,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     0,     2,     0,     1,     1,     2,     2,     1,
       2,     2,     0,     1,     1,     1,     3,     1,     3,     0,
       1,     0,     4,     0,     1,     5,     0,     3,     3,     1,
       0,     2,     2,     2,     0,     3,     3,     6,     6,     1,
       1,     2,     2,     2,     2,     2,     1,     1,     0,     1,
       1,     1,     1,     0,     1,     0,     1,     1,     2,     1,
       3,     0,     1,     1,     2,     1,     0,     1,     1,     2,
       1,     1,     3,     2,     1,     3,     3,     1,     3,     3,
       0,     1,     2,     2,     1,     1,     1,     1,     1,     3,
       1,     2,     5,     3,     1,     1,     4,     0,     1,     1,
       3,     4,     4,     0,     5,     0,     5,     0,     5,     0,
       5,     0,     4,     0,    10,     7,     6,     6,     6,     4,
       7,     7,     6,     5,     5,     5,     5,     5,     5,     3,
       3,     0,     2,     8,     3,     0,     2,     2,     0,     1,
       1,     2,     2,     2,     2,     5,     3,     3,     3,     3,
       5,     4,     3,     4,     4,     2,     2,     2,     0,     2,
       2,     1,     2,     2,     2,     2,     3,     0,     3,     1,
       4,     0,     3,     0,     2,     0,     1,     1,     2,     1,
       3,     1,     2,     0,     1,     1,     3,     2,     2,     3,
       6,     5,     3,     4,     4,     4,     4,     5,     4,     3,
       3,     8,     7,     4,     4,     1,     1,     0,     1,     2,
       2,     1,     1,     1,     3,     3,     1,     3,     1,     3,
       6,     5,     2,     6,     5,     4,     4,     3,     3,     3,
       3,     2,     2,     6,     8,     5,     5,     4,     4,     4,
       3,     5,     5,     5,     5,     1,     3,     1,     1,     1,
       0,     1,     1,     2,     2,     3,     1,     1,     3,     1,
       1,     0,     1,     0,     1,     0,     1,     1,     0,     2,
       1,     0,     1,     1,     1,     2,     2,     2,     0,     1,
       1,     3,     1,     1,     1,     3,     3,     3,     1,     1,
       4,     0,     0,    11,     3,     0,     1,     1,     3,     3,
       2,     2,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     1,     1,     3,     1,     1,     0,     2,     1,     3,
       3,     3,     1,     4,     0,     1,     1,     5,     0,     1,
       1,     2,     1,     1,     1,     5,     0,     3,     3,     0,
       5,     4,     2,     4,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     4,     0,     1,     1,     0,     4,
       3,     3,     5,     1,     3,     3,     5,     7,     1,     3,
       2,     1,     1,     8,     5,     1,     3,     3,     4,     0,
       4,     0,     2,     1,     2,     1,     3,     2,     3,     3,
       3,     4,     1,     1,     4,     4,     4,     3,     3,     1,
       1,     1,     9,     8,     0,     1,     2,     1,     1,     1,
       3,     2,     2,     0,     1,     2,     1,     1,     1,     2,
       1,     3,     4,     4,     1,     1,     2,     0,     1,     2,
       1,     3,     1,     1,     1,     2,     0,     2,     2,     1,
       1,     0,     2,     3,     3,     3,     2,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     4,     1,     3,
       4,     5,     7,     6,     8,     6,     5,     6,     4,     3,
       5,     4,     6,     3,     4,     1,     1,     0,     3,     3,
       3,     3,     3,     3,     5,     5,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     3,     2,     2,     2,     2,     1,     3,     5,
       6,     2,     4,     7,     2,     7,     9,    12,     5,     6,
       6,     4,     4,     5,     3,     3,     0,     1,     4,     6,
       2,     4,     4,     4,    10,     6,     8,     8,     6,     4,
       4,     6,     4,     4,     4,     6,     4,     7,     7,     7,
       6,     6,     6,     6,     3,     4,     6,     8,     2,     2,
       8,     8,     6,     6,     1,     6,     6,     8,     8,     6,
       8,     6,     2,     8,     8,     2,     2,     2,     0,     2,
       4,     4,     4,     4,     3,     8,     6,     8,     4,     6,
       4,     6,     8,     4,     3,     6,     4,     6,     4,     7,
       7,    10,     1,     4,     4,     4,     4,     4,     6,     4,
       4,     6,     2,     3,     0,     4,     0,     3,     0,     1,
       1,     3,     2,     1,     1,     5,     6,     5,     5,     5,
       7,     5,     6,     5,     6,     5,     6,     5,     6,     5,
       6,     5,     5,     5,     5,     5,     6,     8,     4,     4,
       4,     4,     4,     5,     7,     7,     6,     6,     9,     0,
       3,     1,     1,     1,     1,     2,     0,     2,     0,     2,
       2,     0,     2,     2,     0,     1,     2,     1,     1,     1,
       3,     4,     0,     1,     0,     3,     0,     3,     0,     3,
       1,     1,     2,     2,     2,     4,     2,     4,     1,     2,
       2,     2,     4,     0,     3,     2,     2,     3,     1,     1,
       1,     4,     4,     2,     4,     0,     1,     0,     2,     0,
       3,     3,     1,     2,     2,     3,     2,     1,     2,     1,
       2,     1,     1,     2,     2,     2,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     3,     1,     3,     0,     1,     0,     2,     4,     5,
       1,     1,     4,     1,     1,     5,     7,     5,     7,     3,
       3,     3,     4,     4,     1,     2,     2,     1,     3,     3,
       0,     1,     0,     1,     0,     1,     4,     1,     1,     1,
       1,     1,     1,     3,     5,     3,     3,     4,     3,     3,
       3,     4,     8,     4,     1,     3,     3,     7,     4,     0,
       1,     0,     1,     1,     2,     1,     2,     3,     3,     1,
       1,     2,     0,     2,     3,     3,     1,     1,     6,     6,
       1,     2,     0,     1,     1,     0,     1,     1,     1,     1,
       3,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     0,     1,     2,     0,     2,
       2,     3,     3,     1,     4,     0,     3,     1,     3,     0,
       2,     1,     3,     3,     0,     4,     3,     1,     0,     1,
       3,     1,     2,     0,     1,     3,     3,     1,     0,     1,
       1,     1,     0,     1,     2,     1,     3,     3,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     2,     1,     2,     5,     2,     1,     2,     6,     6,
       4,     6,     4,     5,     4,     4,     5,     4,     4,     4,
       5,     5,     4,     6,     4,     1,     3,     1,     3,     0,
       2,     0,     3,     0,     1,     0,     1,     1,     3,     1,
       1,     9,    10,     8,     6,     7,     6,     0,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     4,     1,     3,
       4,     3,     1,     2,     1,     2,     1,     1,     3,     1,
       3,     1,     1,     1,     0,     1,     3,     4,     0,     1,
       3,     1,     1,     1,     0,     3,     0,     5,    10,     0,
       1,     3,     1,     3,     0,     1,    10,     7,     8,     0,
       2,     0,     2,     1,     1,     1,     3,     0,     1,     0,
       1,     1,     3,     1,     1,     2,     2,     2,     1,     1,
       1,     1,     0,     3,     3,     5,     5,     4,     5,     5,
       2,     4,     4,     4,     7,     3,     3,     2,     6,     7,
       7,     3,     6,     6,     3,     3,     2,     5,     4,     3,
       4,     3,     3,     2,     2,     4,     6,     5,     4,     4,
       3,     4,     4,     4,     4,     4,     4,     4,     4,     4,
       4,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       2,     0,     2,     0,     2,     1,     3,     3,     1,     1,
       1,     1,     1,     3,     1,     1,     0,     3,     2,     1,
       0,     1,     1,     0,     4,     0,     4,     1,     0,     3,
       0,     3,     3,     1,     2,     2,     2,     2,     2,     3,
       1,     1,     1,     1,     1,     1,     0,     1,     0,     3,
       3,     3,     1,     0,     2,     1,     3,     3,     0,     4,
       0,     4,     0,     3,     0,     1,     0,     2,     0,     3,
       3,     2,     2,     3,     0,     1,     1,     2,    22,     1,
       1,     0,     1,     0,     1,     0,     1,     1,     1,     1,
       0,     2,     2,     0,     4,     0,     1,     1,     1,     0,
       2,     2,     1,     3,     4,     3,     3,     0,     2,     2,
       1,     3,     3,     0,     4,     0,     3,     1,     1,     0,
       3,     2,     3,     1,     1,     2,     0,     2,     3,     1,
       3,     0,     3,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     5,     2,     1,     1,     1,     1,     1,     3,     5,
       1,     3,     2,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     5,     5,     7,     7,     3,     3,
       3,     6,     6,     6,     4,     0,     2,     4,     6,     1,
       3,     1,     2,     2,     0,     2,     1,     3,     2,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       2,     2,     2,     0,     2,     2,     2,     2,     2,     3,
       3,     4,     6,     2,     3,     3,     2,     1,     3,     3,
       1,     3,     2,     2,     1,     0,     2,     3,     0,     2,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     4,     4,     1,     1,     1,     3,
       3,     1,     1,     2,     2,     0,     3,     2,     1,     1,
       3,     4,     2,     6,     5,     9,     3,     3,     2,     4,
       3,     6,     7,    10,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     6,     9,     0,    11,    10,
       8,     5,     9,     0,    11,     7,     0,     1,     1,     1,
       0,     1,     1,     3,     2,     3,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     2,     2,     0,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     3,     1,     3,     1,     3,     0,     3,     0,     3,
       3,     2,     7,     3,     3,     2,     0,     2,     4,     1,
       1,     1,     1,     1,     1,     3,     4,     3,     5,     5,
       6,     3,     3,     3,     5,     5,     3,     3,     5,     2,
       3,     3,     3,     2,     4,     7,     4,     7,     3,     5,
       2,     1,     3,     1,     3,     0,     3,     1,     3,     0,
       2,     2,     2,     2,     0,     3,     0,     3,     0,     3,
       4,     3,     3,     0,     3,     0,     3,     0,     1,     0,
       3,     2,     0,     1,     2,     0,     1,     4,     4,     5,
       2,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     3,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     2,     1,     2,     3,
       3,     3,     0,     3,     3,     0,     7,     2,     0,     3,
       4,     4,     1,     1,     0,     2,     0,    13,     8,     7,
       0,     0,     0,     0,    15,     0,     0,     0,     0,    12,
       4,     4,     3,     4,     3,     3,     0,     2,     1,     3,
       5,     1,     1,     0,     1,     1,     0,     2,     0,     1,
       3,     0,     1,     1,     1,     1,     4,     1,     3,     0,
       2,     5,     4,     3,     3,     1,     3,     4,     6,    10,
       1,     5,     0,     2,     3,     1,     1,     0,     3,     1,
       3,     1,     3,     1,     2,     0,     3,     0,     1,     1,
       0,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2019,  3143,  1315,  3095,     0,     0,     0,     0,     0,     0,
    3097,  3143,   152,  2134,  2135,     0,  1963,     8,     0,  1315,
     468,     0,     0,   164,     0,  1977,     0,  2194,     0,     0,
    1315,     0,  2188,     0,     0,  1315,  2024,  2168,   445,  1959,
    3097,     0,  1373,     0,  2111,  2928,     0,     0,     0,     0,
    2037,     0,  2925,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2929,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   141,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1238,
     144,   143,   142,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1345,  1343,  1883,  1353,  1352,  1359,  1360,
    1361,  2020,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   148,     0,    44,   145,   111,   136,   137,   117,   135,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   139,   116,   130,   129,   134,   128,
     138,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     106,   105,   108,   127,   119,   126,   118,   104,   109,    45,
      64,  2136,    65,    86,    81,    74,   149,    75,    93,    95,
      94,    76,   147,   140,    88,    19,    69,    89,    68,    15,
      36,    90,    91,    82,   150,    73,   146,    71,    35,     0,
    1135,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1959,     0,  1071,  3141,  3142,  3143,  1317,  1316,     0,  3097,
    2308,  1302,     0,  2392,  2391,  2394,  2396,  2397,  2398,  2399,
    2400,  2401,  2344,  2403,  2406,  2407,  2408,  2409,  2410,  2345,
    2411,  2412,  2413,  2414,  2415,  2416,  2346,  2347,  2419,  2420,
    2421,  2423,  2424,  2348,  2349,  2425,  2426,  2427,  2428,  2429,
    2430,  2431,  2432,  2433,  2434,  2351,  2435,  2352,  2436,  2437,
    2439,  2440,  2470,  2441,  2442,  2443,  2444,  2445,  2446,  2353,
    2447,  2448,  2449,  2450,  2451,  2452,  2453,  2454,  2455,  2354,
    2456,  2457,  2459,  2461,  2462,  2463,  2464,  2465,  2355,  2466,
    2467,  2468,  2469,  2356,  2471,  2473,  2474,  2476,  2478,  2477,
    2479,  2480,  2382,  2481,  2482,  2341,  2484,  2485,  2486,  2487,
    2488,  2491,  2492,  2383,  2493,  2494,  2496,  2497,  2357,  2358,
    2499,  2500,  2501,  2502,  2510,  2504,  2505,  2506,  2825,  2509,
    2359,  2512,  2360,  2516,  2515,  2517,  2304,  2518,  2305,  2519,
    2361,  2521,  2522,  2525,  2526,  2362,  2528,  2529,  2530,  2531,
    2532,  2533,  2535,  2363,  2537,  2538,  2539,  2540,  2541,  2542,
    2826,  2544,  2545,  2546,  2547,  2549,  2550,  2552,  2554,  2555,
    2556,  2557,  2559,  2560,  2570,  2561,  2562,  2563,  2565,  2564,
    2566,  2567,  2568,  2571,  2551,  2573,  2574,  2575,  2576,  2577,
    2578,  2579,  2581,  2582,  2583,  2584,  2585,  2586,  2587,  2588,
    2589,  2590,  2591,  2592,  2593,  2594,  2595,  2596,  2597,  2598,
    2599,  2600,  2602,  2603,  2604,  2605,  2384,  2364,  2607,  2609,
    2610,  2612,  2615,  2616,  2617,  2619,  2623,  2624,  2625,  2626,
    2627,  2629,  2628,  2630,  2633,  2635,  2636,  2634,  2637,  2638,
    2639,  2365,  2366,  2641,  2642,  2643,  2385,  2645,  2647,  2646,
    2386,  2648,  2649,  2650,  2652,  2653,  2654,  2655,  2656,  2659,
    2660,  2661,  2662,  2663,  2387,  2664,  2666,  2367,  2667,  2388,
    2669,  2671,  2670,  2672,  2674,  2675,  2673,  2368,  2679,  2681,
    2682,  2684,  2686,  2688,  2369,  2690,  2691,  2692,  2694,  2693,
    2695,  2370,  2696,  2697,  2703,  2704,  2705,  2706,  2829,  2707,
    2708,  2343,  2371,  2709,  2372,  2711,  2712,  2713,  2714,  2715,
    2739,  2744,  2745,  2746,  2747,  2748,  2749,  2751,  2752,  2373,
    2753,  2754,  2755,  2756,  2374,  2757,  2759,  2761,  2762,  2763,
    2764,  2765,  2390,  2766,  2767,  2768,  2769,  2770,  2771,  2772,
    2773,  2774,  2775,  2776,  2781,  2779,  2780,  2782,  2784,  2785,
    2375,  2786,  2787,  2789,  2790,  2791,  2792,  2376,  2377,  2793,
    2795,  2796,  2798,  2799,  2800,  2801,  2802,  2804,  2806,  2807,
    2808,  2809,  2810,  2811,  2812,  2813,  2378,  2814,  2815,  2816,
    2827,  2689,  2395,  2527,  2805,  2438,  2710,  2543,  2606,  2828,
    2513,  2417,  2350,  2483,  2498,  2608,  2622,  2640,  2680,  2778,
    2788,  2601,  2620,  2632,  2514,  2687,  2750,  2777,  2389,  2803,
    2558,  2507,  2342,  2458,  2460,  2621,  2657,  2393,  2520,  2402,
    2580,  2618,  2701,  2698,  2700,  2702,  2683,  2614,  2472,  2613,
    2553,  2651,  2548,  2572,  2644,  2569,  2677,  2631,  2490,  2678,
    2758,  2611,  2685,  2534,  2783,  2404,  2475,  2699,  2719,  2817,
    2676,  2668,  2665,  2508,  2716,  2717,  2718,  2720,  2721,  2722,
    2723,  2724,  2725,  2726,  2727,  2728,  2729,  2737,  2731,  2730,
    2732,  2733,  2735,  2734,  2736,  2738,  2740,  2741,  2742,  2743,
    2760,  2536,  2405,  2489,  2495,  2524,  2658,  2794,  2523,  2422,
    2511,  2418,  2797,  2503,   399,  2315,   381,  2316,  2337,  2338,
    2339,  2336,  2340,   166,     0,     0,  2917,  2916,     0,     0,
    3098,  3099,   734,     0,     0,     0,     0,     0,     0,  1964,
       0,  1014,   734,   734,     0,     0,     0,   319,  3126,  3126,
    3143,  3145,  3147,  2394,  2344,  2409,     0,  2273,     0,     0,
       0,  1734,     0,  2348,     0,  2429,  2431,     0,     0,  1401,
    1401,   898,     0,     0,     0,  2454,  2455,  2279,     0,     0,
       0,  2270,  2280,  2499,  2504,  2506,     0,  2272,  2517,     0,
       0,     0,     0,  2541,  2282,     0,     0,  2584,  2586,     0,
       0,  2590,  2591,  2592,  2593,  2254,  1460,     0,   898,  2266,
    2281,  2260,  2637,  2638,     0,  2648,     0,     0,  2688,     0,
       0,  2693,  2703,     0,     0,  2762,     0,     0,   898,  2253,
    2781,  2779,  2780,  2782,     0,  2271,  2375,  2283,     0,  2798,
    1401,   898,   898,     0,     0,     0,  2808,  2809,  2816,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2534,  2760,     0,     0,  1393,     0,     0,
       0,  1459,     0,  1544,  3117,  1937,  1392,  1396,  1413,  1418,
    1435,     0,  1452,  1471,  1472,  1474,  1582,  1473,  1480,  1603,
    1481,  1604,  1479,  1478,  2267,  1477,  2277,  2276,  1476,  2268,
    2278,  2269,  1394,  1470,  2295,  2315,  2294,  1487,  3115,  1959,
    1959,  1959,     0,     0,  1959,  1959,     0,     0,  1959,     0,
    1959,  1959,  1959,     0,     0,   157,  2143,   469,   470,     0,
    2970,  2983,  2984,  2980,  2985,  3003,  2986,  2990,     0,  2982,
    3075,  2328,     0,  2989,     0,  3075,  2987,     0,  3075,     0,
    2988,  2993,  3004,  3075,  2981,  2317,  2327,  2326,  3075,  2819,
    2818,  2318,  2820,     0,  2972,     0,  2300,     0,     0,  1979,
    1980,  1978,  1223,     0,     0,  2195,  2196,     0,  2199,     0,
    2200,  2205,     0,  2913,     0,     0,     0,     0,     0,  1318,
       0,  1982,  2025,  1983,  1981,  1959,     0,   435,   444,   446,
     447,   443,     0,     0,  3099,  3110,  3125,  3120,  3119,  3122,
    3123,  3124,  1378,  3121,  3118,     0,  1374,  1376,  1377,   951,
       0,     0,  2860,  2863,  2596,  2630,  2864,  2784,  2861,  2689,
    2862,  2389,     0,     0,  2321,  2887,  2822,  2823,  2824,  2821,
    2322,  2830,     0,  2854,     0,  2104,     0,   951,  2123,     0,
       0,  2123,     0,  1892,  2107,  2112,  2110,     0,  2866,  2084,
    2867,  2103,     0,  2060,  2083,     0,  2039,  2076,     0,  2868,
    1248,  2106,     0,  1892,  1249,  2067,  2123,     0,     0,     0,
       0,     0,     0,     0,   447,  1237,  1248,  1255,  1270,  1236,
    1270,  1372,  2300,  2038,     0,     0,     0,  2927,     0,  2197,
       0,  1371,  2001,     0,  1860,  1863,  1865,  3191,     0,     0,
       0,  3186,     0,  3192,     0,     0,  2294,     0,     0,     0,
       0,     0,  3116,     0,     0,     0,     0,  1994,  1353,     0,
       0,     1,    11,     0,     0,  1401,  2325,  2798,     0,  2324,
    2323,  2329,  2331,  3028,  3073,  3079,     0,     0,     0,  1235,
    1239,  1240,  1242,  1243,  1244,     0,     0,     0,  1344,  1380,
    1347,     0,  3112,  3112,  3112,  1892,  1884,  1883,  2031,  2024,
    2136,  2499,  2139,  2019,  2140,     0,  1063,  1136,     0,  1067,
       0,     0,     0,     0,  2930,     0,  1065,     0,  2105,  1143,
       0,  1094,     0,     0,  3152,  1069,     0,  3096,     0,  1328,
    1339,  1726,   398,     0,   170,   167,   168,  1284,  1955,  1304,
       0,  3102,     0,     0,     0,     0,  3148,     0,     0,     0,
     581,     0,     0,     0,     0,     0,   734,  3152,  3152,  3126,
    3146,     0,     0,  1853,  1494,  1853,  1853,  1853,  1735,     0,
       0,     0,     0,     0,     0,     0,  1853,     0,  1538,  1510,
       0,  1539,     0,     0,     0,  2284,     0,     0,     0,  1491,
       0,     0,  1726,     0,  1695,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1730,  1732,  2294,  1853,     0,     0,
    1853,     0,     0,     0,     0,     0,  1406,   947,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1853,
    1853,     0,     0,  1853,  1552,  2286,     0,     0,     0,  2285,
       0,     0,     0,  2275,  2274,  2255,     0,  1555,  1557,  1556,
       0,  1853,  1853,     0,     0,     0,  1853,  1853,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1853,  1484,  1483,  1485,     0,  1994,  3117,     0,  2869,
    1693,     0,     0,  1456,  1455,     0,  1454,  1453,  2314,     0,
    1395,     0,     0,  1400,  1399,  1461,  1462,  1463,  1464,     0,
    1465,  1466,  1467,     0,     0,     0,     0,     0,     0,  1458,
    1457,     0,     0,     0,     0,  1437,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1486,     0,     0,  2309,  2256,
       0,     0,  1598,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1965,     0,     0,     0,     0,     0,     0,  1959,
     159,     0,     0,  2971,  2963,  3001,  3000,  3005,     0,  3002,
    2998,  3006,  3007,  2991,     0,  2977,  2995,     0,  2979,  2997,
    2996,  2976,  2992,  2999,  2978,     0,  2974,  2966,     0,     0,
    1849,  2940,     0,     0,   165,     0,  1224,  1983,     0,  3215,
    3209,  2193,     0,  2206,  2207,  2203,     0,     0,     0,     0,
    2103,     0,  2189,  3111,  1320,     0,     0,     0,  1984,     0,
       0,  2170,  2182,  2178,  2180,  2169,  2172,   436,     0,     0,
     466,  1960,  2970,     0,     0,  3105,  3102,  1364,  1375,   950,
       0,     0,   953,  2886,  2002,  2003,   962,     0,   952,     0,
       0,     0,     0,     0,  2832,  2898,  2895,  2894,  2845,  2840,
    2839,  2333,  3024,  2838,     0,  2873,     0,   957,   959,   958,
    2883,   956,     0,     0,  2784,  2833,  2854,     0,     0,  2831,
       0,  2119,     0,     0,  2125,  2082,     0,   734,     0,     0,
       0,     0,     0,     0,     0,  2054,  2102,     0,  2101,     0,
    2075,  1893,  2117,  2118,  2123,     0,  2116,     0,  2123,     0,
    2090,  2107,     0,  2123,  2051,     0,     0,  2043,  2048,  2044,
       0,  2050,  2049,  2052,  2040,  2041,  2119,  2066,  2107,  2074,
    2081,   309,  2065,  2071,  2079,  2107,  1012,  1011,  1010,     0,
       0,  2107,  2123,  2123,   442,     0,     0,  1254,  1256,  1257,
    1275,  1274,  1251,  1271,  1272,   309,  2036,  3213,  3214,  2926,
    2008,     0,  1861,     0,     0,     0,  2259,  2258,  3188,  2257,
    3196,  3198,  3182,     0,  3185,  3184,  3193,     3,     0,     0,
     671,     4,     6,     0,     0,     7,  1346,  1995,  1357,  1358,
      12,   151,  2332,     0,     0,     0,     0,  1090,  1091,  1091,
       0,     0,     0,     0,     0,     0,     0,     0,  3063,  1089,
    3026,  3026,  3059,  3026,  3026,  3026,     0,     0,  1118,     0,
       0,     0,     0,  1385,  1384,  1387,  2466,     0,     0,  1936,
    1930,  1933,  1932,     0,  1379,  1349,  1348,     0,  3114,  3113,
       0,     0,     0,  1350,  1892,  2035,  2034,  2033,     0,  2031,
    1223,     0,  2138,     0,     0,  2128,  2129,  2130,  2131,  2132,
    2127,  2126,  2141,  2142,  3150,  3151,  3149,   964,  3144,   382,
       0,     0,  2932,  2938,     0,     0,   382,     0,     0,  2004,
    2004,     0,  2004,  2004,   650,     0,   649,  2004,   740,   602,
     604,   605,   639,   606,   607,   608,   609,   610,     0,  1221,
    2004,  1221,     0,  2004,  2004,  1221,  2004,     0,     0,  2004,
    2004,  2004,  2004,     0,     0,   965,  2004,     0,     0,  1221,
       0,  2004,     0,  1205,     0,     0,  2004,  2004,  2004,  2004,
    2004,  1221,     0,     0,  2004,  2004,     0,  1231,     0,     0,
    2004,     0,  2004,  2004,  2004,     0,  2004,  2004,     0,  2004,
       0,     0,  2004,  1165,  1166,  2004,  2004,   776,  1176,   736,
     763,   764,     0,  1061,  1062,  1137,  1139,  1209,  1145,  1144,
    1173,  1178,  1207,  1208,     0,  3227,  1073,     0,     0,  1072,
    3152,  1299,     0,     0,  1007,  1006,     0,     0,  1339,  1330,
    1728,     0,  1727,   380,     0,     0,  1286,  1285,     0,  1283,
    1312,  1311,  1309,     0,  1310,  1308,  1303,  1305,  1306,  3101,
       0,     0,  3103,  3107,     0,   317,     0,     0,     0,     0,
       0,   734,     0,   583,     0,  3036,  3071,   332,   315,     0,
    1040,     0,     0,   734,   734,   734,   734,  3140,  3128,  3135,
    3136,  3139,  3138,  3137,   734,  3134,  3127,  3130,  3131,  3133,
    3132,  3152,     0,     0,  1854,  1853,     0,     0,     0,     0,
       0,     0,  1736,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1402,     0,   899,  1564,     0,     0,     0,     0,
       0,  1825,  1826,  1827,  1828,  1836,  1829,  1830,  1831,  1838,
    1843,  1832,  1833,  1839,  1840,  1841,  1834,  1842,  1837,  1835,
    1844,     0,  1824,     0,     0,  1848,  1845,  1847,  1846,     0,
    1696,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1853,     0,     0,     0,  1853,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1574,     0,     0,     0,     0,     0,  1853,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1534,     0,  2297,  2296,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1639,     0,  1639,     0,     0,
       0,  1642,  1643,  1641,  1644,     0,     0,     0,     0,  1853,
       0,  1995,  1488,     0,     0,     0,     0,     0,     0,     0,
    1391,  1398,  1397,  1404,  1403,  1405,  1409,  1414,  1407,  1411,
       0,  1468,  2401,  1416,     0,     0,  1449,     0,  1419,  1429,
    1450,  1433,  1440,  1441,     0,  1436,     0,  1438,  1439,     0,
    1443,     0,  1442,  1446,  1447,  1448,  1451,     0,     0,     0,
       0,  1475,  1482,  1504,  1505,  1396,     0,  1599,  1600,  2290,
    2298,  1940,  1947,  1942,     0,  1965,  1944,  1952,  1959,  1969,
    1970,  1949,   740,  1967,  1948,   611,  3022,  1945,  1225,  1954,
    3240,     0,     0,   158,     0,     0,     0,     0,  2160,  2162,
    2165,  2161,     0,  2164,     0,  2163,  2144,  2147,  2153,  2166,
       0,     0,   467,   471,   473,     0,   476,     0,  2994,  3077,
       0,     0,  2975,  2968,  2969,  2967,     0,  3008,  2973,  1850,
       0,  2939,  2496,  2604,     0,  1855,  2301,  3217,     0,     0,
    3201,     0,  3212,     0,  2204,  2201,  2915,  1849,  2914,  2918,
    1314,     0,   154,   155,     0,     0,     0,  1319,  1323,     0,
    1288,  1764,     0,  2174,  2175,  2186,  2184,  2184,     0,   434,
     459,   454,   462,   456,   458,   457,   463,   464,   465,   460,
     455,   461,   448,     0,  2957,     0,     0,  2966,  3106,     0,
    3108,     0,  1855,  1365,  1364,     0,     0,     0,  2889,     0,
    2885,  2884,     0,  1091,  2311,  1091,     0,  2900,  2901,     0,
    2892,     0,  2893,     0,  2844,     0,     0,  2847,     0,     0,
       0,     0,     0,     0,     0,  2888,  2853,  2852,     0,  2855,
    2856,     0,  2859,  2909,  2910,  2907,  2908,  2911,  2912,  2906,
    2880,     0,  2121,  2124,  1857,     0,     0,  2099,  2093,  2092,
    2088,  2094,  2100,  2089,  2061,  2062,  2063,  1901,  1902,  1900,
    1894,  1895,  1899,  1898,  2057,  2108,  2098,  2096,  2085,  2123,
    2097,  2095,  2045,  2046,  2047,     0,  1892,     0,  2121,  2123,
       0,  2091,  2123,     0,     0,  2123,  2078,  2080,  1260,  1261,
       0,     0,  1276,     0,  1250,  2013,  2012,     0,  2009,  2011,
    2000,  1862,     0,  1867,     0,     0,     0,  3183,  3199,  3181,
    3187,  3194,  3195,  3180,  2298,     0,   672,     0,     0,   675,
       0,     0,  2004,    13,    10,  1126,     0,     0,  3070,     0,
    3026,  3026,     0,     0,  3031,  2330,     0,     0,     0,  3068,
       0,     0,     0,     0,  3056,     0,  3057,  3060,     0,  3061,
    3062,     0,     0,  3083,  3081,     0,  3082,  3080,  3013,  3028,
    3074,     0,  1098,  1247,  2306,  1246,  1245,  1241,     0,     0,
    1390,  1387,  1381,  1388,  2310,  1935,   954,  1931,     0,     0,
    1888,  1885,  1887,  1354,  1355,  1356,  1351,     0,     0,  1957,
    2029,  2032,     0,  2137,     0,     0,   964,   723,   725,   732,
     731,   733,     0,  1068,  2937,  2936,     0,     0,     0,     0,
    1066,     0,     0,   600,  2005,     0,     0,   600,     0,     0,
       0,     0,   741,  2105,  2004,  1222,  1057,  1008,  1315,  1008,
    1182,     0,  1057,     0,     0,     0,     0,     0,     0,  1315,
       0,     0,     0,     0,     0,  1315,     0,     0,     0,     0,
       0,  2004,     0,  1191,     0,  1147,     0,     0,     0,     0,
       0,     0,     0,  1192,     0,     0,     0,  1148,  2004,     0,
       0,     0,     0,     0,     0,  1315,     0,     0,     0,  1315,
    1234,     0,  1233,  1232,     0,     0,  1315,  1315,     0,   773,
       0,     0,     0,   769,   770,     0,     0,     0,     0,  1169,
    1170,     0,     0,     0,   737,  2004,  2004,     0,  1141,  1138,
     964,   964,     0,  2004,  3235,  1127,     0,     0,  1070,     0,
       0,  1295,  1332,  1326,  1331,  1329,  1339,     0,  1815,     0,
     400,     0,     0,     0,     0,     0,     0,     0,     0,   309,
     172,     0,   202,   206,   214,   218,   204,   301,   303,   210,
     212,   216,   224,   236,   222,   240,   226,   228,   230,   232,
     220,   234,   208,   246,     0,     0,   242,   244,     0,   248,
     250,     0,   238,     0,     0,     0,     0,   245,   203,   207,
     249,   215,   219,   247,   205,   302,   304,   211,   213,   243,
     217,   221,   223,   225,   241,   227,   229,   231,   233,   235,
     239,   237,   209,   251,     0,   309,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   200,     0,     0,   285,  1956,  1313,  1307,  3100,  3104,
     735,   964,     0,     0,     0,     0,     0,     0,   582,     0,
     585,     0,     0,  3035,  3036,  3039,  3040,  3041,  3042,  3043,
    3044,     0,     0,  3079,  2004,     0,     0,     0,  1041,   964,
     734,     0,     0,     0,     0,     0,  3129,     0,  1560,     0,
    1654,  1703,  1654,  1654,  1654,     0,     0,     0,     0,     0,
       0,  1561,     0,  1508,  1562,  1563,     0,     0,     0,  1654,
       0,   900,     0,     0,  1511,  1512,  1501,     0,     0,  1583,
       0,  1699,  1513,     0,     0,     0,     0,     0,  1584,  1731,
       0,  1733,  2298,     0,  1654,  1568,  1519,     0,  1654,     0,
    1520,  1585,  1586,  1587,     0,  1589,     0,  1570,     0,     0,
    1573,     0,     0,  1522,  1654,  1654,     0,     0,     0,     0,
    1654,  1524,     0,     0,     0,  1523,     0,     0,     0,     0,
       0,     0,     0,  1526,     0,  1502,  1654,  1654,  1576,     0,
       0,  1578,     0,  1535,  1853,  1654,  1691,     0,  1631,  1630,
    1648,     0,     0,  1648,     0,     0,  1645,     0,  1632,  1629,
    1628,     0,     0,  1654,     0,  2870,  2871,  2872,  2890,  1694,
    1692,  1492,  1410,  1415,  1408,  1412,  1417,     0,     0,     0,
    1428,     0,     0,     0,     0,     0,  1420,  1431,  1434,  1602,
    1590,     0,  1726,     0,     0,  1210,  1951,     0,  2105,  1950,
     612,   613,   615,     0,  1227,  1226,  1946,  3241,  1943,  1225,
       0,   160,   162,  2158,  2155,  2154,  2156,   309,  2157,     0,
    2167,  2145,  2454,  2781,  2782,     0,   480,     0,   452,   451,
     453,   477,     0,     0,  2966,  3076,     0,     0,  3017,  3020,
       0,     0,     0,  2961,  1852,  2950,  2946,  2951,  2953,  2949,
    2952,  2954,  2947,  2948,  1855,     0,  1892,  1856,  1764,  3211,
    3202,  3203,     0,  3207,  3210,  3216,  1334,  1335,  1339,  2202,
       0,     0,     0,   156,     0,     0,  2190,     0,  1321,     0,
       0,  1293,  1292,  1294,  1287,  1289,  1290,     0,     0,  1765,
       0,     0,     0,  2183,  2185,   309,   309,  2171,     0,     0,
       0,     0,     0,  1961,     0,  3109,  1367,     0,     0,     0,
       0,  1366,  1368,  1369,  1741,  1740,  1771,  1768,  1767,  1770,
    1769,  1772,  1764,  1849,  1874,  1855,     0,     0,     0,   961,
     963,   960,     0,     0,  3026,  3026,     0,     0,  2905,  2897,
    2899,  2896,  2846,  2334,  3025,     0,  2876,  2877,  2878,  2874,
    2875,     0,  2881,  2879,     0,  2858,  2120,     0,  1892,     0,
    2087,     0,     0,     0,  2059,     0,  2077,  2042,  1892,  2058,
       0,  2056,  2107,  2107,  2055,  1259,  1258,     0,  1262,  1273,
    2007,     0,  1866,     0,  1864,  3189,  3197,     0,     0,     0,
       0,     0,     0,     0,     0,   677,     0,   673,     0,     0,
    1085,     0,  3045,  1092,  1084,  1083,     0,  3030,  3064,  3041,
    1086,  1087,  1088,  3029,     0,  3047,  3066,  3026,     0,  3026,
    3026,  3016,  3015,  3014,  3011,     0,     0,     0,     0,     0,
    1119,  1121,     0,     0,     0,     0,  1095,  1099,  1100,  1386,
    1389,  1382,     0,  2219,  1929,  1383,  1890,  1891,  2292,  1889,
       0,     0,  1849,  2300,     0,     0,     0,  2302,     0,  1927,
    1928,  1912,  1913,  1911,  1914,  2133,  1915,  1926,  2004,   724,
    2004,     0,     0,     0,     0,     0,     0,     0,   383,   392,
       0,     0,  2931,     0,   627,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   634,  1076,   740,  1922,  1924,  1921,
    1923,   640,   653,  1925,   654,   651,  1077,   638,   641,  1078,
    3242,   652,   603,     0,   810,  1058,  1009,  1057,  1149,  1057,
       0,     0,     0,  1008,   813,  1057,     0,  1037,  1058,   809,
       0,  1216,  1215,  1217,   811,   811,     0,     0,     0,  1919,
    1920,  1918,  1916,  1917,   752,   747,     0,  1909,  1910,  1906,
    1907,  1905,  1908,   758,  1171,  1304,  1172,  1822,     0,   749,
     750,   751,   771,     0,     0,   760,     0,  1189,  1190,     0,
    1152,  1187,  1188,  1225,   742,     0,     0,     0,   789,   790,
     788,   765,   772,  1219,  1218,  1220,   745,   746,     0,     0,
    1206,  1881,  1888,   778,   753,   777,   748,     0,     0,     0,
    1200,  1160,     0,   787,   785,   782,   784,   783,   786,   761,
     754,   755,   757,   756,   768,   759,  1159,  2166,   743,   744,
     774,   775,     0,     0,  1142,  1221,  1221,  1177,  1174,  1175,
    1140,  1146,  1179,   635,   636,   611,     0,  2004,  3237,     0,
    1129,  1131,  3153,  3154,  1865,     0,     0,     0,  1818,     0,
    1819,  1816,  1817,     0,  1729,     0,     0,     0,     0,     0,
       0,     0,     0,   171,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   169,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   318,   964,   729,     0,   616,     0,     0,
       0,   327,     0,  2004,  2004,  2004,  2004,   322,   740,   587,
     589,   590,   591,   592,   593,   596,   594,   597,   595,   598,
     599,   611,  3037,  3033,     0,  3034,     0,  3072,  1118,     0,
    1046,  1048,  1047,  1043,  1042,     0,     0,  2218,     0,  2217,
     809,   312,   656,   658,   661,   659,   740,   738,   663,     0,
       0,   346,     0,   381,  3175,     0,     0,     0,  1654,  1605,
    1655,  1607,  1608,  1613,     0,  1737,     0,  1498,   912,   912,
     896,  1711,   892,   884,   890,  1725,  1716,  1720,  1723,  1722,
    1724,     0,   868,  1719,  1721,   882,  1707,   896,  1709,  1712,
     912,  1717,  1506,     0,     0,     0,     0,     0,  1654,  1615,
    1654,     0,     0,     0,     0,     0,     0,  1697,     0,     0,
       0,  1503,     0,  1594,  1654,  1619,  1654,  1617,     0,     0,
       0,     0,     0,     0,     0,  1623,  1621,     0,     0,     0,
       0,  1654,  1625,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1622,  1624,     0,     0,     0,     0,
       0,  1609,  1662,  1656,  1657,  1658,  1659,     0,     0,     0,
    1646,  1648,     0,  1648,     0,  1633,     0,  1558,  1654,  1611,
    1489,     0,  1426,  1421,     0,  1430,     0,  1445,  1444,     0,
       0,     0,  1601,     0,  2291,  2299,  1941,  1939,  1212,  1211,
    1953,  1968,  2105,  3023,  1938,   163,     0,  2159,  2152,  2148,
    1693,     0,   472,   481,   474,   478,   479,   475,     0,  3078,
    3086,     0,     0,     0,     0,  1892,     0,  2941,     0,     0,
    3201,     0,  1339,  1341,  2208,  2209,     0,     0,  2921,  2922,
    2920,  2919,  2192,  2191,     0,  1324,  1325,  1291,     0,     0,
    1997,  1996,     0,  1974,  1976,  1985,  1988,     0,  2177,  2176,
    2187,  2179,  2181,     0,   449,     0,  2966,     0,     0,  2955,
       0,     0,  1849,     0,  1741,  1771,  1768,  1767,  1770,     0,
       0,     0,     0,  1754,  1762,  1760,  1762,  1757,     0,     0,
       0,  1849,  1865,     0,  1858,  1874,  2843,  2842,  2841,  1091,
    1091,  2835,  2834,  2903,  2902,  2904,  2849,   740,  2848,     0,
    2857,  2122,  2068,  2073,  2072,  1897,  1896,  2086,  2053,   309,
     310,  1855,  2123,     0,  1282,     0,  1278,  1277,     0,  1264,
    2010,  1868,     0,  3200,     5,     0,     0,     0,     0,   676,
       0,   686,     0,     0,     0,     0,  3218,  3046,     0,     0,
    3069,     0,     0,     0,  3054,  3027,  3058,  3055,  3012,  1124,
    1122,  1123,  1125,  1120,  1103,  1102,  1104,     0,     0,     0,
    1117,  1116,  1115,     0,     0,  1082,  1101,   955,     0,  2227,
    1886,     0,  1764,     0,  1855,  1958,  2030,  2029,     0,     0,
       0,   386,   389,   387,     0,   388,     0,     0,  2934,     0,
     637,  1075,   740,   629,   631,   632,   633,   341,   340,   342,
     343,   345,   344,   339,  1081,     0,   647,     0,     0,     0,
       0,     0,  1057,  1004,  1005,   812,     0,   807,   814,     0,
       0,     0,     0,     0,   795,   797,   798,     0,   881,   835,
     826,   912,   829,   828,   972,   896,   840,   887,     0,   889,
     886,   861,   860,   877,   859,   864,   848,   972,   972,   847,
     880,   972,   865,   863,   867,     0,   868,   888,   873,   862,
     866,   858,     0,   879,   912,   896,   896,   844,   878,   972,
       0,   871,   912,   800,   916,   846,   979,     0,     0,   912,
     914,   892,  1198,  1199,  1045,  1044,  1197,     0,     0,  1155,
       0,  1156,     0,  1158,   962,   962,   766,  1163,  1186,  1185,
       0,  1164,   767,  1228,  1154,     0,  1882,  1153,     0,     0,
       0,  1288,     0,   780,   779,  1080,  3231,  3228,  3229,     0,
    3239,  3238,  3240,     0,     0,     0,   351,  3155,     0,     0,
    1338,  1340,     0,  1327,     0,   174,   175,     0,   176,   177,
       0,   178,   179,     0,   180,   173,   286,   307,   308,   253,
     291,   279,   290,   280,   293,   292,   294,   295,   281,   282,
     297,   298,   296,   283,   284,   201,   278,   252,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   267,   270,
     271,   268,   269,   264,   300,   265,   299,   266,   272,   273,
     274,   276,   277,   305,   306,   730,     0,  2004,  2004,   321,
     740,   618,   620,   621,   622,   623,   626,   624,   625,   327,
       0,     0,   326,     0,     0,     0,     0,     0,  2105,   323,
       0,     0,   333,  1098,  3225,  3226,  3227,     0,   662,   313,
       0,     0,   657,   655,   964,   660,     0,     0,  3170,     0,
       0,   577,   576,     0,     0,  1536,  1606,  1738,     0,     0,
     913,  1704,   972,     0,  1714,     0,  1715,   894,   893,   885,
     883,  1718,   891,   869,  1708,  1713,  1710,  1706,  1507,     0,
       0,  2287,  1509,  1500,  1499,  1616,  1614,     0,     0,  1542,
    1566,     0,  1543,     0,     0,     0,     0,     0,  1515,     0,
    1518,     0,     0,  1596,  1620,  1618,  1569,  1588,  1545,  1571,
       0,  1521,  1490,     0,  1546,     0,  1551,  1549,     0,  1626,
    1525,     0,     0,  1532,     0,  1530,     0,  1531,     0,  1533,
    1575,  1577,     0,     0,     0,     0,  1654,  1663,     0,  1664,
    1650,  1649,  1636,     0,  1640,     0,  1637,     0,  1651,     0,
    1791,  1612,  2891,     0,  1425,  1427,  1423,     0,  1432,  1591,
    1214,  1213,   614,   161,  2150,     0,  2146,     0,     0,     0,
       0,  2965,  3019,  3018,  3021,  3084,  3009,  2942,     0,     0,
    2014,  2016,     0,  3208,  1336,  1339,  1341,     0,  1337,  2210,
    2923,  2924,  1322,     0,  1821,  1975,  2022,     0,     0,     0,
    1992,  2289,  2008,  1993,  1999,     0,     0,     0,  1961,     0,
       0,     0,  1865,     0,  1779,  1773,  1775,  1776,  1778,     0,
       0,  1741,  1740,  1370,  1756,  1755,  1763,     0,  1761,  1762,
    1762,     0,     0,  1750,  1749,     0,  1812,  1780,     0,     0,
    1869,  1858,  3026,  3026,     0,  2882,  2069,  2070,  2064,     0,
       0,     0,     0,     0,  1266,  3190,     0,   682,   669,     0,
     667,   671,     0,   664,     0,     0,   680,     0,     0,     0,
    2313,  2312,  3048,     0,  3049,     0,  1107,     0,  1106,  1112,
    1109,  1108,     0,  1097,  1096,     0,     0,     0,     0,  2220,
    2222,     0,  1934,  1855,  1855,  2301,  2027,     0,  2303,  1855,
     726,   781,   391,   390,   396,   397,     0,  2933,  2105,   338,
       0,  1151,     0,     0,   688,     0,     0,     0,   815,     0,
       0,  1055,     0,  1054,  1888,  1038,  1039,  1181,   809,   800,
     834,   827,   845,   966,   977,   975,   969,   870,   972,     0,
     973,   974,   831,   843,     0,   854,     0,   849,   972,   857,
     853,   869,   872,   874,   876,     0,   972,   842,   841,   851,
     838,   901,     0,  1228,   801,   926,     0,     0,     0,     0,
    1457,   920,     0,   984,     0,     0,   929,     0,  2004,  2004,
       0,   937,   816,   917,   919,   818,     0,   940,     0,   980,
     979,   833,   972,   979,   901,     0,   915,   901,   901,  1195,
       0,  1196,  1228,  1823,  1204,  1203,     0,     0,  1230,  1184,
    1880,  1202,  1201,     0,  1157,   762,     0,     0,  3233,     0,
    3236,  1093,     0,   361,     0,     0,  1128,     0,   354,   352,
     363,     0,  1301,  1296,  1820,   181,     0,   183,   185,   190,
       0,   192,  2335,     0,   195,     0,   197,  2307,   199,     0,
     186,     0,     0,   287,   289,     0,     0,     0,  2105,   325,
       0,     0,     0,     0,     0,     0,   584,   646,   642,   648,
     645,   588,  3038,     0,  3053,  3051,  3052,  1095,  3235,     0,
       0,   964,   739,     0,     0,   401,   793,   794,   792,   791,
       0,  3176,   580,   578,   579,     0,     0,  1739,     0,     0,
       0,     0,  1705,     0,     0,  1495,  1506,  2288,     0,     0,
       0,     0,  1700,  1702,  1698,  1654,     0,     0,     0,     0,
       0,  1493,     0,  1592,     0,     0,     0,     0,     0,     0,
    1529,  1527,  1528,   981,  1580,  1579,     0,  1610,  1660,     0,
    1666,  1647,  1635,  1634,     0,  1648,  1559,     0,  1799,  1800,
       0,  1792,  1793,     0,  1422,     0,     0,     0,   489,   484,
     492,   486,   488,   487,   493,   494,   495,   496,   490,   485,
     491,   483,   482,     0,     0,     0,  3093,  1855,  2014,     0,
    2016,     0,  1973,  3205,  3204,  3206,  1333,  1342,     0,  2213,
       0,  1766,     0,     0,  1986,  1989,     0,     0,     0,     0,
     450,     0,     0,  2960,  1962,  1961,     0,  1781,  1370,  1742,
    1758,     0,     0,  1751,  1759,     0,     0,     0,     0,  1806,
    1807,     0,     0,  1810,  1813,  1814,  1777,  2293,  1878,  1877,
    1859,     0,  1363,  1869,  2837,  2836,  2850,  1281,  1280,  1279,
    1263,     0,     0,  1268,   670,     0,   668,     0,     0,   666,
     674,     0,   681,     0,     0,  3065,  3050,  3067,     0,  1113,
    1114,  1111,     0,     0,     0,     0,     0,  2221,     0,     0,
    2228,  2230,  2028,  1883,  1883,     0,   630,     0,   691,  1150,
       0,     0,   808,     0,     0,     0,  1026,     0,     0,  1051,
     796,   799,   968,   967,   971,     0,   970,   830,   979,     0,
    1059,   850,   875,     0,   852,   905,   906,   907,   839,   902,
     904,   986,  1180,   932,   941,   943,   942,   933,   931,     0,
       0,     0,     0,     0,     0,   948,   923,  2264,   949,  2265,
    2261,     0,     0,   944,   945,   946,   934,   930,   935,     0,
       0,   936,     0,   918,     0,     0,   928,   921,   922,   832,
     836,   837,   823,     0,   824,   825,     0,  1193,  1183,  1167,
    1229,     0,  3232,  3230,  3234,   362,   350,     0,     0,  1130,
    1132,     0,     0,  1133,     0,     0,     0,  1300,   182,     0,
     191,     0,     0,   196,     0,     0,   187,     0,   275,     0,
    1015,   644,   643,   619,     0,  1021,   328,   329,   331,     0,
       0,   320,  3237,     0,   314,   311,     0,     0,     0,   402,
     404,     0,     0,   411,     0,  1537,   910,   908,   911,   909,
     897,     0,     0,     0,  1540,  1541,  1567,     0,  1627,  1565,
       0,  1516,  1593,     0,     0,  1572,  1547,  1550,  1548,  1553,
    1554,     0,     0,     0,     0,  1668,  1652,  1653,     0,  1801,
    1517,  1794,     0,     0,  1424,  2151,  2149,  3084,  3087,     0,
       0,  2962,  1892,  2016,  1865,  1971,     0,  2211,     0,  2215,
    2212,  2021,  2023,  1987,  1990,  1991,  2006,  1998,  1961,     0,
    2956,     0,  1774,  1753,  1752,  1745,     0,  1747,     0,  1802,
    1802,  1811,  1879,     0,  1875,     0,  1870,  1871,  1362,  1265,
       0,     0,  1252,   683,     0,   673,   687,   665,  3222,  3032,
    1105,  1110,  2225,  2226,     0,  2223,     0,     0,  2229,  1903,
    1903,     0,  1015,     0,   711,   689,  1021,     0,  1050,  1026,
    1888,     0,  2004,  2004,  2004,   802,  1027,  1028,  1030,  1031,
    1034,  1053,     0,   978,   976,   972,     0,   972,   903,     0,
     990,  2263,  2262,     0,   925,   927,   938,   939,   932,   819,
       0,     0,  1162,  1168,     0,   348,   353,   364,   365,  1074,
    3158,  3156,     0,     0,   184,   193,   194,   198,     0,     0,
     288,     0,  1210,  1016,  1017,  1019,     0,  1210,  1022,  1023,
    1025,     0,     0,   316,  1026,     0,   359,  3171,     0,   962,
    3169,   414,   412,   413,     0,   407,   409,     0,     0,     0,
    1496,     0,  1701,     0,  1595,  1597,   982,     0,  1665,     0,
    1689,  1688,  1690,  1661,     0,  1638,     0,  1798,  1797,  3093,
    3085,  3088,  2943,  1972,  2015,     0,     0,     0,  2216,  2959,
    1961,     0,     0,     0,     0,     0,     0,     0,  1876,     0,
       0,  1267,     0,   309,     0,     0,     0,     0,  3219,  3220,
    2224,  2232,  2231,     0,  2026,  2018,  2935,   803,     0,     0,
    2004,     0,     0,  2004,  2004,  2004,  2004,   706,   712,   714,
       0,   804,     0,     0,   805,  1056,  1033,     0,     0,     0,
    1029,  1888,   855,  1060,   856,     0,   989,     0,   994,   924,
       0,  1194,  1161,   355,  1134,   516,     0,  3157,  1298,  1297,
       0,     0,     0,   335,  1018,   324,   336,  1024,     0,  1210,
    3168,   351,   360,     0,   403,   405,  3177,   411,     0,     0,
     895,   896,  1514,  1581,  1667,     0,     0,     0,     0,  1683,
    1670,  1671,     0,     0,  2964,     0,  3094,     0,     0,     0,
    2958,     0,  1849,  1746,  1748,     0,  1803,     0,  1815,     0,
    1873,  1872,  1269,  1253,     0,     0,  2004,     0,  3223,  1904,
     700,   693,   696,     0,     0,  2004,  2004,     0,     0,     0,
       0,     0,   690,   713,  2004,   806,  1049,  1032,  1035,  1036,
    1052,   987,     0,   991,   992,   993,     0,   985,     0,     0,
     357,   542,  2428,   528,   514,     0,     0,  2617,   518,   366,
     369,   367,  2019,   368,   374,     0,   375,   376,   377,   378,
     379,   370,   540,   541,   373,   371,   372,     0,  2319,     0,
    2320,  2380,  2379,  2381,     0,     0,     0,   188,     0,  1020,
     330,   334,   363,     0,   384,   408,   962,     0,     0,     0,
       0,  1678,     0,     0,     0,  1676,     0,  1672,     0,  1669,
    1674,  1673,     0,  2017,  2214,     0,  2601,     0,  1784,     0,
    1782,  1805,  1804,     0,     0,   684,     0,     0,  3224,   700,
       0,   698,     0,   694,   692,   695,   722,     0,     0,   718,
     719,   717,   715,     0,     0,   708,     0,   988,     0,     0,
     820,   356,     0,   349,     0,     0,   527,   530,     0,     0,
     533,   523,   522,   524,     0,   517,   516,   516,   570,   521,
     567,   566,   559,     0,  3159,     0,     0,     0,   962,  3178,
     410,  3164,  1497,     0,  1679,     0,  1681,  1680,     0,     0,
    1685,     0,  1686,  2845,  3092,  3091,  3089,  1764,     0,  1783,
       0,     0,   962,  1809,  1808,     0,   678,   684,  3222,   697,
       0,   704,     0,   702,   705,   720,   721,   711,   707,     0,
     716,  1000,     0,   999,     0,   996,   995,   822,   821,   916,
     358,   543,   554,   557,   549,   529,     0,     0,     0,   519,
     516,     0,   503,   501,   502,   508,   509,   510,   511,   512,
     513,   504,   507,   505,   506,   516,     0,   419,     0,     0,
    3160,  3161,   189,   365,  3172,   394,   393,   385,     0,   516,
    3162,  3163,     0,  3166,     0,  1677,  1675,  1684,  1687,  3090,
     954,     0,  1785,  1786,  1789,   685,   679,  3221,   699,   701,
       0,   710,   709,  1002,  1003,  1001,     0,     0,   817,     0,
       0,   516,   550,     0,   525,     0,   534,     0,     0,   417,
     573,   571,   415,   561,   561,   347,   384,   395,  3179,  3165,
     516,  1682,  2233,  1788,  1790,     0,   703,     0,     0,   551,
     557,   547,   555,   516,     0,     0,   515,     0,   569,   418,
       0,     0,     0,   516,     0,   560,   562,   564,  3173,  3167,
       0,  2219,     0,   998,   997,     0,   548,     0,     0,   546,
     526,   531,   516,   574,   516,   428,   427,     0,     0,   497,
     568,     0,   420,   516,     0,  2227,  1791,   552,     0,   516,
       0,   516,     0,   516,     0,     0,   962,     0,     0,   416,
    3174,     0,  2235,  1795,  1787,  1793,     0,   544,   516,   532,
     537,     0,     0,   423,   498,   499,     0,   425,  2234,     0,
    2239,  1796,     0,   516,   516,   533,   536,   575,   572,     0,
       0,   421,   422,   433,   432,     0,     0,     0,  2246,     0,
     516,   516,   538,   441,   439,   516,   429,   437,   431,     0,
     438,   500,   426,  2237,  2238,  2236,  2241,     0,     0,  2243,
    2244,     0,  2251,     0,   424,   440,  2245,  2240,     0,  2247,
    2249,     0,     0,  2198,   430,  2242,     0,     0,     0,  2248,
    2250,  2252
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1143,  2374,    67,    68,    69,    70,    71,
    2202,    72,  1430,  2143,  2891,  2892,    73,   977,   735,    74,
    1865,  1864,  2589,  2590,  3925,  4416,  4417,  3934,  4431,  3928,
    4420,  4421,  3931,  4425,  4426,  2655,  2656,  2657,  2658,  2659,
    2660,  2661,  2662,  2663,  2664,  2665,  2666,  2667,  2668,  2669,
    2670,  2671,  2672,  2673,  2674,  2675,  2676,  2677,  2678,  2679,
    2680,  2681,  4432,  4433,  3941,  3948,  3953,  3975,  2682,  2683,
    2684,  2331,    75,    76,    77,    78,  2691,    79,  4002,  2713,
      80,  3172,  3173,  1907,  4027,  4406,  5083,  4410,  5180,  5283,
    5101,  3320,  4753,  5084,  5085,  5189,  3442,  2453,  5309,  3158,
    5397,  3159,    81,  1212,  4788,  4789,  4790,  4984,  4985,  4986,
    4987,  5473,  5370,  5442,  5474,  5549,  5555,  5497,  5565,  5566,
    5567,  5553,  1498,  5568,    82,  1009,  1010,  1500,  2232,  2906,
    2233,    83,    84,   939,  2162,  2163,  2164,  2165,  3597,  2907,
    3592,  3593,  4551,  5498,  5551,  5371,  5372,  5290,  5373,  5192,
    5374,  5294,  5375,  5195,  5376,  5377,  5378,  5379,  5465,  5380,
    5289,  5490,  5367,  5368,  5467,  5530,  5546,  5381,  5202,  5284,
    5429,  5203,  5285,  5460,  5363,  5461,  5485,  5526,  5364,  5430,
    5488,  5433,  5382,  5388,  5475,  5383,  5389,  5384,  5207,  5301,
    5387,  5299,  5386,  5471,  5470,  5512,  4033,  4475,  1893,  2700,
    3397,  3398,  3399,  3175,  3176,  1759,  2879,  2880,  2881,  3989,
    3990,  3991,  3781,  3782,  3783,  2463,  3315,  3164,  1760,  1761,
    1827,  1763,  3403,  3993,  3994,  3404,  3405,  1764,  3407,  1765,
    1766,  1767,  3181,  3431,  3432,  3433,  3434,  3435,  2369,  2370,
    3724,  3075,  3721,  4631,  4236,  5336,  4243,  4293,  4294,  4904,
    5264,  5151,  5260,  5152,  5262,  5342,  5343,  5162,  5274,  5275,
    5057,  5058,  5059,  2446,  2447,  3383,  3384,  2448,  1223,  1828,
    3436,  2473,  1829,  3274,  1830,  1831,  2451,  3289,  3261,  4470,
    3813,  3814,  3815,  4343,  3816,  3204,  2481,  3806,  3807,  4361,
    3863,  4725,  5359,  3864,  3865,  3866,  3867,  3868,  3869,  3870,
    4050,  3871,  4051,  4046,  4047,  4044,  1261,  4688,  4689,  4690,
    4040,  4041,  4377,  4362,  4363,  4364,  4697,  4716,   883,  4706,
    4319,  1516,  3123,  1539,  1540,  3010,  2250,  1832,  4320,  4321,
    4322,  4371,  4113,  4821,  4366,  4344,  4930,  5075,  5078,  5177,
    5355,  3205,  1857,  3197,  1609,   755,  4962,  4963,  4964,  4967,
    4968,  4969,  4915,  4916,  4917,  4918,  3206,  2717,  4919,  4920,
    3423,  4907,  4301,  4302,  4303,  3207,  4679,    85,    86,  1737,
      87,  1746,    88,  1739,    89,  1850,  1204,    90,  2565,    91,
      92,    93,    94,    95,  2380,    96,    97,  3755,  3116,  3117,
    3118,  2412,  3110,  3111,  1148,  3321,  3916,  4949,  1186,  1833,
    1834,  2559,  1835,  1836,  4942,  1837,  3235,  1838,  1839,  1840,
    1841,  3577,  3578,  3212,  3579,  3264,  2483,  1467,  2886,  4389,
    2535,    98,    99,  1159,  1160,  1161,  1162,  1163,  1164,  1087,
     100,   101,  2342,  5033,   102,  1617,  1618,  1619,  3709,  4234,
    4623,  4882,  1622,  1623,  1624,  3058,  3707,   103,  1869,   104,
    2964,  2965,  2966,   105,  4757,  2571,   106,   107,  1876,  1877,
    1878,   108,   238,   109,  1486,  1484,  2207,  2208,   110,  1208,
    1209,  2573,   111,  2946,  2947,  1858,  1859,  4168,   112,   113,
    1356,   115,   884,   117,   118,  2242,  2243,  2991,  2992,   119,
     120,  1025,  1026,  1027,  1168,  1169,  1695,  2421,  2422,  2423,
     885,   886,  1370,  1258,  1860,   888,   889,  2096,   890,  1371,
    1372,  4368,   891,  1383,  2084,   892,  4059,   893,   894,  4130,
     895,   896,   897,  4082,  4083,  4503,  2116,  2117,  2118,   898,
     899,   900,  2832,  2050,  2051,  4124,  3549,  4525,  3449,  3450,
    3543,  4875,  3545,  4118,  4119,  4520,  4825,  5003,  5119,  5231,
    5121,  5232,  5239,  5004,   901,   902,   903,  1981,  4075,  3497,
    4492,  1926,  3482,  1861,  1862,  1283,  1284,  1249,  2738,  1932,
    2993,  4200,  2994,  3668,  3669,  3670,  4211,  4207,  2968,  2969,
    2995,  2996,  2997,  2998,  2999,  3000,  3001,  5022,  5247,  5248,
    5455,  4530,  5524,  4531,  4532,  4533,  5026,  4602,  4603,  4604,
    4605,  4606,  3329,  3330,  3331,  4173,  3236,  1971,  1972,  1979,
    2180,  2181,  1927,  2936,  1554,  4220,  1139,  1114,  1115,  1635,
    2352,  4612,  4876,  4877,  3674,  4608,  4874,  3270,  3271,  1175,
    1176,  2431,  3128,  3129,  1570,  1571,  2310,  2311,  5044,  3275,
    3145,  3224,  3182,  3146,  3147,  1699,  1700,  1170,  1701,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,  2900,  2438,  1013,  3649,
     756,  2131,  2132,  2133,   139,   140,   982,  1003,  1489,  3633,
    3634,  4179,  3635,  1140,  3637,  4183,  1111,  2464,  2465,  4184,
    1112,  2347,  2348,  2349,  4560,  4562,   141,   142,  4175,  4176,
    1004,   143,  3137,  1718,  1719,   144,  1104,  1593,  1594,  1595,
    2326,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,  1567,  1088,  1768,  1574,  1090,
    1091,  1092,  1575,  2292,  3038,  1555,   189,   190,  1730,   191,
    1182,  1183,  1731,   192,  1431,  2156,  3589,  4146,  4536,  2157,
    2158,  2901,   193,  1006,  1495,  1491,  2213,  1496,  2216,  2217,
    2215,  2975,  2973,   194,   996,  1482,  2956,   195,   987,   196,
     197,   991,  2950,  2195,  1475,  3616,  4569,  4849,  5017,  3439,
    3759,  4269,  4270,  4272,  4650,  4651,  5481,  5540,  5575,  5558,
    5578,  5579,  5582,  5589,  5590,  5593,   904,  1638,   905,  4707,
    4708,   906,   907,   908,   909,   910,   911,  4488,  4180,   912,
    2432,  4609,   913,  4177,   914,  3002,  2439,   725,  4427,  4428,
    1149,  1639,  2425,  2255,  4252,  1373,  1126,   967,  5209,  1045,
    1151,  1531,  1152,  2136,  1532,  2920,   727,   728,   729,  5210,
     730,   731,   971,  1050,   732,   198,  1051,   199,  2264,   200,
    3687,  3688,  1545,  1549,  2279,  2280,  2281,  1093,  2067,  2273,
    1546,  2282,  1054,  2849,  1524,  1525,  2262,  1526,  2260,  1527,
    3019,  2290,   201,  1477,   738,  2198,  2199,  3620,   202,  1108,
     203,   204,   205,  1194,   206,  2185,  2934,  2935,   207,  2981,
     208,  2167,  2176,  1434,   973,   974,  2923,  3105,  2407,  2408,
    2921,  2137,  1533,  2394,  1678,  1667,  1896,  2703,  2704,  2705,
    2706,  3089,  2708,  2709,  2710,  3415,  1154,  1670,  1897,  1155,
    1445,  2170,  1688,  4556,  4151,  5126,  4841,   209,   239,   741,
    1221,  1883,  2239,   210,   211,   212,   213,  1710,   917,  3003,
     918,  1028,  1237,   757,  1916,  1908,   232,   233,   234,   760,
     761,   235,  1848,  1849,  4411,  4951,  5087,  5402,  5403,  1910,
    5450,  1911,  1912,  4465,  5103,  5446,  5503,  1913,  4030,  4793,
    5224,  5399,   214,  1644,  1640,  1124,  2363,  2357,  2359,  2942,
    4565,  2943,  2944,  2192,   215,   216,  1470,   217,   218,  5038,
    5039,  4016,  2564,  3907,  3908,  4400,  3318,  3912,  2888,  3191
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -4398
static const int yypact[] =
{
    6944,  2984,   255, -4398,    22,   410, 73958,   208,  2283,  2283,
      17,  3448, -4398, -4398, -4398, 12489,  3444, -4398, 73958,   255,
     671, 49375, 73958, -4398,   726,  1994,   837,   364,   428,  1484,
     255, 73958, -4398,   822,  2012,   255,  1855,   674, 65235,  1191,
      17, 73958,  1697, 31111,  8648, -4398, 65235,   344,   181, 73958,
     777,  1239,  1448, 73958,   904, 66028,  3406, 23097,  2341,  1429,
     991,   308, -4398, 17385,  1780,  1850, -4398,  1721, -4398, -4398,
    1499, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, 57305, -4398,  1067,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  2280,  1018, -4398, -4398, -4398, -4398,
   -4398,  1756, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398,   374, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, 66821, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  1758,
   73958,  1819, 73958,  1777,  1804, 73958, 63649, 73958, 73958,  1561,
    1191,  1836,  2009, -4398, -4398,  2056, -4398, -4398,  2283,    17,
   -4398, -4398, 73958, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  1409, -4398,  1522, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,   231,  1762, -4398, -4398, 73958, 73958,
   -4398,  2338,  2174,  2178,  2211,  1997, 63649,   389, 73958, -4398,
    1896, -4398,  2174,  2174,  2312,  2358,  1928, -4398, -4398, -4398,
    2056,  2587, -4398,  1846,  1861,  1940, 23097, -4398,  1967,  1986,
    1993, 17385,  2005,  2018,  2024,  2039,  2058,  2063,  2082,  2091,
    2091,  2096,  2103,  2105,  2124,   -95,  2131, -4398,  2137,   991,
    2155, -4398, -4398,  2171,  2186,  2191,  2193, -4398,  2203,  2235,
    2248, 18201,  2260,  2262, -4398, 42213,  2267,  2270,  2278,  2288,
    2304,  2306,  2311,  2316,  2324, -4398, -4398, 17385,  2096, -4398,
   -4398, -4398,  2346,  2349,  2352,  2386,  2403,  2415,  2427,  2440,
    2443,  2451,  2461,  2462,  2475,  2476,  2481,  2482,  2096, -4398,
     798,  2493,  2497,  1144,  2499, -4398,  2504, -4398,   349,  2506,
    2091,  2096,  2096,  2513,  2523,  2544,  2549,  2558,  2559,  2582,
    2584,  2594,  2601,  2602,  2604,  2612,  2614,  2617,  2626,  2634,
    2648,  2657,  2659,  2677,  2678, 23097, 23097, -4398, 23097, 10041,
   31904, -4398, 73958, -4398, -4398,  1887, -4398, 52547,  2922, -4398,
    3064, 23097,  1286, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  1981, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398,   499, -4398,  2687,  2010, -4398, -4398,  1191,
    1191,  1191, 73958,  2454,  1191,  1191,  2023, 73958,  1191,  2259,
    1191,  1191,  1191,  2810,  2283, -4398, -4398, -4398, -4398,  2903,
    2556,  2573,  2268, -4398,  2438, -4398, -4398, -4398,  2702, -4398,
    2695, -4398,  2548, -4398,  2818,  2695, -4398,   363,  2695,   387,
   -4398, -4398, -4398,  2695, -4398, -4398, -4398, -4398,  1837, -4398,
   -4398, -4398, -4398,   868, -4398,  2859,   253, 63649,  3108, -4398,
   -4398, -4398,  3149, 73958,    22, -4398, -4398, 17385, -4398,  3140,
   -4398,  1193,  3241, -4398,  2283,  3284,   388, 73958, 58098, -4398,
    2283, -4398, -4398,  3261, -4398,   234,   935,  2888, -4398, -4398,
    3015, -4398,  3345, 50168,   341, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, 12489,  1697, -4398, -4398,    87,
    3017,  1243, -4398, -4398, 53340,  1707, -4398,  1540, -4398, 77923,
   -4398,  3306, 32697, 54926, -4398,  2706, -4398, -4398, -4398, -4398,
   -4398, -4398, 76337,  2726,  1125, -4398,  3377, -4398,  1005,  2734,
    2671,  1005, 58891,  3287,   361,   351,   449,   597, -4398,  3382,
   -4398,  3029,  3031, -4398, -4398,   629,  3697, -4398,  3425, -4398,
    3384, -4398,  3074,  3287, -4398, -4398,  1005,  3077,  3337,  3468,
      84,   345,   505,  1750,  3015, -4398, -4398,   840,    81, -4398,
      81, -4398,  2815, -4398, 73958, 73958,    22, -4398,  2283, -4398,
    2816,  2817, -4398, 73958,  2819, -4398,  2834, -4398,   398,   398,
     398,  3552,   398, -4398,   398,  3628,  2835,  2838,  3609,  3495,
    2179,  3503, -4398,  3469,  3554,  2637,  2856,  2280,  2860,  1756,
    2862, -4398, -4398,  2867, 73958,  2091, -4398,  2871,  1646, -4398,
   -4398,  2877, -4398,  2832, -4398,   -55,  3526,  3534,  3539, -4398,
    2886, -4398, -4398, -4398, -4398,    32, 30318,  3456,  2280, -4398,
    1933,  3655,  1264,  1264,  1264,  3287, -4398,  1018,  1781,  3414,
    3513,  3553, -4398,  2839, 59684,  1501, -4398, -4398, 58098, -4398,
   73958, 73958,  1119, 63649, -4398, 73958, -4398,  3336,  2792,  7620,
   73958, -4398, 73958, 73958,  3189, -4398, 73958, -4398,   108, -4398,
    2060, 17385, -4398, 73958, -4398, -4398, -4398,   174, -4398,   201,
    1141,   194,  2317, 73958, 73958, 73958,  3206,  3532, 73958,  3021,
    3724, 73958, 58098, 81095, 73958, 73958,  2174,   461,  1842, -4398,
   -4398, 17385, 17385,  1825,  3661,  3720,  3720,  3720,  2822,  3105,
   17385, 17385, 17385, 17385, 17385, 17385,  2123,  2923, -4398, -4398,
      56, -4398,  2927, 17385, 17385, -4398, 17385, 17385, 73958, -4398,
    4391, 17385, 17385,  1250,  3601, 17385, 17385, 17385, 10041,  4846,
   17385, 17385, 73958,  3732,  2929, -4398,  2931,  2165, 17385, 17385,
    2227, 17385, 17385, 17385, 17385, 17385, -4398, -4398, 17385, 17385,
   23097, 17385, 17385, 17385, 17385, 17385, 17385,  2939, 17385,  3720,
    3720, 17385, 17385,  2347, -4398, -4398, 17385,  1566,  1566, -4398,
   17385, 10857, 17385, -4398, -4398, -4398,  2940, -4398, -4398, -4398,
   73958,  3720,  3720, 17385, 17385, 17385,  3720,  3720, 17385,  2941,
    2942, 17385, 17385, 17385, 17385, 17385, 29525,  2947,  2949,  2955,
   23097,  2367,  3661,  3661,  3661,   -15,  1933,  1346,   284,   248,
    3271, 17385, 17385, -4398, -4398, 67614, -4398, -4398, -4398, 17385,
   -4398, 17385, 17385, -4398, -4398, -4398, -4398, -4398, -4398,  1602,
   -4398, -4398, -4398, 19017, 23097, 23097,  2963, 23097, 23097, -4398,
   -4398, 23097, 23097, 23097,  3504,  3112, 23097, 23097, 23913, 24729,
   23097, 23097, 23097, 23097,  1808,  3661, 63649, 23097, -4398, -4398,
    1981,  1981, 17385, 45385, 73958, 73958, 73958,  3409, 73958, 73958,
   63649,  3075,  1281, 73958, 73958, 58098, 73958, 81095, 73958,  1191,
    3173,  4633, 35076, -4398, -4398, -4398, -4398, -4398,  3235, -4398,
   -4398, -4398, -4398, -4398, 73958, -4398, -4398, 58098, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, 63649, -4398,  1397, 58098, 50961,
     216, -4398, 74751, 73958, -4398,    22, -4398,  3261,  3285, -4398,
     -88,  2822,  3749, -4398, -4398,  3610,  3776, 73958, 73958,   -89,
   -4398,  3522, -4398, -4398,  2995,  3234, 73958, 73958, -4398, 73958,
   68407, -4398, -4398, -4398, -4398,  3002, -4398, -4398,  1981,  4597,
   -4398, -4398,  2556,  3447,   141,  3339,   194,    98, -4398, -4398,
   79509, 73958, -4398, -4398, -4398, -4398,  3760, 17385, -4398, 58098,
    3101,  3264,  3565,  1371, -4398,  3024,  3027, -4398,  3188, -4398,
   -4398,  3032, -4398,  3034, 73958,  1395,  1125, -4398, -4398, -4398,
   -4398, -4398, 73958,  3035,  1540, -4398,  2726,  1125, 33490, -4398,
   11673,  3599,  1981, 17385, -4398, -4398,  3046,  2174, 73958, 73958,
   73958, 73958, 73958, 58098, 73958, -4398, -4398,  1402, -4398, 55719,
   -4398, -4398, -4398, -4398,  1005, 73958, -4398, 73958,  1005, 58098,
   -4398,   361, 73958,  1005, -4398,  3602,  3299, -4398, -4398, -4398,
    3679, -4398, -4398,  3670,  3045, -4398,  3599, -4398,   361, -4398,
   -4398,  3683, -4398, -4398, -4398,   361, -4398, -4398, -4398,   361,
     361,   361,  1005,  1005, -4398,  1389,  3785, -4398,  3063, -4398,
   -4398, -4398, -4398,  3065, -4398,  3683, -4398, -4398,  3066, -4398,
   19833,   904,  2819, 73958, 73958,  3857, -4398, -4398,  3068, -4398,
    3502,  3327, -4398,  3243, -4398, -4398,  1056, -4398, 73958, 17385,
    2109, -4398, -4398, 58098,  3758, -4398, -4398,  2280, -4398, -4398,
    3740, -4398, -4398,  3086,  3174,  3852,  3115, -4398,  3453,  3453,
    1923, 63649,  3537,  3262,  3186,  3537,   323,  3537, -4398, -4398,
      -3,    62, -4398,  3192,   942,  3192,  1083, 58098,  3281,    22,
      22,    22,  1067, -4398, -4398,  2540,  3351,  3351, 63649,  3110,
   -4398, -4398, -4398,  3421, -4398, -4398,  1933, 17385, -4398, -4398,
    1756,  1756,  1756, -4398,  3287, -4398, -4398, -4398, 69200,  1781,
    3149,  3553, -4398, 63649,  3843, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398,  1291, -4398, -4398,
   73958, 73958,  1685, -4398,  3617,  3938, -4398,  3137,  3839,  1125,
    1125,  3839,  1125,  1125, -4398,  3369, -4398,  1125,   128, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  3794,  4083,
    1125,  2917,  3555,  1125,  1125,  3880,  1125,  3559,  3564,  1125,
    1125,  1125,  1125,  3374,  3829, -4398,  1125,  3706,  1606,  3917,
    3707,  1125,  3569, -4398,  1768,  3834,  1125,  1125,  1125,  1125,
    1125,  3880,  3574,  3928,  1125,  1125,  3577,   368,  3582,  3588,
    1125,  3403,  1125,  1125,  1125,  1616,  1125,  1125,  3589,  1125,
    3372,  3376,  1125, -4398, -4398,  1125,  1125, -4398,  4244, -4398,
   -4398, -4398,  2566, -4398, -4398,  2050, -4398, -4398,  3183,  3185,
   -4398, -4398, -4398, -4398,  3505,  3293, -4398,  3517,  3388, -4398,
    3189,   139, 69993, 73958, -4398, -4398,  3198,  3207,  1572, -4398,
    2822,  3208,  3203, -4398,  3141, 90330, -4398, -4398, 73958, -4398,
   -4398, -4398, -4398,  3417, -4398, -4398, -4398, -4398,  2813, -4398,
    3966,  3580, -4398, -4398,  3865, -4398,  3660,  4041,  3334,  3946,
    3681,  2174,  3839,  3450,  4057,   468, -4398,   151,  3034,  3474,
    1651, 73958,  3866,  2174,  2174,  2174,  2174, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  2174, -4398, -4398, -4398, -4398, -4398,
   -4398,  3189,   328,   878, -4398,  3720,  3258, 17385,  3260,  3270,
    3272, 17385,   455,  1316,   997,  1497,  1926,  1309,   270, 17385,
    3274, 13305, -4398,  3277, -4398, -4398,   365,   392,  1445,  1500,
    3282, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398,  3896, -4398,   408,  3288, -4398, -4398, -4398, -4398,  3286,
   -4398, 17385,  1504,   430,   474,   304,  3311,   476,  1934,  1949,
    3292, 73958, 73958,  3720,  3305,  1513,  1520,  3720,  3307,   506,
    1526,  1973,  1974,  1980,   517,  2001,  2571,  1530,   614,   616,
    1546,   624,   663, -4398,  1639,  3308,  3309,   701,   288,  3720,
    3314,   306,  3302,  3312,  1682, 14121, 14937, 15753,   282,   768,
   -4398,  3315, -4398,  2931,  3317,  3321,   350,   298,  1730,  3319,
    3324,  2070,  3451,  3451,  1734,   969,  1745,   969,  1112, 63649,
    3325, -4398, -4398, -4398, -4398,  3451,  3451,  3451,   219,  3720,
    3329,  1933, -4398, 17385,  3326,  3331,  3332, 63649, 17385,   261,
   -4398, -4398, -4398,  2670,   357, -4398, -4398, -4398, -4398, -4398,
    1189, -4398,  3333, -4398,   991,  2299,  3338, 10041, -4398,  1699,
    3338,  4070,  2363,  2363, 23097, -4398,  3348,  3133,  1892, 18201,
     545, 18201,   545,  3338,  3338,  3338, -4398, 23097,  3349, 23097,
   23097, -4398,  3661, -4398, -4398, 52547,  3344,  3352, -4398, -4398,
    1463, -4398, -4398,  3347, 73958,  1281, -4398, -4398,  1191, -4398,
   -4398, -4398,   297, -4398, -4398,   244, -4398,  3353,   158,  3034,
    3969, 73958,  3335, -4398,  3878,  3886,  3888,  3889, -4398, -4398,
   -4398, -4398,  3890, -4398,  3891, -4398, -4398,  3366, -4398, 73958,
   28732, 63649, -4398,  3367, -4398,  4007, -4398,  3808, -4398, -4398,
    2084,  3606, -4398, -4398, -4398, -4398, 46183,  1378, -4398, -4398,
   73958, -4398,   125,   210,  2140,  3557, -4398,  3066, 73958,    22,
     485,    22, -4398, 73958, -4398,  3912, -4398,   337,  3380, -4398,
    3381, 63649, -4398, -4398,   295, 58098, 58098,  3383, -4398,  3616,
     117,  3801,  3385, -4398,  3386,  3625,  4195,  4195,   935, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398,  3393,  4050,  3396, 58098, 58098,  1397, -4398, 73958,
   -4398, 26343,  3557, -4398,  4018,  3634,  3635,   721, -4398, 60477,
   -4398,  2822,   240,  3453, -4398,  3453,  2380, -4398, -4398,  3963,
   -4398,  3787, -4398, 81095, -4398, 63649, 81095,  4027,  3407,  3408,
    3411,  3412,  3413, 77130, 17385, -4398, -4398, -4398, 11673,  3410,
   -4398, 77130, -4398, -4398, 23097,  2137, -4398,  2443, -4398,  2822,
   -4398,    22,  4026, -4398,  2822,  3420, 73958, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398,   329, -4398, -4398, -4398, -4398, -4398, -4398,  3620,  1005,
   -4398, -4398, -4398, -4398, -4398,  3809,  3287,  3697,  4026,  1005,
    4179, -4398,  1005, 73958, 73958,  1005, -4398, -4398, -4398, -4398,
    3728,   840,  3636,    81, -4398,  2137,  2822,  3434,  3432, -4398,
   -4398, -4398,  2108, -4398,   991,   398,  3845, -4398,  4056, -4398,
   -4398, -4398, -4398, -4398,  1747,  1800, -4398,   167,   195,  3850,
     353,  3436,  1125, -4398, -4398, -4398,  3854,  1201, -4398,  3264,
    3192,  3192,  3475,  3476, -4398, -4398,  4030, 80302,  3870,  4125,
   63649,  4030,  3264,  4174, -4398,  3264, -4398, -4398,  3264, -4398,
   -4398,  3709,  3714, -4398, -4398,  3716, -4398, -4398,   519,  1816,
   -4398,  2724,   340, -4398, -4398, -4398, -4398, -4398, 73958,  3622,
   -4398,  1944, -4398, -4398, -4398, -4398,  2669, -4398, 34283,  3937,
    2925,  3472, -4398,  3497,  3497, -4398, -4398, 73958,   111, -4398,
    3478, -4398, 27141, -4398,  2159,  3913,   162, -4398, -4398, -4398,
   -4398, -4398,  2901,  3239, -4398, -4398,  4236,  3821,  4036,  3703,
    3239,  1601,    22,   333, -4398,  3668,    22,   333,  3668,  3668,
   73958,    22, -4398,   814,  1125, -4398, 73958,  1572,   255,  1572,
   -4398,   646, 73958, 43006, 70786, 73958, 73958, 73958, 73958,   255,
    1485,  1485, 73958,  2971, 71579,   255,    22,    22,    22,    22,
    2669,  1125,  2971, -4398, 71579, -4398, 73958, 73958,  4038, 73958,
    4040, 73958, 73958, -4398, 63649, 73958, 71579, -4398,  1125,   320,
    1485, 72372,  1485,  1485, 73958,   255, 73958,  2142,    22,   255,
   -4398, 73958, -4398, -4398, 73958, 73958,   255,   255,  2694, -4398,
    2142,  2142,  2412, -4398, -4398, 73958,  2971, 71579,  3493, -4398,
   -4398, 61270,    22,    22, -4398,  1125,  1125,  3906, -4398, -4398,
    8438,  8150,  2234,  1125,  3604,  3932,   427, 73958, -4398,  3639,
    3640, -4398, -4398, -4398, -4398, -4398,  1572, 71579, 73165,  4071,
   -4398, 17385,  4159,  4164,  4165,  4166,  4169,  4170,  4172,   110,
   -4398,  4173, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  4175,  4177, -4398, -4398,  4183, -4398,
   -4398,  4184, -4398,  4185,  4187,  4188,  4189, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  4191,   154,  4193,  4194,  4197,  4199,
    4200,  4203,  4204,  4206,  4207,  4211,  4215,  4216,  4218,  4219,
    4223,  4224,  4225,  4226,  4227,  4237,  4240,  4243,  4252,  4256,
    4257, -4398,  4258,  4259, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398,   185, 73958,  3703,  3688,  3780, 73958,  3222, -4398,  4136,
    3151,  3839,  4030, -4398,  4405, -4398, -4398,  3637, -4398, -4398,
   -4398,  3772, 58098,  3973,  1125,  1258,  1258,  4064, -4398,  3958,
    2174, 73958, 73958, 73958, 73958, 73958, -4398, 20649, -4398,  3615,
    3451,  2822,  3451,  3451,  3451,  2425, 17385, 17385,  4288,  6344,
     149, -4398, 62063, -4398, -4398, -4398, 62063,  6344,  2121,  3451,
    3633, -4398,  4202,  4209, -4398, -4398, -4398, 17385, 17385, -4398,
   17385,   383, -4398, 17385, 17385, 17385, 17385, 17385, -4398, -4398,
   23097, -4398,  3641,  3643,  3451, -4398, -4398,  3644,  3451, 17385,
   -4398, -4398, -4398, -4398, 17385, -4398, 17385, -4398, 17385, 17385,
   -4398, 17385, 17385, -4398,  3451,  3451, 21465, 17385, 17385,  3645,
    3451, -4398, 17385, 17385, 17385, -4398, 17385,  2690, 17385,  2735,
   17385,  2961, 17385, -4398, 17385, -4398,  3451,  3451, -4398, 17385,
     542, -4398,  2971, -4398,  3720,  3451, -4398, 43799, -4398, -4398,
     182, 29525,  3648,   182,  3650, 23097, -4398,  3451, -4398, -4398,
   -4398,  1455,  3652,  3451,  2129, -4398, -4398, -4398,  3651, -4398,
    2822, -4398, -4398, -4398, -4398, -4398, -4398, 23097,   360, 23097,
    4070, 23097,  4846,  4846,  2560, 10041, -4398,  1729,  4070, -4398,
   -4398, 17385, 17385, 46981, 73958,   453, -4398,  3222,   102, -4398,
     246, -4398, -4398, 58098, -4398, -4398, -4398, -4398, -4398,   158,
   63649,  3653, -4398, -4398, -4398, -4398, -4398,  3683, -4398,  4303,
    3381, -4398,  3881,  3901,  3903, 31904, -4398, 36662, -4398, -4398,
   -4398, -4398, 36662,   136,  1397, -4398, 73958, 58098,  3658,  3659,
    3663,  3869,  3813, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398,  3557,  3671,  3287, -4398,  3801, -4398,
   -4398, -4398, 77130, -4398,  3665, -4398,  3669, -4398,  2060, -4398,
     169,   176, 73958, -4398, 17385,    22, -4398,  3902, -4398, 73958,
   73958, -4398, -4398, -4398, -4398,  1071, -4398,  3678,  2682, -4398,
   73958, 73958,  3222, -4398, -4398,  3683,  3683, -4398,  4597, 28732,
    4280,  4114,  4295,    96, 46183, -4398, -4398,  3682,   991, 25545,
    3765, -4398,  3696,  3791, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398,  3801,  3113,  4302,  3557, 81095, 81095, 81095, -4398,
   -4398, -4398,  3783,  3264,  3192,  3192,   313,  4085, -4398, -4398,
   -4398, -4398,  3034, -4398, -4398,  2159, -4398, -4398, -4398, -4398,
   -4398,  1125,  2822, -4398, 33490, -4398, -4398,  1485,  3287,   516,
   -4398, 55719, 55719, 58098, -4398,  4146, -4398, -4398,  3287, -4398,
      22, -4398,   361,   361, -4398, -4398, -4398,  2247,  3911, -4398,
   -4398, 19833, -4398, 73958, -4398,  3710, -4398,  4196, 73958,  4372,
    3718, 23097,  3719, 23097,  2159,  3978,  3722,  4522,  2971,  3351,
   -4398,  4132, -4398, -4398, -4398, -4398,  4037, -4398,  4529, -4398,
   -4398, -4398,  3034, -4398,  3537,  1227,  4198,  3192,  4135,  3192,
    3192, -4398, -4398, -4398, -4398,   299,  2971,  2971,  2971,  2971,
    2724, -4398,   193,   885,  1586,  2159,   196,   340, -4398,  3723,
   -4398, -4398, 62063,  4467, -4398, -4398, -4398, -4398, -4398, -4398,
   17385,   -93,   873,  1313, 27141, 73958, 47779, -4398,   714, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  1125, -4398,
    1125,    22,  4011,  4012,  4013,  4016,  4017,  4051, -4398, -4398,
   73958,  4178, -4398,    22,  1345,    22,    22,    22,    22,  2971,
      22,    22,  2218, -4398, -4398, -4398,   318, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, 63649, -4398, -4398, -4398, 73958,   855, 73958,
    3739,  4289,  4291,  1572,    77, 73958,  3745,  3943,  3967, 54133,
    9303, -4398, -4398, -4398,  4201,  4201,  2112,  1042, 71579, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, 73958, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398,  2813,  3743, -4398,  2159, -4398,
   -4398, -4398, -4398, 56512,    22, -4398,  3999, -4398, -4398, 73958,
    3743, -4398, -4398,   765, -4398,  3925,  4005,    22, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  9303, 71579,
    3753, -4398,   507, -4398, -4398, -4398, -4398, 71579,  3990,  3994,
   -4398, 73958, 71579, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, 73958, -4398, -4398,
   -4398, -4398, 60477, 62063, -4398,  4163,  4399,  4244, -4398, -4398,
   -4398,  3183, -4398, -4398, -4398,   244,  4213,  1125,  2281,   322,
   -4398,  4128, -4398, -4398,  2834,  4210,  4220,  3767, -4398,  3769,
   -4398,  3770, -4398, 69993,  2822,  3777,  3777,  3784,  3784,  3789,
    3789,  3792,  3141, -4398,  3793,    22,  2971,    22, 62856,  2971,
    1594,  2159,   920,  2159, 90330, -4398,  2971,    22,    22,    22,
      22,  2971,  2971,  2971,  2971,  2971,    22,    22,    22,    22,
      22,    22,  2971,    22,  1386,    22,    22,  2971,  2599,    22,
    2971,    22,  1485, -4398,   218, -4398,  3795,  3190,  3222, 63649,
    3796, -4398,  4384,  1125,  1125,  1125,  1125, -4398,   347, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398,   244,  4592, -4398,  3828, -4398, 81095, -4398,  3281,   -64,
   -4398, -4398, -4398, -4398, -4398, 73958,  2179, -4398, 73958, -4398,
   40627, -4398, -4398, -4398, -4398,  2128,  1805, -4398, -4398,   223,
   73958, -4398,  3807,   901, -4398,  2430, 18201,  1821,  3451, -4398,
   -4398, -4398, -4398, -4398, 17385,  2822,  2656, -4398,  3818,  3818,
    3824, -4398,  3825,  4217,  3818, -4398, -4398, -4398, -4398, -4398,
   -4398,  4570, -4398, -4398, -4398, -4398,  4390,  3824,  4392, -4398,
    3818, -4398,  3920,  4620,  3892,  3830,  3832,  3833,  3451, -4398,
    3451, 17385, 17385,  1864,   379,  1869,  4598,  4154,  1222,  1251,
     421, -4398,  1902,  3998,  3451, -4398,  3451, -4398,  1912,  1922,
    1931,  1951,  1275,  1957,  2239, -4398, -4398, 18201,  1963,   294,
     426,  3451, -4398,  1979,  1372,  1376,  1983, 17385,  2011, 17385,
    2016, 17385,  2022,  2040, -4398, -4398,  2080,  3841,  3841,  3838,
    3846, -4398, 73958, -4398, -4398, -4398, -4398,  3968,  3972,  3451,
    3849,   182,  3451,   182,   171, -4398,  4079,   688,  3451, -4398,
   -4398, 73958, -4398, -4398, 17385,  1286,   172, -4398, -4398, 23097,
     442, 23097, -4398,  3855, -4398, -4398, -4398, -4398,  4381,  4658,
   -4398, -4398,  4129, -4398, -4398, -4398,  3335, -4398, -4398,   608,
   -4398,  4514,  3861, -4398, -4398, -4398, -4398, -4398, 46183, -4398,
    1385,  3873, 48577, 58098,  4296,  3287, 19833, -4398,  3019,  1125,
     485, 73958,  1572,  4448, -4398, -4398,  3351,  4042,  4409, -4398,
   -4398, -4398,  2822, -4398, 58098, -4398, -4398, -4398, 73958, 73958,
     904, -4398, 38248, -4398, -4398, -4398, -4398,  3885, -4398, -4398,
   -4398, -4398, -4398,  4537, -4398,  4314,  1397, 58098,  4095, -4398,
    4503, 17385,  3113,  3893,  3898,  3899,  3905,  3910,  3918, 27141,
   27141,  4443,  4444, -4398,  4315,  1688,  4315, -4398, 41420, 27141,
   27141,  2632,  2834,  4656,  4491,  4302,  3034,  3034,  3034,  3453,
    3453, -4398, -4398, -4398, -4398, -4398, -4398,   354, -4398, 11673,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398,  3353, -4398,  3683,
   -4398,  3557,  1005,  4553, -4398,  4554, -4398,  3908,  4555,  4331,
   -4398, -4398,  2971, -4398, -4398, 73958,  3273, 73958,  3587, -4398,
    4687,  3926, 23097,  4578,  3929,  4511, -4398, -4398,  3949,  3537,
   -4398,   254,  1382,  3537, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398,  1820,  4639,  3518,  4498,
   -4398, -4398, -4398,  1981,  1981, -4398, -4398, -4398,  1419,  4466,
   -4398, 27141,  3801, 47779,   621, -4398, -4398,  3930, 73958,  2142,
      22, -4398, -4398, -4398,  4635, -4398,  4637,  1736,  4386,  4587,
   -4398, -4398,   396, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398,  1601, -4398,  3947,  2159,  4359,
    3950, 17385, 73958, -4398, -4398, -4398,  4033, -4398, -4398,  3952,
   44592,  1258,  1258,  2242, -4398, -4398, -4398,  9303, -4398,  3818,
    3818,  3818, -4398, -4398,   440,  3824, -4398, -4398,  3953, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398,  2077,  3371, -4398,
   -4398,  2077, -4398, -4398, -4398,   325,  1962, -4398, -4398, -4398,
   -4398, -4398,  3954, -4398,  3818,  3824,  3824, -4398, -4398,  2077,
    3818, -4398,  3818,  4328,  3457, -4398,   227,  3818,  3818,  3818,
    3960,  3825, -4398, -4398, -4398, -4398, -4398,  4648,   524, -4398,
    9303, -4398, 73958, -4398,  3760,  3760, -4398, -4398, -4398, -4398,
    4212, -4398, -4398,   490, -4398, 73958, -4398, -4398, 73958, 73958,
      51,  1071,  3974, -4398, -4398, -4398,  3984,    16, -4398,   432,
   -4398, -4398,  3969,  2151,   483,  4214,  2321, -4398, 73958, 73958,
   -4398, -4398, 73165, -4398, 39041, -4398, -4398, 39834, -4398, -4398,
     -52, -4398, -4398,  2157, -4398, -4398,  2971, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, 44592,  1125,  1125, -4398,
     416, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
    4406, 44592,  1741, 73958,    22,  3668,  3668,  2159,  3172, -4398,
    4030,  4547,  3034,   340, -4398, -4398,  3293,  3981, -4398, -4398,
   73958,  2249, -4398, -4398,  7173, -4398,  4321,  4417, -4398,  1532,
    3986, -4398, -4398,   467,  4846, -4398, -4398,  2822, 17385,  1198,
   -4398, -4398,  2077,  4426, -4398,  1344, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  3996,
    6344,  4564, -4398, -4398, -4398, -4398, -4398,  4846,  4846, -4398,
   -4398, 17385, -4398, 17385,   398,  4006, 17385, 17385, -4398, 17385,
   -4398,  1466,  4008,  4186, -4398, -4398, -4398, -4398, -4398, -4398,
   17385, -4398, -4398,  4846, -4398, 17385, -4398, -4398, 17385, -4398,
   -4398, 17385, 17385, -4398,  2086, -4398,  2147, -4398,  2219, -4398,
   -4398, -4398,  2159,  4014,  4019,  2971,  3451, -4398,  4020,  4419,
   -4398, -4398, -4398, 17385, -4398,  3451, -4398,  3451,  4626,  6344,
    1723, -4398, -4398,  2272, -4398, -4398, -4398, 17385,  1286, -4398,
   -4398, -4398, -4398, -4398, -4398,  4393, -4398,  4032, 36662,  4242,
    4618, -4398, -4398, -4398, -4398,  1388, -4398, -4398,  2282, 73958,
    4808,  4456, 16569, -4398, -4398,  1572,  4448,  4567, -4398,  2433,
   -4398, -4398, -4398,  4025,  3743,  4023, -4398,  1125,  3193,  2297,
   -4398, -4398, 19833,  4024, -4398, 28732,  4644, 46183,    96,  4231,
   58098,  1380,  2834, 27141, -4398, -4398, -4398, -4398, -4398,  3791,
    4022,  4028,  4029,  3791, -4398, -4398, -4398,  4589, -4398,  4315,
    4315,  4590,  4593, -4398,  3062,  3485,  1449, -4398, 17385, 17385,
    4155,  4491,  3192,  3192,  2159, -4398, -4398, -4398, -4398,    22,
      22,  2196,    22,  4694,  4730, -4398,  2326, -4398, -4398,  2334,
   -4398,  4580,  4359, -4398,  3603,  2159, 73958,  4810,  4838,  4030,
   -4398, -4398, -4398,  4458, -4398,  4030, -4398,  2159, -4398,   189,
   -4398, -4398,  3638, -4398, -4398,  4818,  4819,  4715,  4821,  1419,
   -4398,    29, -4398,   621,  3557,  1328, -4398,  4065, -4398,  1020,
   -4398, -4398, -4398, -4398, -4398, -4398,  4402, -4398,  1064, -4398,
   44592, -4398, 73958,  2384, -4398, 44592,  2258,  4072, -4398, 44592,
   17385, -4398,  2407, -4398,   211, -4398, -4398, -4398, 54133,  4328,
   -4398, -4398, -4398,  4847,   551, -4398,  4849, -4398,  2077, 62063,
   -4398, -4398, -4398, -4398,   398, -4398,  1773, -4398,  2077, -4398,
   -4398,  4262, -4398, -4398, -4398,   398,  2077, -4398, -4398, -4398,
   -4398,  1913, 73958,   490, -4398, -4398, 60477,  2402,    22,  3667,
    4161, -4398,  4283, -4398,  4767,  1662,  4630,  3222,  1125,  1125,
    4830, -4398, -4398,  5889, -4398,  4693,  4634, -4398,   990, -4398,
    4864, -4398,  2077,  4864,  1913,  4530, -4398,  1913,  1913, -4398,
    3100, -4398,   490, -4398, -4398, -4398, 73958, 73958, -4398, -4398,
   -4398, -4398, -4398,  4092, -4398, -4398,  4533,  4213, -4398,  4534,
   -4398, -4398,  4492, -4398, 17385, 17385,  4532, 73958,  4535, -4398,
    4833,  4890,  3743,  1849, -4398, -4398,  2409, -4398, -4398, -4398,
    2428, -4398, -4398,  4096, -4398,  2436, -4398, -4398, -4398, 73958,
   -4398,  2510,  2524, -4398, -4398,  2529,  3668,  3668,  3246,  1741,
    4103,  2541,    22,    22,    22,    22, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398,   358, -4398, -4398, -4398,   196,  3604, 44592,
    4105,  5677, -4398,  1532,  4428, 73958, -4398, -4398, -4398, -4398,
    4410, -4398, -4398, -4398, -4398,  4542,  -223,  2822,  4115,  4116,
    4117,  4119, -4398,  4120,  2542, -4398,  3920, -4398,  1981,  4121,
    4122,  2265,  4110, -4398, -4398,  3451,  2275,  1435,  2569,  4594,
    4671, -4398,  4510, -4398,  2284,  -221,  2337,  2369,  2419,  2465,
   -4398, -4398, -4398, -4398, -4398, -4398,  4123, -4398, -4398,  4892,
    4551,  2822, -4398, -4398,   355,   182, -4398,  3102, -4398, -4398,
    4130,  1723, -4398,  4566, -4398,  2575,  4766,  4659, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, 58098,  4561,  4736,  4928,  3557,   205, 73958,
    4456,  4803, -4398, -4398,  2822, -4398, -4398, -4398,  4579,  4705,
    4583, -4398, 73958, 19833, -4398, -4398,  3193, 73958,  4145,  3885,
   -4398, 58098,  4762, -4398, -4398,    96,  1455, -4398,  2371, -4398,
   -4398,  4702,  4703, -4398, -4398, 17385,  4156, 17385,  4158, -4398,
   -4398,  1572,  1572, -4398,  1449, -4398, -4398,  2822,  1179, -4398,
    2822, 73958, -4398,  4155, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398,    22,  4811,  4565, -4398, 73958, -4398,  1082,  2595, -4398,
   -4398,  4162,  4171,    22,   254, -4398, -4398, -4398,  4855, -4398,
   -4398, -4398,  4857,   398,   398,  4930,   398, -4398,  4932,  4940,
      29, -4398, -4398,  4602,  4602,  4613, -4398,  2624,  4375, -4398,
    4359,  2635, -4398, 73958,  2638,  2471,  1408, 44592,  4619, -4398,
   -4398, -4398, -4398, -4398, -4398, 62063, -4398, -4398,  4864,  2664,
   -4398, -4398, -4398,  2675, -4398, -4398, -4398, -4398, -4398,  1913,
   -4398,  4190, -4398,  1969, -4398, -4398, -4398, -4398, -4398,  3881,
    3901,  3903,  2599,  2599, 17385, -4398, -4398, -4398, -4398, -4398,
   -4398,  4628,  4376, -4398, -4398, -4398, -4398, -4398, -4398,    22,
      22, -4398, 60477, -4398,  4983,  4978, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398,  4192, -4398, -4398, 17385, -4398, -4398,  2144,
   -4398,  4359, -4398, -4398, -4398, -4398,  2822,  4846,  4919, -4398,
   -4398,  4493,    22,  4859,  2179,  4893,  4640, -4398, -4398, 73958,
   -4398, 73958, 73958, -4398,    22,  4205, -4398,  4208, -4398,  2971,
     200, -4398, -4398, -4398,  1601,   305, -4398, -4398, -4398,  4779,
   63649, -4398,  2281,  2683, -4398, -4398,  4494,   483,  4221,  4222,
   -4398,  9303,    22,   183, 73958, -4398, -4398, -4398, -4398, -4398,
   -4398,  4642,  4229,  4990, -4398, -4398, -4398, 17385, -4398, -4398,
   17385, -4398, -4398,  4675,  4845, -4398, -4398, -4398, -4398, -4398,
   -4398,  4230,  2971, 17385,  4972,  1327, -4398, -4398,  3451, -4398,
   -4398, -4398,  4650,   256, -4398, -4398, -4398,  1388, -4398,  4645,
   58098, -4398,  3287,  4456,  2834, -4398,  4765, -4398,  4614,   252,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,    96, 58098,
   -4398,   290, -4398, -4398, -4398,  2822, 73958,  2822, 73958,  4836,
    4836, -4398, -4398, 17385, -4398,  5011,  4228, -4398, -4398, -4398,
      22,  4874, -4398, -4398,  4232,  4522, -4398, -4398,  1157, -4398,
   -4398, -4398, -4398, -4398,   398, -4398,   398,   398, -4398,  4769,
    4769,  4884,   200,  2104,  3454, -4398,   305,  2697, -4398,  1408,
     507,    22,  1125,  1125,  1125, -4398,  1408, -4398, -4398, -4398,
   -4398, -4398,  4235, -4398, -4398,  2077,   398,  2077, -4398, 73958,
    4732, -4398, -4398,  2473, -4398, -4398, -4398, -4398, -4398, -4398,
    4241,  2494, -4398, -4398,  2714, -4398, -4398, -4398, -4398, -4398,
    4412, -4398,  1981,  4382, -4398, -4398, -4398, -4398, 73958, 73958,
   -4398,  4657,   453,   200, -4398, -4398,  2721,   453,   305, -4398,
   -4398,  5008,  5037, -4398,  1408,    22,  4532, -4398, 73958,  3760,
   -4398, -4398, -4398, -4398,  4247,  4245, -4398, 73958,  4866,  4251,
   -4398,  4952, -4398,  2606, -4398, -4398, -4398,  4253,  4250, 17385,
   -4398, -4398, -4398, -4398,  3107, -4398,  4905, -4398, -4398,  4928,
   -4398,  4432, -4398, -4398, -4398,  4465,  4813,  4828, -4398, -4398,
      96,  4266,  4267,  4268,  4269,  2136,  4271,  4272, -4398,  4273,
   73958, -4398,    22,  3683, 23097,  4275,  4942,   927, -4398, -4398,
   -4398, -4398, -4398, 55719, -4398, -4398, -4398, -4398,  4276,  4516,
    1125,  4954,  4955,  1125,  1125,  1125,  1125,  4281,  3454, -4398,
    4935, -4398,  4328, 73958, -4398, -4398, -4398,  2971,    22,    22,
   -4398,   507, -4398, -4398, -4398,  2732, -4398,  1469,  4717, -4398,
   17385, -4398, -4398,  4558, -4398, 88232,  1870, -4398, -4398, -4398,
    4284,  4282,  2341, -4398, -4398, -4398, -4398, -4398,  3222,   453,
   -4398,  2321, -4398,  4625, -4398, -4398, -4398,  1932,  9303,  4950,
   -4398,  3824, -4398, -4398,  3472,  2492,  4621, 17385,  4411,  4423,
   -4398, -4398,  4414,  4415, -4398,  4450, -4398, 73958,  4720,  4543,
   -4398, 75544,  3556, -4398, -4398,  5061, -4398,  5062, 73165, 73165,
   -4398, -4398, -4398, -4398,  3819, 73958,  1125,  4577, -4398, -4398,
    4301, -4398, -4398,    23,    22,  1125,  1125,  3222,  3222,  2159,
   73958,  4559, -4398, -4398,  1125, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, 73958, -4398, -4398, -4398,   509, -4398,  2631, 17385,
    4959,  4482, 73958,   310, -4398, 89818, 89818, 73958, -4398, -4398,
   -4398, -4398,  6378, -4398, -4398,  1249, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398,  5084, -4398,  4299,
   -4398, -4398, -4398, -4398,  5054,  4735,  5056, -4398, 73958, -4398,
   -4398, -4398,  4833,  9303, -4398, -4398,  3760,  4641,  4310, 17385,
    1190, -4398,  5104,  1871,  1954, -4398,  4846, -4398,   338, -4398,
   -4398, -4398, 78716,  4023, -4398, 73958,  4424,  2738, -4398,  9187,
   -4398, -4398, -4398,  4316,  2745,  4574,  2746,  3351, -4398, -4398,
    2754, -4398, 22281, -4398, -4398, -4398, -4398,    22,    22, -4398,
   -4398, -4398, -4398, 63649,  2757, -4398, 63649, -4398,  1314,  1314,
    1867,  2822, 17385, -4398, 17385,  4496, -4398, -4398,  4933, 73958,
   -4398, -4398, -4398, -4398, 17385, -4398, 88232, 88232, -4398, -4398,
   -4398, -4398,  5099,  4750, -4398,  4751,  4324,  4994,  3760,  4556,
   -4398,   286, -4398,  4846, -4398,  2492, -4398, -4398,  4447,  4660,
   -4398,  4452, -4398,  3188, -4398, -4398,  3034,  3801,  1455, -4398,
   75544,  4440,  3760, -4398, -4398,  2159, -4398,  4574,  4678, -4398,
    4301, -4398,  2762, -4398,  4070, -4398, -4398,  3454, -4398,  4559,
   -4398, -4398,  5139, -4398,   342,  4771,  4773, -4398, -4398,  5889,
    2822,  2822, -4398,   459, -4398, -4398,  4900,  4997, 17385,  2822,
   84267,  4339, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, 89025, 17385, -4398,  1249,  5084,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  5021, 88232,
   -4398, -4398, 63649, -4398,  1955, -4398, -4398, -4398, -4398, -4398,
    2669,   290, -4398, -4398,  4985, -4398, -4398, -4398, -4398, -4398,
   22281, -4398, -4398, -4398, -4398, -4398,  4550,  5027, -4398,  4526,
   17385, 88232, -4398,  5006, -4398,  4931,  2822,  4870,  4349, -4398,
    4347,  2822,  5043, 89818, 89818, -4398, -4398, -4398, -4398, -4398,
   88232, -4398,  4688, -4398, -4398,  4468, -4398,  1314,  1314, -4398,
     496, -4398,  2822, 85060,  5114, 73958, -4398,  4599, -4398, -4398,
   17385,  5028, 64442, 85853,  4358, -4398, -4398, -4398,  4556, -4398,
    4946,  4467,  1455, -4398, -4398, 17385, -4398,  5023,  4604, -4398,
    4363, -4398, 88232,  2822, 88232, -4398, -4398,  4970,  4404,   477,
   -4398,  4373, -4398, 88232,  5138,  4466,  1300,  2822,  5134, 88232,
   73958, 81888,  5035, 86646,  4996, 73958,  3760,  4998,  4999, -4398,
   -4398,   398,  4963, -4398, -4398,  1723,  4622, -4398, 82681, -4398,
    2837,  4746,  4568, -4398, -4398,  5076,  2163, -4398, -4398,  4832,
    4394, -4398,  4825, 88232, 88232, -4398, -4398, -4398, -4398, 51754,
   17385, -4398, -4398, -4398, -4398,  1780,  1110, 35869,  4706,  4509,
   83474, 87439, -4398, -4398, -4398, 27938, -4398, -4398, -4398,  5012,
   -4398,  2822, -4398, -4398, -4398, -4398, -4398, 63649,  2830, -4398,
   -4398, 73958,  5197, 51754, -4398, -4398, -4398, -4398, 37455,  4395,
   -4398,  1125,  5050, -4398, -4398, -4398, 73958, 19833,  4418, -4398,
   -4398, -4398
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4398, -4398, -4398, -4398, -4398, -4398,    24, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398,  1628, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398,  1873,  1881, -4398, -4195, -4398, -4398,  1884,
   -4398,   462,  1879, -4398,   460, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398,  1872, -4398,   456, -4398, -4398, -4398, -4398, -4398, -4398,
   -2893, -1591, -4398, -4398, -4398, -4398, -4398, -4398,  1228, -4398,
   -4398,   454,  1434,  3992, -4398,   444, -4398,   132, -4398, -4398,
   -4398, -4054,    12,  -157, -4398, -4398,    36,  3491,  -208, -3527,
   -4398, -4398, -4398, -4398, -4398, -4398,   262, -4398, -4398,   135,
   -4398, -4398, -1448, -4398, -4398, -4398, -4398, -4398, -4398,  -339,
    -291,  2175, -4398, -4398, -4398,  5200, -4398,  4153, -4398, -2779,
    2271, -4398, -4398, -4398, -4398, -4398,  2336, -2755, -4398, -4398,
   -4398,  1102, -4398, -4398, -4398,  -555,   168, -4398,   170, -4398,
     173, -4398,   186, -4398,   199,   204,   207,   209, -4398,   212,
   -4398, -4398,  -289, -4398, -4398, -4398, -4398,   215, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398,  -206, -4398, -4398,  -106, -4398,
   -4398,  -201,   222, -4398,  -178,   232, -4398,   238, -4398,  -121,
   -4398,  -109, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398,  1272,  2826,  4097,  2823, -2775, -4398,  1737, -4398,
   -4398,   887, -4398, -4398,  1039, -1527, -4398,  2636, -2566, -2539,
   -1150, -2508, -4398, -4398, -4398, -3186, -3181, -1391, -4398, -1370,
   -2506, -2504, -2382,   867,  1897,  1899,  1898,    38, -4398,  1097,
     457, -4398, -4398, -4398, -3584,     2, -4398, -3875,   680, -4398,
   -4398, -4398, -4398, -3078, -4398, -4398,   -79, -4398, -4398,     0,
      -1, -4398,   289, -4398,  2910, -4398, -4398, -2428,  -617,  2797,
   -4398, -2002, -1783, -2333, -1608, -1598, -4398, -4398, -4398,   895,
    1929,  1053, -4398,  1054, -1659,  1002, -3726, -4398, -4398,  -618,
   -2917, -4398, -4398, -4397, -4398, -2493,  1527, -4398, -4398, -2473,
   -4398, -4398, -4398,  1493,  1498, -3400,  2313, -1771, -4398,   678,
     852,  -844, -4398,    14, -4398,  1011, -4398, -4398, -3544, -4398,
     -33, -2625,   -35, -4398, -4398, -3145, -3636, -1588, -4398, -4398,
   -3606, -2434,  1838, -4398, -4398,   316, -4398, -4398, -4398, -4398,
   -3095, -4398, -1676, -2194, -4398, -4398,   478, -4398,   420,   479,
   -4398,   418, -4363, -4398,   471,  -797,  2183, -4398,  3484, -3143,
   -2512, -4398, -4226,  -165,   722, -2309,  1055, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -1595, -4398, -4398,   934,  1379, -4398,
    2287,  1982, -4398,  2295, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398,  2853, -4398,   676, -2066,  2855, -4398,  2858,
     587, -2728, -1137, -4398, -1133, -4398, -1576,  3699, -2468, -3790,
   -4398, -4398, -4398, -4398, -4398,  3729, -4398, -4398, -4398,  2980,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398,  3079, -4398, -4398,
   -4398, -4398,  4323, -4398,  3081, -4398, -4398, -4398, -4398, -4398,
    1524, -4398,  2464, -4398, -4398, -4398, -4398, -4398,  2192,  3548,
   -4398, -4398,    65, -4398, -4398, -4398, -4398,  2472, -4398, -4398,
    3579,  2097, -4398, -4398,  1822,  2486, -1801,  1269, -1181,  5372,
       7,    34,    26, -4398, -4398,  3194, -4398, -4398, -2288, -4398,
   -4398, -4398, -4398,  4413,  -690,  -953, -4398, -4398,  3020, -4398,
    4420,  4078,  3328,  -334,  4549, -4398, -1323, -4398,   -21, -4398,
   -4398,  -889, -4398, -4398, -4398,  -698,   956, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,  2576, -4398,
   -4398, -4398,  3397,  2615, -4398, -4398, -2758, -4398, -2463, -1873,
   -4398, -2576,   419, -4398, -4398, -4398, -4398, -4398, -4398,   445,
   -4398,   137, -4398, -4398, -4398, -4398, -2097, -4398, -4398, -4398,
   -4398,  -917, -2544, -1166, -1214, -4398,  4168, -4398, -4398, -4398,
   -3127, -4398, -2707, -4398, -4398, -4398, -4398, -3237, -2879, -4398,
   -2343,  2466,  2467,  2469,  2474, -4398, -4398,    40, -4398,   124,
   -4398,   -46, -4398,   -63, -4314, -4320,   591, -4398,   860, -4398,
   -4398, -4398,   327,  1545,   331, -2146, -2451, -1261,  1868, -4398,
   -4398, -2174,  4233, -2172, -2004,  1247,     5,  4360,  3842, -3206,
   -4398,   858, -4398,   446,  1797,   651, -4398, -4398,  1583, -1157,
   -4398,   480, -3163, -4398, -1061, -4398, -4398, -2937,   582, -2237,
   -2780, -2224, -2636, -2357, -4398, -4398,  3055,  -807, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398,  -541,  -215,  -148, -3959,
    5468,  3360, -4398,  2610,  4307,  4308, -4398, -4398,  4031,  1888,
    1889, -4398, -2925, -2612, -4398, -4398, -4398, -1021, -1654,   913,
    3868,  1318,  1895, -3005,   944, -4106,  4320, -4398, -3615,   933,
    4327,  4325, -3191,  3788, -4398, -4398, -4398, -4398, -4398,  3184,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398,  4517,   -41, -1393, -4398,
   -4398, -4398,  1563,  3914,  3187, -1017, -4398, -4398, -4398, -4398,
    4334, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
    2618,  2221, -4398, -4398, -4398, -4398, -4398,  3298, -4398, -4398,
   -4398,  3304, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,   670,
      41, -4398,  1254,    19, -4398,   875, -4398, -4398, -4398, -4398,
   -4398,   -62, -4398, -4398,   -68, -4398, -2788, -1180, -1317,  1003,
    1149, -3793, -2102, -2088, -3300, -1206, -4398, -4398,   954, -4398,
   -3029,   659,  -768, -1313, -1322,   242,  2398,  4010, -1515, -4398,
    4473,  -898, -1678, -2120,   900,  4176,    -6, -4398, -2776, -4398,
    -124,   120,  2187,   -73,  3276, -3704, -4398,    -2,    33, -4398,
     184,   580, -4398, -4398,   758, -4398, -4398, -4398,   214, -4398,
   -4398, -4398, -4398,  3993, -4398,  2511,  5495, -4398, -4398, -4398,
    3259,  5501,  -937, -4398,  4002,  3289, -4398,  3290, -4398, -4398,
   -4398, -2130, -4398, -4398,   221, -4398,  2596, -4398, -4398, -4398,
   -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398, -4398,
   -4398, -4398, -2071,  4045,  4539,  4094, -4398, -4398,  2450, -4398,
   -2798, -1428, -1218, -1494, -4398,  4403,  2845,  2857, -2303, -1102,
   -1098,  -980, -1126,  -974,  -951, -4398,  3872, -1583, -4398, -4398,
    2045, -4398,  2851,   728, -4398, -4398,   557, -4398, -4398,   458,
    4562,  4061, -4398, -4398, -4398, -4398, -4398,  2059, -4398,   -32,
     -39, -4398,  -404, -4398, -4398, -4398,    85,  5557,  5559, -4398,
   -4398,   228, -4398,  -830, -4398, -4398, -4398, -4398, -4398,  4335,
   -4398, -4398,  4340, -4398, -4398, -4398, -4398,  4342, -4398, -4398,
   -4398, -4398, -4398, -4398,  2405, -4398, -4398, -4398, -4398, -4398,
   -4398,  1975, -4398, -4398, -4398, -4398,   178, -4398, -4398, -4398,
     249, -4398,  1556, -4398,  1187, -4398,  1128,   806,  1677, -2488
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -3011
static const yytype_int16 yytable[] =
{
     726,  1404,  1725,  1089,  1732,   121,  1409,   114,  2032,   916,
    1043,  1086,   935,  1517,  1521,  1898,   976,  2031,  1986,  2426,
    1714,  1132,  1599,  2951,  1153,   995,   116,  1683,  1131,  2052,
    2177,  2129,  1011,  1550,  2344,  1015,  1125,  1285,  1935,  1936,
    1011,  1046,   724,  1102,  1565,  2554,  1668,  1109,  1762,  1116,
    1669,  1680,  2130,  3557,   969,  1681,  3710,  2579,  3250,  3608,
    2083,  3391,  1842,  2908,  3300,  3301,  1843,  1988,  1244,  1600,
    3004,  1137,  2909,  3876,  2381,  3552,  1047,  4055,  3980,  2001,
    2002,  2003,  1201,  3088,   936,  2005,  3187,  3188,  3096,  2386,
    1138,  1150,  2389,  2482,  2391,   994,  2466,  1129,  2468,  2469,
    1000,  3760,  1197,  2471,  3695,  3696,  1974,  3438,  3183,  3896,
    2480,  3183,  3183,  2511,  1713,  1547,  2484,  3485,  3917,  2490,
    2491,  3486,  2493,  3671,  2041,  2496,  2497,  2498,  2499,  2449,
    2878,  2534,  2502,  4239,  3400,  1232,  1233,  2514,  4360,  2450,
    2053,   968,  2519,  2520,  2521,  2522,  2523,   116,  3033,  2452,
    2527,  2528,  3591,  4279,  3138,  1177,  2538,  3903,  2540,  2541,
    2542,  3401,  2545,  2546,  3706,  2548,  2984,  3194,  2551,  2828,
    2829,  2552,  2553,  1682,  2413,  2415,  2416,  1352,  1353,  1684,
    1354,  2937,  2838,  2839,  2840,  1102,  3650,  2396,  2319,  2397,
    2399,  2400,  3402,  1405,  3409,  2488,  3410,  1217,  1219,  2492,
    3644,  3995,  1685,  3487,  3424,  2329,  3996,  3290,  3291,  2139,
    2884,  4832,  2332,  2512,  1187,  1704,   726,  4831,  2335,   726,
    1150,  1198,  1102,  4423,  2467,  2524,  4559,  1048,  4365,  4583,
     739,  4325,  4329,  3126,  4765,  4330,  1102,  2179,  2937,   762,
    3070,  3580,  1406,  1406,  3426,  3686,  3480, -2348,  4384,  4385,
     993,  3544,  2312,  4339,  3480,   999,  3233,  3082,  1189,  3083,
    1870,  1196,  4369,  3385,   975,  3245,  3481,  3225,  3072,  3451,
    3452,  3453,  3097,  3753,  3481,  3099,  2711,  4911,  3100,  1363,
    1364, -2944,  3654,  2569, -1079,  3199,  3489,  1785,  1363,  1364,
    1406,  1101,  2247,  2961,  3719,  2241,  3262,  4393,  3266,  3267,
    1363,  1364,  1363,  1364,  2330,  3293,  1363,  1364,  3134,  3295,
    1785,  3505,  1363,  1364,  4639,  3507,  1363,  1364, -1064,  2820,
    1205,  1461,  1363,  1364,  1363,  1364,  2954,  3648,  1928,  1929,
    1930,  3515,  3516,  1884,  3751,  3752,  3640,  3522,  2236,  1940,
    3183,  -727,  3127,  1785,  1166,  3112,  1363,  1364,  2330,  5263,
    1866,  3893,  4749,  3534,  3535,  1238,  3636,  1852,  2179,  1749,
    1220,  1705,  3541,  5021,  2401,  2698, -2945,  4628,  1363,  1364,
    1994,  2377, -1851,  1998,  -728,  1363,  1364,  1871,  1363,  1364,
    3559,  1872,  4911,  1363,  1364,  1099,  1323,  4331,  -740,  2530,
   -2173,  3683,  2015,  2016,  4979,  1873,  2020,  1363,  1364,  3412,
    1514, -2944, -2105,  3913,  -740,  3614,  2377,  1909,  1917,  1686,
    1363,  1364,  2190,  3547,  2034,  2035,  1214,  1750,  5007,  2039,
    2040,  3584,  4981,  1055, -2115,  4323,  1363,  1364,  1943,  4212,
    1449,  3483,  4982,  1184,  2060,  1636,  4482,  4908,  3246,  1363,
    1364,  5319,  2531,  3805,  1363,  1364,  1259,  1657,  1363,  1364,
    3256,   985,  2392, -1966,  4845,  4337,  4338,  2064,  3883,  1206,
    1363,  1364,  4912,  4313,  1012,  1770,  4217,  5424,  1110,  3617,
    1199,  1754,  1902,  4250,  -601,  4314,  1265,  5400,  3744,  2812,
    1706,  3296,   240,  3427,  1210,  2797, -2945,  2702,  4095,  4315,
    2080, -2105,  1363,  1364,  1363,  1364,  1452,  3757,  1014,  4387,
    1950,  1057,  1030,  -586,  1178,  1604,  3258,  5287,  4404,  3595,
   -2851,  3327,  2113,  2114,  1285,  2274,  1327,  2395,  2237,   240,
    3183,  3761, -2114,   733,  1363,  1364,  2278,  1620,  2532,  3126,
    2065,  1874,  4199,  4203,  1693,  1363,  1364,   236,  3104,   988,
    3905,  4826,  4214,  4215,  4558,  2962,  5064,  4014,  1095,  1576,
    5320,  1133,  -628,  4692,  3322,  2402,  4709,  2314,  1572,  1407,
    1407,  2317,  1881,  5517,  4954,  4648,  2321,  4912,  1324,  3076,
    1752,  3949,  -617,  3954,  4673,  4983,  4278,  3537,  1610,  1606,
    1607,  2766,  5518,  2766, -3010,  3539,  3259,  4709, -2348,  4795,
    1134,  4816,  4738,   240,  2445,  2336,  2337,  4472,  3784,  4649,
    2219,   970,  1867,  1854,  3538,  2736,  1608,  1407,  3618,  5431,
    1573,  5099,  1057,  1030,  1621,  3183,  3077,  1637,  3885,  1901,
    3596,  4827,  1227,  1049,  1228,   237,  4860,  2885,  1903,  1875,
   -1851,  1855,  1363,  1364,  1363,  1364,  4009,  4360,  3127,  5278,
    1694,  1882,  1363,  1364,  4015,   242,  5431,  1366,  1081,  4380,
    1367,  4405,  2058,  2436,  2293,  1753,  1366,   740,  3014,  1367,
    3015,  1904,  4632,   989,   734,  1851,  2061,  1577,  1366,  1605,
    1366,  1367,  5288,  1367,  1366,  3323,  4388,  1367,  3904,  3693,
    1366,  1363,  1364,  1367,  1366,  1462,  1385,  1367,  3260,  2089,
    1366,  1096,  1366,  1367,  2940,  1367,  1676,  1207,  5401,  1582,
    2244,  3653,  1754,  1480,  1704,  3041,  5321,  3429,  4473,  2112,
    3200,  5226,  4677,  5425,  1366,    42,  1266,  1367,  3079,  1363,
    1364,  4367,  4681,  3135,  2393,  2748,  2201,  3484,  2191,  2963,
    4684,  1756,  1102,  1102,  2129,  4381,  1366,  5013,  1798,  1367,
    1150,  1515,  1230,  3113,  2882,  2066,  1366,  2570,  1215,  1367,
    1132,  1366,  3999,  1704,  1367,  2130,  1360,  1269,  1410, -2944,
    4424,  1687,  3605,  5090,  5091,  1366,  4730,  2761,  1367, -1851,
    3496,  1414,  1415,  1416,   937, -3010,  1419,  1420,  1366,   972,
    1423,  1367,  1425,  1426,  1427,  3889,  1363,  1364,    49,  2393,
    1081,   986,  -740,  4125,  1366,  4127,  1330,  1367,  3745,  1286,
    4149,  3196,  4144,  3196,  4398,  4705,  -811,  1366,  2983,  3914,
    1367,  1662,  1366,  3691,  4018,  1367,  1366,  2884,  3619,  1367,
    3193,  3992,  3012,  3438,  3438,   240,  5308,  3438,  1366,  3672,
    3900,  1367,  2472,  3675,  5259,  1921,  4961,  5166,  2449,  3201,
    1749,  3725,    54,  3598, -2945,  1239,  3764,  3244,  2450,  2844,
    1705,  2405,  5332,  1464,  1096,  3874,  3875,  1490,  2452,    55,
    1366,  1408,  1366,  1367,  3257,  1367,  4944,  3882,  1944,  3739,
    3740,  3741,  3742,  1450,  1150,  3548,  1361,  2955,  3582,  1081,
    1905,  1374,  2908,  4274,  2746,  2138,  3084,  3085,  3797,  1388,
    3800,  2909,  1366,  3680,  2179,  1367,  1363,  1364,  1750,  5019,
    4309,  3302,  3303,  1366, -2348,  1357,  1367,  3684,  1369,  3316,
    1518,  4640,  2883, -2115,  1362,  2707,  1417,  1369,  1536,  1541,
    1325,  1422,  5102,  1505,  1853,  1485,  3342,  3135,  1097,  1369,
    2937,  1369,  3791,  1868,  1084,  1369,  3437,  2200,  1568, -2944,
    2296,  1369, -1079,  3754,  2472,  1369,  2210,  4332,  4913,  4914,
    2533,  1369,  4201,  1369,  5008,  1868,  3985,  1459,  3762,  2390,
    3874,  3875,  1756,  4382,  3555,  3615,  4117,  2712,  4261,  1408,
    3354,  1150,  4591,  4592,  1868,  1369, -1064,  1468,  3071, -1851,
    1218,  1218,  1179,  4128,  4134,  4036,  4587,  1363,  1364,  1240,
    1868,  1483,  1150,  1847,  4780,  -406,  3636,  1369,  3343,  -727,
    1366,  2937,  1366,  1367,  1369,  1367,  3073,  1369,  2729,  3804,
    1366, -2114,  1369,  1367,  1453,  1363,  1364,  1868,  4291,   916,
    2568,  4572,  4668,  5306, -2945,  4065,  1369,  4066,  1150, -1851,
   -1851,  3183,  -728,  5322,  1130,  2841,  1150,  1150,  4039,  1369,
    4316,  4084,  1702,  4085,  4493,  3022,   969,  1906, -2173,  1366,
    1046,  1752,  1367,  4913,  4914,  1369,  1150,  4423,  4099,  3746,
    3419,  5130,  2472,  3202,  3355,  4317,  4588,  1611,  1369,  1744,
    1463, -3010,   969,  1369,   990,  4474,  2773,  1369,  3114,  3115,
    2777,  1757,  2851,  2449,  4278,  1047,  2747,  1366,  2737,  1369,
    1367,  2726,  5362,  2450,  2813,  4131,  2062,  1084,  1102,  1627,
    2063,  5516,  2799,  2452,  2798,  1229,  4096,  1116,  1704,  3938,
    2821, -1966,  3943,  2472,  2822,  1738,  2062,  5279,  2801,  3956,
    2765,  1369,  2802,  1369,  3961,  3962,  3963,  3964,  3965,  5459,
    1363,  1364,  -601,   968,  2472,  3972,  1753,  2941,  1661,  1578,
    3979,  4669,  2842,  3982,  2727,  3042,  3694,  3613,  2401, -1851,
    1411,  4674,  3879,  1369,  1366,  1429,  1138,  1367,  3984,  1895,
    1150,  -586,  2818,  2472,  1369,   116,  2819,  4934, -2851,  3092,
    2472,  1583,  3563,  1177,  3411,  3065,  3564,  4174,  1733,  3874,
    3875,  2752,  1150,  1754,  1740,  1741,  3877,  1150,   121,  1745,
     114,  4070,  5525,  1156,  1844,  4071,  1845,   726,  1879,  2581,
    1102,  4693,  3950,  3894,  2032,  5542,   938,  1863,  2753,   116,
    -628,  3897,  2472,  3272,  3768,  1478,  3901,  1885,  1886,  1887,
    4367,  1487,  1890,  2771,  2758,  1894,  1150,  4450,  1899,  1900,
    -617,  3013,  2472,  4078,  2885,  4399,  1048,  4079,  4097,  1846,
    1363,  1364,  4098,   983,  4145,  1457,  2763,  2961,  3731,  3203,
    1492,  4039,  3995,  4574,  4136,  1553,  3798,  3996,  4137,  1408,
   -1851,  1369,  1286,  1369,  1366,  3046,   969,  1367,  5036,  1363,
    1364,  1369,  1615, -1851,  2697,  3732,  1286,  1708,  1473,  2006,
    1552,  2141,  2111,  1683,  1628,  1514,  2721,  2722,  2723,  2724,
    2764,   978,  2767,  1363,  1364,  5147,  2127,  2725,  4884,  4305,
    4306,  1752,  3044,  3008,  1357,  3420,  3587,  1680,   997,  3406,
    1369,  1681,  3049,  1762,  2361,  3051,  4202,  1762,  3054,  5072,
    4478,  5074,  2779,  1762,  2033,  4213,  1005,  1363,  1364,  1629,
    3408,  2172,  4513,  2784,  1363,  1364,  3031,  2739,  4619,  2402,
    2054,  2740,  1103,  5105,  1547,  4885,  1626,  1132,  1369,  3747,
    1400,  1401,  1402,  1403,  2088,  1366,   916,  1406,  1367,  2072,
    1081,  4727,  1975,  2085,  2086,  1976,  5351,  2090,  2852,  1315,
    2091,  2092,  2093,  4029,  2171,  2097,  2098,  2100,  2102,  2103,
    2104,  2105,  2106,  1366,  3641,  3642,  1367,  1110,  5573,  4582,
    1363,  1364,  2910,  3591,  1363,  1364,  4008,  2398,  1363,  1364,
    1150,  3726,  4931,  4932,  1709,  1171,  4580,  2120,  2121,   726,
    2123,  2867,  2125,   726,  1150,  1369,  1785,   726,  2135,  1150,
    1102,  1012,  2140,  1842,  1842,  4527,  2166,  1843,  1843,  1682,
    2788,  4129,  2789,  1754,  4024,  1684,  4280,  3660,  2169, -2105,
    2791,  1150,  3400,  1756,  4616,  1493,  2252,  2403,  1218,  1150,
    1458,  2122,  1150,  1363,  1364,  2126,  2184,  2186,  1685,  2134,
     969,  5148,  4528,  1363,  1364,  4630,  4478,  4412,  4413,  3401,
    1157,  1102,  1102,  4273,  3421,  4235,  1616,  4638,  4192,  2792,
    1102,  1102,  4642,  1102,  2214,  4911,  1474,  2129,  4479,  3600,
    2302,  3951,   969,  4297,  3769,   984,  3770,  4216,  1366,  2962,
    3402,  1367,  3409, -2105,  3410,  2248,  2318, -1851,  2130,  1880,
    4499,  3730,  5243,  1150,  2052,  1043,  4486,  2796,  1363,  1364,
    3681,  3682,  1363,  1364,  2554,  1369,  2362,  3196,  2267,  4227,
    3660,  1363,  1364,  2482,  3562,  3700,  2275,  2266,  1363,  1364,
   -1353,  5296,  3878,   969,  1363,  1364,  1046,  2385,  1363,  1364,
    1762,  2844,   726,   726,   726,  1102,   726,  1150,  1102,  4225,
    2853,  5256,  1757,  2313,  1363,  1364,  4575,  3480,  4852,  2315,
    4480,   726,  4265,  1150,  2427,  4187,   726,  4938,  3514,   968,
    2371,  1047,  1752,  4266,  2814,  4526,  1244,  3481,  3748,  3749,
    5310,  5574,  4276,   970,  2297,  2298,  2299,  2173,  2301,  2443,
    2889,  3567,  3568,  3734,  2268,  3736,  3737,  3219,  1366,  1316,
    1081,  1367,  4254,  2316,  2409,  3697,  1369,  2404,  2320,   970,
    1172,  5037, -1353,  4448,  4449,  2053,  1515,  1116,  2353,  2482,
    2511, -1353,  1049,  4360,  4479,  2405,  3480,  1366,  5014,  1553,
    1367,  4599,  2364,  2187,  1369,  1105,  2480,  1150,  3183,  3183,
    1754,  4853,  2159,  4517,  1553,  4466,  3481,  1363,  1364,  3701,
    3702,  1366,  3952,  3909,  1367,  1150,  3799,  5173,  1218,  2393,
    4912,  4529,  5394,  3220,  1407,  1173,  4122,  2269,  1158,  4126,
    4600,  1150,  5352,  2963,  1459,  4224,  1955, -1851,  1494,  2304,
    2728,  1107,  1150,  1756,  4678,  1366,  5414,  2937,  1367,  4434,
    1363,  1364,  1366,  5297,  5123,  1367,  3573,  4452,  3139,  3165,
    1016,  5228,  2440,  4728,  1754,  1319,  4484,  1150,  1213,  2197,
    1218,  4718,  3784,  2445,  2312,  2312,  2406,   992,  2209,  1218,
    2512,  2211,  1048, -1353,  2454,  2455,   116,   116,   116,  4004,
    4005,  4006,  4007,  3422,  2433,  2434,  2435,  5065,  1363,  1364,
    2257,  2305,  1363,  1364,  2482,  2543,  5000,  3974,  1366,  1369,
    2937,  1367,  1366,  1363,  1364,  1367,  1366,  4828,  2338,  1367,
    1406,   972,  2254,  3785,  3140,  3221,  2449,  2854,  4992,  4467,
    4288,  2076,  5396,  5353,  1664,  2831,  2450,  4713,  3676,  3677,
    3678,  4481,  1959,  2855,  3786,  1522,  2452,   972,  4861,  2556,
    1406,  4714,  1130,  2300,  4267,  3141,  2303,  1854,  5001,  2741,
     815,  4166,  1174,   970,  5354,  5234,  2174,  4872,  1363,  1364,
    4500,  1366,  3166,  1672,  1367,  1977,  3426,  1081,  1978,  1128,
    3937,  1366,  3939,  1734,  1367,  1855,  4572,  1017,  1924,  1363,
    1364,  2107,  3957,  3958,  3959,  3960,  2574,  1102,  4527,  3438,
    1141,  3966,  3967,  3968,  3969,  3970,  3971,  3222,  3973,  3976,
    3977,  3978,  1102,  4284,  2859,  1742,  3983,  1514,  5174,  1369,
    5314,  1408,  3992,  2558,  1665,  3607,  3142,  1142,  4516,  2456,
    5535,  5237,  1363,  1364,  5298,  4528,  1366,  1363,  1364,  1367,
    1366,  1081,  2270,  1367,  3571,  1102,  1510,  1106,  1369,  1366,
    1960,  1519,  1367,  1743,  1963,  4397,  1366,  3540,  5170,  1367,
    1756,  1964,  1366,  1144,  1190,  1367,  1366,  1018,  1185,  1367,
    1363,  1364,  1369,  5214,  2882,  2836,  4208, -2029,  2835,  1191,
    1363,  1364,  1366,  3081,  5215,  1367,  4729,  4481,  4169,  4731,
    1363,  1364, -2029,  2848,  2306,  4256,  4635,  2544, -1353,  1363,
    1364,  5396,  4637,  2254,  1674,  1320,  1369,   240,  3143,  4209,
    1675,  -659,  2175,  1369,  4854,  1925,  4468,  1389,  1390,  1363,
    1364,  3944,  1523,  2077,  1756,  1363,  1364,  3692,  5175,  1188,
    2877,  1363,  1364,  1001,  4285,  1286,  2772,  3699,  4438,  4268,
    -963,   972,  1965,  4715,  3167,  4873,  3997,  1363,  1364,  2715,
    3183,  1363,  1364, -1353,  3168,  3609,  2504,   970,  5002,  1903,
    3689,  3169,  1715,  2258,  2922,  5234,  1195,  3998,  1666,  1369,
    2882,  4150,  2716,  1369,  4555,  1366,   839,  1369,  1367,  1363,
    1364,  2339,  4808,  1385,  1363,  1364,  3427,  2911,  4076,   970,
    1363,  1364,  1914,  1150,  1676,  1132,   736,  2271,  1202,   737,
    4923,  3556,  2856,  2457,  4771,  4772,  1967,  2108,  1363,  1364,
    1511,  1150,  4601,  3874,  3875,  4257,  2272,  4077,  1366,  1132,
    1735,  1367,  5261,  2860,  1716,  5265,  2866,  2953,  3223,  3183,
    3183,  4469,  1369,  2109,  4222,  4223,  2864,  1407,  2908,  2868,
     970,  4090,  1369,  4442,  4529,  2576,  1736,  2909,  1363,  1364,
    4313,  4652,  4653,  3440,  1363,  1364,  5149,  4654,  4226,  1374,
    2685,  2742,  4314,  1357,  4253,  3170,  1366,  1407,  1102,  1367,
    1366,  2745,   979,  1367,  1200,  3011,  4315,  1165,  1049, -2029,
    3763,  1366,  2957,  2958,  1367,  1102,  1924,  3554,  1057,  1030,
   -1353,  3023,  4950,  2719, -2029,  4277,  4249,  1369,  1002,  3426,
    4255,  1369,  5216,  1102,  1286,  1150,  4913,  4914,  1658,  1677,
    1369,  3565,  2982,  3566,  4210,  1363,  1364,  1369,  2516,  2505,
    2919,  4981,  -963,  1369,  2924,  4155,  1203,  1369,  1924,  3144,
    4258,  4982,  1102,   221,  5356,   972,  1366,  1102,  4101,  1367,
    2078,  2882,  4102,  1369,  2883,  1150,  4586,  1968,  4012,  1150,
    1150,  2883,  1132,  3119,  2883,  1128,  2079,  1366,  1515,  1717,
    1367,  2910,  3171,  1008,   980,  1970,  4367,   972,  1167,  4188,
    1211,  1008,  3131,  1019,  1020,  1192,  1021,  1022,  1023,  1150,
    1150,  4936,  4937,  2985,  5093,  1102,  1388,  1363,  1364,  5096,
    1924,  4462,  2715,  1150,  4924,  1024,  4135,  4710,    42,  2110,
    1366,  4810,  4522,  1367,  4523,  1366,  1193,  2754,  1367,  1150,
    3429,  1905,  5418,  1939,  3227,  2716,  3095,  3273,   972,  2937,
    2937,  1046,    42,  1509,  2872,  2937,  1363,  1364,  4710,  1046,
    2873,  3139,  3750,  1363,  1364,  3227,  1369,   981,  1366,  1520,
    3040,  1367,  1612,  1363,  1364,  1854,   969,    42,  1366,   969,
    2925,  1367,  1363,  1364,  1702,  1993,  1047,  2032,  1366,  2743,
    2032,  1367,  2755,  2581,  1047,  1132,  2762,  1366,  2857,  4181,
    1367,    49,  3064,  1855,  4983,  2775,  2926,  1102,  1102,  1369,
    3228,  2517,  2776,  4436,  4437,  3945,  3946,  1366,  2780,  1213,
    1367,  2927,  2787,  1366,  1216,    49,  1367,  3140,  5135,  1366,
    4133,  3228,  1367,  5048,  2928,  1363,  1364,  1220,  2790,  3427,
    1924,  3229,  5483,  5484,  3613,  1366,  2875,  1997,  1367,  1366,
      49,  5221,  1367,  1613,  1847,    54,  5049,  1369,  3141,  5271,
    1924,  1369,  3229,  1218,  1150,  4842,  2366,  1363,  1364,  2367,
    3254,  3947,  1369,  3122,  5136,  1392,  1393,  1366,  4317,    54,
    1367,  1218,  1366,  1132,  1222,  1367,  2929,  2930,  1366,  5291,
    5292,  1367,  2440,  1224,  5357,  4174,    55,  4174,  3910,  2556,
     969,  4685,  1150,  1225,    54,  4710,  1366,  3299,  1906,  1367,
    2938,  3133,  3230,  3911,  2931,  2948,  1102,  1363,  1364,  4031,
    1385,    55,  4141,  1363,  1364,  4140,  2032,  1369,  5410,  3142,
    1128,  2793,  1226,  3230,  4443,  4444,  4445,  1048,  4408,  1231,
    1856,  4032,  5220,  4755,  3189,  1048,  1366,  3243,  1369,  1367,
    3195,  3661,  1366,  4409,  1165,  1367,  3208,  3210,  3213,  3214,
    3215,  3216,  3217,  1363,  1364,  4756,  3226,  2019,  3237,  1363,
    1364,  1363,  1364,  1236,  2805,  5358,  2597,  2598,  3237,  2557,
    3247,  3248,  2932,  3237,  1385,  3252,  3253,  2059,  1150,  3255,
    3237,  1369,  1363,  1364,  3231,  3265,  1369,  4402,  3268,  4686,
    2033,  5269,  5270,  5137,  1234,  3278,  1166,  4694,  3279,  1102,
    4568,  3143,  4434,  1366,  3227,  3231,  1367,  3292,  2368,  3294,
    5411,  3237,  2823,  3198,  4157,  1150,  2830,  2597,  2598,  1369,
    4695,  5316,  1408,  2937,  3218,  5415,  2933,  2833,  2872,  1369,
    3238,  1102,  5240,  4687,  3068,  1167,  4403,  1130,   366,  1369,
     368,  3237,  3332,  2032,   736,  3052,  3053,   737,  1369,  3569,
    5168,  5169,  3272,  3429,  4333,  4997,  3808,  4334,  4162,  4696,
    3269,    64,  5600,  1235,  3277,  5116,  3872,  3873,  1369,   219,
    3228,  3281,  3282,  4732,  1369,  1366,  4734,  4735,  1367,  3662,
    1369,  2419,  3069,  2420,   787,  4042,  1130,  3406,  1518,  -659,
      42,  2472,  1518,   998,  1363,  1364,  1369,  1057,  1030,  3663,
    1369,  3229,  2482,  4035,  5317,  5451,  4057,  2555,  3408,  1895,
    2614,  2615,  3664,  1388,  1366,  5241,  5406,  1367,  1444,  1363,
    1364,  1366,  1455,  2179,  1367,  1363,  1364,  1241,  1369,  1409,
     366,  1366,   368,  1369,  1367,  3882,  1418,  5476,  5476,  1369,
    1366,    42,  1242,  1367,  1363,  1364,  4069,  4316,  3437,  3132,
     792,  4072,  1389,  1390,  1007,  4228,  1102,  1369,  1363,  1364,
    1102,  2614,  2615,    49,  5506,  1398,  1399,  1400,  1401,  1402,
    1403,  1385,  3230,  1362,  4719,  4720,  1150,  1388,  1363,  1364,
    2382,  2383,  1385,  2384,  4080,   726,  3443,   726,   726,   726,
    5023,   787,  5024,  1366,  4086,  3665,  1367,  1369,  4614,  4615,
    1057,  1030, -1851,  1369,  4087,  3232,  1150,  5229,  2744,  1421,
    1150,  3183,  2581,  4088,    49,   116,  2768,    54,  1436,  3503,
    2581,  1243,  3144,  1363,  1364,  1366,  3232,  3441,  1367,  3444,
    3445,  2769,  4585,  4089,    55,  1991,  3585,  3874,  3875,  4091,
    3703,  3704,  3705,  4476,  3283,  4094,  3284,  3280,  1245,  1557,
    1820,  3590,   804,  1821,  3231,  2781,  2782,   792, -1851,  2581,
    2581,  4100,  2783,  1655,  1369,  4103,  2581,  1246,    54,  1748,
    3183,  3183,  1392,  1393,  1247,  1366,  4489,  4490,  1367,  3324,
    3583,  1366,  3016,  2785,  1367,    55,  1250,  2581,  1749,  3285,
    2786,  3546,  1424,  4105, -1851,  2054, -1851,  1413,  4107,  1251,
    5167,  1437,  4505,  3017,  4109,  1252,  1438,  2032,  1558,  1672,
    1363,  1364,  3286,   970, -1851,   736,   970,  3666,   737, -1851,
    1253,  1366,  4110,  1049,  1367,  4263,  4264,  1366,  1762,  1366,
    1367,  1049,  1367, -1851,   820,  4498,  1369,  3575,  3576,  1254,
   -1851,  1559,  1870,  4138,  1255,  3018,  1750,  1150, -1851,  1439,
    1366,  3287,  2826,  1367,  1150,  4456,  2581,  3527,   821,   804,
   -1851,  1357,  4111,  1256,  4494,  1440,  2915,  3785,  4510,  1150,
    2916,  2166,  1257, -1851,  1388,  1369,  2166,  1260, -1851,  4454,
    3599,  1150,  1369,  4455,  1262,  1388,  1263, -1851,  3786,  3667,
    3062,  1441,  1369,  4535,  3063,  4869,  4870,  4776,  4777,  4778,
    4779,  1369,  3529,  3488,  3386,  1264,  1751,  2581,  3390,  1130,
    1046,  3560,  1267,  1363,  1364,  2581,  1102,  3126,  1268,  1132,
    1132,  3313,  3314,  1102,  1102,  5005,  3652,  1673,  5250,  4511,
    2635,  2636,  1057,  1030,  3638,  3639,  1270,   970,  4429,  4430,
    1674,   820,  2555,  1286,  1433,  1047,  1675,  4312,  2919,  1363,
    1364,  2485,  1271,  1102,  1369,  3150, -1851,  5544,  5545,  1871,
    1130,  2475,  1366,  1872,   116,  1367,   219,  1272,  1518,  3454,
    1448,  1043,  1273,  1451,  1274,  3232,  2486,  1873,  1454, -1851,
    4336,  2635,  2636,  1456,  1275,  1357,  1369,  1366,  4341, -1851,
    1367,   972,  1428,  1366,   972,  4374,  1367,  1098,  1100,  1752,
    3794,  4512,  1046,  1724,  3795,  2313,  2313,  1150,  1432,   969,
     969,   969,  1366,  3106,  3107,  1367,  1276,  3997,  3108,  3109,
    3716,  4092,  3718,  1435,  4307,  2581,  3127,  3711,  4308,  1277,
    1676,  4461,  3575,  1392,  1393,  4308,  1369,  1047,  3998,  3796,
    4662,  1280,  1369,  1281,  1392,  1393,  1366,  4806,  1287,  1367,
      25,  1288,  1375,  1376,  4534,   847,  1443,  4809,  2581,  1289,
    1560,  1442,   220,  3227,  4557,  1132,  4815,  1384,  3061,  1290,
    1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403, -1851,  4576,
    1446,   221,  1369,  4577,  1753,  1291,  1150,  1292,  1369,  1518,
    1369,  1366,  1293,  1377,  1367,  4837,  1048,  1294,  1102,  2440,
    3767,  1297, -1851,  3288,  2179,  1295,  1378,   767,  4624,   767,
    5115,  1369,  4625,  1874,  4680,   972,  4626,  3309,  3312,  4817,
    4625,  1314,  2487,  4858,  3778,  4680,  4573,  1298,  3531,  3228,
    1299,  1754,  3661,  1300,  1328,  1329,  1398,  1399,  1400,  1401,
    1402,  1403,  2333,  2334,    42,  1677,  1379,  1749,  3011,  1518,
   -1851,  4818,  3629,  4862,   222,  2022,  2023,  1150,  5230,  1380,
    3229,  3195,   847,  3195,  2197,  1447,  4659,  1301,  1749,  3208,
    4660,  2209,  3626,  3817,  1666,  1385,  2418,  2419,  1366,  2420,
    5116,  1367,  3237, -1851,  1302,  4699,  1381,  4699,  1048,  4666,
    3880,  4758,   787,  4667,   787,  4759,  1303,   223,  3393,   787,
    4038,  4819,  1711,  1712, -1851,  1750,  1561,  1150,  1304,  1460,
    4760,  1875,  1755,  3888,  4761, -1851, -1851,    49,  4763,  3393,
    2032,  1305,  4764,  1369,  1306,  2032,  1750,  1562,  5067,  5068,
    5069,  3230,  1307,  3237,  4181,  4000, -1851,  3393, -1851, -1851,
     224,  3237,  1308,  1309,  1385,  3237,  3237,  4820,  1369,   791,
    1382,   791,  1563,  4910,  1369,  5079,  1310,  1311,   792, -1851,
     792,  1102,  1312,  1313,    36,   792,  1150,  1150,  1564,  5554,
    3662,  3630,  3631,  1369,  1317,  1465,  5081, -1851,  1318, -2105,
    1321,  1366,  5554,  1386,  1367,  1322,  3151,  1326,    55,   797,
    3663,   797,  4766,  3393,  1330, -1851,  4767,  2574,  3394, -1851,
   -1851,    42,  3152,  3664,  1331,  3395,  4768,  1369,  1081,  1387,
    4769,  4770,  1150,  3231,  3139,  4667,  5554,  1366, -2105,  3394,
    1367, -1851,  5117,  4775,  4798,  1332,  3395,  4667,  4801, -1851,
    1333,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,  1334,
    1335, -1851,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,
    1466,  4811,  1369,  1150, -1851,  2581,  1472,  4834,  1752, -1851,
     804,  2581,   804,  1336,  4313,  1337,  5154,   804, -1851,  5157,
    5158,  5159,  5160,   225,    49,  1338,  4314,  4886,  1388,  1752,
    3140,  4660,  1339,  1340,  1385,  1341,  3665,  2910,  5112,  1102,
    4315,  1756,  1102,  1342,  3817,  1343, -1851,  1752,  1344,  1389,
    1390,  5020,  1057,  4326,  4026,  1476,  4902,  1345,  1117,  4595,
    4667,  3177,  5143,  5280, -1851,  1346, -1851,  4906, -1851,   969,
    4909,  4667,   116, -1851,  4667,   815,  1138,   815,    54,  1347,
     219,   116,   116,  4892,  4893,   116,  4895, -1851,  1348,  1369,
    1349,   819,   820,  1753,   820,    55,  4925,  1388,  -962,   820,
    4926,  1479,   226,  1752,  4345,  1118,  4945,  4927,  1350,  1351,
   -1851,  4926,  5257,  3632,  1753,  4974,  4899,  4900,  1412,  4667,
   -1851,  5267,  5268,   821,  3153,  1391,  1444,  1488,  1497,  5062,
    5276,    42,  3178,  5063,  3396,  1499,  1501,  1509,  1534,  4159,
    1754,  -809,  1049,  1542,  1641,  1642,  5082,  1645,  4346,  1646,
    4660,  5050,  4347,  5095,  4348,  3396,  3546,  3795,  3666,  1218,
    1757,  1754,  1548,  1551,  5171,  1556,  2476,   227,  5172,   228,
    5329,  4172,   919,  3396,  5330,  4132,   742,  5334,  5337,  1754,
    1119,  3922,  4625,  1569,  3232,  5051,  5339,  1392,  1393,  5348,
    5340,  1580,  1369,  5349,  5419,   221,  1579,  2179,  5420,  5338,
    1394,  3154,  4349,   229,    49,  3661,   970,   970,   970, -1851,
    4803,  1596,  2919,  1581,  3179,   230,  4154,  1150,  2582,  2583,
    2584,  2585,  2586,  2587,  2588,  1102,  1597,  3155,  1369,  3396,
    3667,   920, -2105, -1851,  1049,  1754,  1598,  1388,  1150,  1601,
    1132,  1132,  3237,  2033,  1602,  1603,  2033,  1630,  3987,  1132,
    1132,  1132,  1463,  1631,   116,  1633,  1392,  1393,  3630,  3631,
    3139,  1150,  5587,  4260,   921,  1634,  5588,   743,  1643,  1649,
      64,  1651,  1648,  1102,  1102,    55, -1851,  1650,  1138,  1652,
    -962, -1851,  1102,  1102,  1102,  1654,  1653,  4017,  1656,  3156,
    4019,   839,  1658,   839,  1659,  4700,  4596,  4700,  4701,   922,
    4701,  1660,  1663, -1013,  3987,    42,  1689,  5122,   845,  5052,
     845,   231,  1671,   847,  1690,   847,   848,  1081,   848,  1691,
     847,  4244,  1692,  1707,   767,  1703,  3140,  1002,  1721,  4237,
    1584,  4237, -1851,  1723,  5040, -1851,  5041,  5042,  1081,  1747,
    -983,  1847,  1132,  3662,  1888,  1889,  2312, -1851,  1385,  1891,
     923,  1892,  1406,  1924,   744,  1942,  1081,  3141,  1931,  1945,
    1585,  1980,  1990,  3663,  1385,  1991,  5073, -1851,  1992, -1851,
   -1851,  2013,  2030,  2042,  2043,  1102,  3664,  4275,    49,  2055,
    3139,  2056,  2033,  4641,   972,   972,   972,  2057, -1851,  1385,
   -1851,  3157,  2068, -1851,  2087,  5053,  1392,  1393,  2095,  2094,
    1756,  5012,  4699,  2128,  1647,  1395,  2124,  2142,  3988,   787,
    3139,  1586,  1081,  5054, -1851,  1587,  3195,  2168,  5233,  2193,
    2189,  1756, -1851,  5118,  4304,  2032,  2196,  2194,  3142,  2204,
   -1851,  2205,  3630,  3631, -1851,  3180,  2206,  5055,  2218,  1756,
    1120,  4435,  1389,  4350,  2235,  2238,  3140, -1851,  4351,    55,
    3632,  2249, -1851,  2253,  4352,  2254,  4441,   745,  2256,  3665,
    2259, -1851,  1121,  2261,  3988,  2263,   791,  2265,  2291,  5385,
    2266,  2295,  1511,  4165,  2322,   792,  3140,  3141,  -153,  2323,
    2324,  2327,  4597,   924,  2325,  1396,  1397,  1398,  1399,  1400,
    1401,  1402,  1403,  2340,  4353,  1756,  4383,  2330,  2354,  2341,
    2356,  2343,  2191,  1122,  2355,  2358,   797,  3177,  2360,  2033,
    3143,  3661,  4391,  4392,  2372,   366,  2373,   368,  2375,  1757,
    2377,  2378,  2376,  4702,  4703,  4702,  4703, -1851,  2379,  1666,
   -1851,  4736,  3237,  3237,  2388,  2387,  3332,  2411,  4418,  2393,
    1757,  4422,  2424,  2429, -1851, -1851,  2428, -1851,  3142, -1851,
    2444,  1388,  2458, -1851, -1851,  1397,  1398,  1399,  1400,  1401,
    1402,  1403,   925, -1851,  1123,  2459,   746,  1388,  2461,  2462,
    1588,  2470,  2474,  4354,  2475,  2489,  2500,   804,  3178,  2494,
    1385,  3666,   926,  1409,  2495,  2501,   747,  2503,  2513,  2515,
    2518,  4316,  1388,  4965,  2525,  5318,  2526,  2529,  4970,  3426,
    4304,  2506,  2536,  5463,  1749,  1773,  1774,  2539,  2537,  2547,
    2549,  2475,  4327,  3861,  2550,  4304,   970,  4446,  5233,  2560,
    1081,  2561,  2563,  4355,  1130,  2562,  2507,   927,  2566,  2577,
    3143,   748,   749, -1963,  1102,  2567,   749,  5056,  2578,  2581,
    2580,  1776,   815,  2688,  5326,   915,  2686,  2689,  1589,  3662,
     928,   965, -1851,  3667,   818,  1779,  2690,  2692,   819,   820,
    3179,  1780,  1781,   929,  5511,  1782,  5513,   750,  2693,  3663,
    2694,   751,  5404,  1044,  5088,   930, -1851,  2695,  2696,   752,
    4356,  5528,  3664,  2699,  2701,  2714,  2720,   915,  1127,  1784,
    2730,   931,  2732,   915,  1396,  1397,  1398,  1399,  1400,  1401,
    1402,  1403,  2733,  1785,  2734,  4238,  2749,  1786,  4538,  2751,
    1392,  1393,  1590,  2757,  2756,  5560,  5561,   932,  4539,  4598,
    2759,   753,  2760,  2770, -1851,  4965,  1392,  1393,  4540,  4970,
    2508,  3144,  3874,  3875,  -659,  2766,  1791,  2774,  2803,  2778,
    2794,  2795,  4541,  4542,  4543,  4657,  2800,  2815,  2804,  2816,
    4661,  1392,  1393,  2817,  4664,  2824,  2825,  2837,  4544,  1385,
    2827,  2843,  2166,  2845, -1469,  3665,  1403,  -809,  2846,  2847,
    2890,   933,  1854,  2033,  1132,   754,  2870,  2475, -1851,  2861,
    2865,  2887,  4357,  1388,  2874,  2893,  4965,  2913,  2871,  2883,
   -1851,  4970,  2476,  2894,   972,  2895,  2896,  2897,  2898,  1286,
    1855,  2919,  2899,  2912,  1150,  2914,  -811,  1102,  2917,  3427,
   -1851,  1553, -1851,  1795,  2949,  1518,  2952,  1868,  2960,  2959,
    1796,  2967,  2970,  2971,   116,  4358,  4359,  2972,  2974,  2978,
    2979,  1385,  2980, -1851,  1591,  2241,  3006,  3007,  1522,  1523,
    1797,  3025,  3011,  3037,  3026,  3027,  3034,  -809,  3028,  3029,
    3030,  3144,  3039,  3428,  3043,  2032,  3045,  2475,   839,  3050,
    4237,  3055,  4700,  3057,  5580,  4701,  3060,  4081,  3061,  3066,
    3067,  3074,  2476, -1851,  3078,   845,  1592,  3080,  1676,  2032,
     847,  3180,  4460,   848,  3086,  3087,  2032,  3666,  5591,  3094,
    1749,  1773,  1774,  3093,  2032,  5580,  -809,  3098,  3125,  1799,
    3101,  4675,  2477,  5591,  4304,  3102,  4658,  3103,  3130,  4304,
    3120,  1174,  3148,  4304,  4783,  3136,  3160,  1800,  3161,  3162,
    3163,  3249,  3817,  3251,  3297,  -964,  -964,  1776,  3304,  3319,
    3317,  3325,  3326,  1150,  4048,  -964,  4052,  2509,  1854,  3335,
    3333,  1779,  1392,  1393,  3336,  3337,  3338,  1780,  1781,  3339,
    3340,  1782,  3341,  3344,  2510,  3345,  1102,  3346,  2144,  3667,
    1150,  5538,  1388,  3347,  3348,  3349,  1855,  3350,  3351,  3352,
   -1851,  3353,  1804,  3356,  3357,  1784,  -809,  3358,  1128,  3359,
    3360,  1805,  2477,  3361,  3362,  4545,  3363,  3364, -1851,  1785,
   -1851,  3365, -1851,  1786,  5572,  3366,  3367, -1851,  3368,  3369,
    1102,  4740,  4546,  3370,  3371,  3372,  3373,  3374,  1396,  1397,
    1398,  1399,  1400,  1401,  1402,  1403,  3388,  3375,  1854,  4240,
    3376,   726,  1791,  3377,  1396,  1397,  1398,  1399,  1400,  1401,
    1402,  1403,  3378,  3429,  1388,  4629,  3379,  3380,  3381,  3382,
    5398,  3389,  3392,  4418,  2702,  3416,  1855,  3448,  3414,  1396,
    1397,  1398,  1399,  1400,  1401,  1402,  1403,  1686,  3818,  3819,
    1810,  3425,  3457,  4750,  3820,  3490,  3821,  3491,  3822,  3823,
      42,  3603,  1265,  4304,  3492,  3504,  3506,  3521,  3068,  4791,
    3551,  2145,  3553,  2506,  3558,  2146,  3824,  3604,  3561,  3586,
    4702,  4703,  1315,  2475,  1319,  3601, -2335,   241,  4704,  1795,
    3602,  3610,  3606,  2478,  3624,  3611,  1796,   116,  2507,  3628,
    3645,  3646,  3647,  3651,   966,  3659,  1811,  1812,  1813,  1814,
    -809,  1392,  1393,  4547,  1815,  2147,  1797,  1951,  1952,  1953,
    1954,  1955,  3660,  1409,  3673,  3679,  3825,  3685,  3698,  3826,
    4548,  1816,  3708,    49,  1817,  2148,  3712,  3827,  3714,  3715,
    3717,  3713,  3720,  3722,  3723,  3727,  3729,  3728,  3735,  3135,
    3758,  3733,  3777,  3772,  3773,  3774,  3463,  1150,  3775,  3776,
    3801,  1518,  3802,  4844,  3803,  3779,  3810,  3811,  3812,  3882,
    1819,  3890,  3887,  3828,   887,  1799,  2033,  3805,  3891,  3895,
    5597,  2033,  3898,  1392,  1393,  1150,  3899,    54,  3915,  3920,
    -809,  3921,  4549,  1800,  4691,  3906,  3922,  3918,  3924,  5398,
    2149,  3829,  2508,  3830,    55,  3927,  4003,  3919,  3011,  4550,
    3930,  2479,   116,  3933,  3936,  3546,  3986,  4001,  1409,  3831,
    3832,  4010,  1135,  4011,  1956,  1957,  1958,  1959,  4028,  4883,
    1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,  4739,  4039,
    4049,  5255,  4053,  3151,  1854,  4043,  4045,  4054,  1804,  4056,
    4058,  4060,  4062,  4061,  4063,  4064,  4073,  1805,  4074,  3152,
    1325,  3833,  4112,  2220,  4115,  4120,  4972,  4304,  4116,  4121,
    5569,  4304,  1855,  2221,  3834,  4123,  1798,  4139,  2144,  1150,
    1770,  4310,  4311,  2222,  4147,  1081,  4318,  4148,  4152,  4167,
    4156,  2479,  1822,  3835,  4170,  2150,  -809,  2223,  2224,  2225,
    5395,  4171,  3836,  3837,  5569,  3838,  4182,  4185,  4186,  4189,
    4190,  4204,  4205,  2226,  4218,  4206,  1825,  1826,  4219,  4193,
    4194,  4195,  4340,  4229,  4230,  4232,  1150,  4196,  4370,  4372,
    4373,  2151,  4197,  4048,  4231,  1960,  1810,  1961,  1962,  1963,
    4198,  3839,  3840,  3841,  4233,  4241,  1964,  4242,  4245,  4247,
    4246,  4248,  4259,  4262,  4271,  2152,  4282,  4277,  4283,  4287,
    3842,  3843,  3844,  4418,  4286,  4422,  4956,  3845,  4290,  4292,
    3846,  4295,  4298,  4299,  4324,  4335,  -809,  5011,  4342,  3430,
    2153,  4375,  -659,  4379,  1150,  4453,   915,  4386,  3847,  3848,
     116,   915,  1811,  1812,  1813,  1814,  4395,  4396,  1102,  4440,
    1815,  2145,  4459,  4463,  4464,  2146,  4407,  4471,  4483,  1396,
    1397,  1398,  1399,  1400,  1401,  1402,  1403,  1816,  4485,  4487,
    1817,   915,  3849,  3850,  2154,  5438,  2510,  1965,  4495,  4519,
    4501,  3153,  4502,  4524,  4553,  4537,  4514,   915,  4554,  4559,
    5438,  4515,  4518,  4561,  1150,  2147,  4567,  4571,  3475,  4572,
    4579,  4581,  4584,  4589,  5448,  2155,  1819,  4590,  4593, -1744,
   -1743,  4594,  4611,  1150,  4621,  2148,  4622,  2366,  4633,  4634,
    3237,  4636,  3237,  5060,  1363,  1364,  4643,  4644,  4645,  4646,
    3766,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,  4655,
    1966,  1967,  4672,  4663,  4676,   915,   915,  4682,   915,   915,
    -812,  4711,  4712,  4717,  3200,  5479,  4724,  4726,  3154,  4369,
    3851,   915,  4733,  4741,  3852,  4742,  4744,  4745,  5438,  4748,
    4752,  4754,  4751,  4762,  4774,  4787,  3853,  4784,  5501,  4794,
    2149,  1389,  1390,  5076,  3155,  4792,  4807,  4796,  4797,  4798,
    2227,  4799,  4800,  4804,  4805,  4812,  4813,  4814,  4824,  4822,
    4823,  4835,  4830,  4833,  4836,  4838,  4839,  2228,  5520,  4840,
    4846,  4847,  4418,  4418,  4848,  4850,  5438,  4856,  5438,  4859,
    4863,  4864,  1951,  1952,  1953,  1954,  1955,  4866,  1822,  4868,
    4881,  4880,  4791,  5438,  4887,  4890,  3854,  4891,  4894,  3855,
    4896,  5108,  3856,  3857,  3858,  3859,  3156,  4625,  4897,  1171,
    4901,  4922,  1825,  1826,  4903,   818,  4935,   915,  4939,  4940,
    3913,  4929,  4948,  4946,  4952,  5438,  5438,  4971,  4801,  4975,
    5584,  4991,  4953,  5144,  4989,  2150,  4994,  5060,  4995,  4959,
    4999,  4958,  1968,   965,  3546,  3860,  3861,  5006,  5015,  5010,
    5025,  5016,  5029,  4977,  5032,   915,  4988,  2313,  4978,  1969,
    1970,  4990,  4996,  5034,  5030,  5043,  5046,  5071,  5086,   965,
    5077,  2151,  5080,  3862,  5092,  5089,  5098,  4304,  3731,  5106,
    5109,  5107,  1044,  5110,  5111,  5113,  4873,  5007,  5125,  1956,
    1957,  1958,  1959,  5127,  5129,  2152,  5128,  5131,  5146,  5132,
    5133,  5134,  5138,  5139,  3542,  2229,  5145,  5150,  3157,  5153,
    5155,  5156,  5161,  5164,  5176,  5179,  5217,  5223,  5218,  5227,
    2153,  5238,  5237,  5242,  5235,  5240,  5241,  5244,  5245,  5251,
    5252,  5258,  5259,  5273,  5282,  -545,  5300,  5302,  5303,  5304,
    5305,  2033,  5312,  5315,  5311,  5249,  5328,  5335,  5333,  5362,
    5365,  -563,  3332,  3332,  5390,  5391,  5392,  5393,  5406,  4237,
    5408,  5413,  5037,  5407,  2154,  5423,  5434,  2230,  5426,  5347,
    5427,  5435,  5350,  5439,  5272,  5447,  5454,  5458,  5457,  5459,
    5464,  5466,  5468,  5469,  2231, -2795,  5277,  5472,  5489,  5480,
    5482,  5494,  5502,  5492,  5504,  2155,  5286,  5508,  5509,  5510,
    1960,  5293,  1961,  1962,  1963,  5514,  5521,  5519,  5527,  5531,
    5533,  1964,  5536,  5537,  5539,   736,  5543,   121,   737,   114,
    5547,  5550,  5559,  5548,  5556,  5557,  5581,  5008,  5585,  5592,
    5598,  5596,  4418,  5601,  4143,  3935,  5295,  3926,   116,  3932,
    5515,   915,  3929,  4955,  4957,  4960,  3955,  4439,  4966,  4289,
    1915,  4976,  1366,  5222,  5307,  1367,  5445,  2460,  5478,  1102,
    5104,  5344,  5225,   965,  5594,  5552,  1094,  1614,  3594,  3643,
    4552,   915,   915,  5190,  5486,  5191,  5562,  5432,  5193,  5487,
     915,   915,   915,   915,   915,   915,  5477,  1150,  5444,  5211,
    1150,  5194,  1965,   915,   915,   969,   915,   915,  5449,  5443,
    4451,   915,   915,  5366,  5196,   915,   915,   915,   915,  5197,
     915,   915,  5198,  3186,  5199,  1758,  3192,  5200,   915,   915,
    5201,   915,   915,   915,   915,   915,  5060,  5204,   915,   915,
     915,   915,   915,   915,   915,   915,   915,  5205,   915,  4142,
    1248,   915,   915,  5206,  5249,  4773,   915,  4656,  4785,  3387,
     915,   915,   915,  4023,  4022,  1966,  1967,  4025,  4627,  5416,
    4905,  5456,  5035,   915,   915,   915,  5421,  5163,   915,  5422,
    1279,   915,   915,   915,   915,   915,  3149,  3307,  4786,  4021,
     915,  4670,  4721,  4671,  4378,  4328,  1296,  4928,  4376,  5211,
    5211,   915,   915,  5428,  4723,  5452,  4114,  3122,  5165,   915,
    5047,   915,   915,  5094,  2718,  5061,  5097,  5070,  3809,  4921,
    4683,  4781,  4457,   915,   915,   915,  1150,   915,   915,  5344,
    4013,   915,   915,   915,  3756,  3743,   915,   915,   915,   915,
     915,   915,   915,   915,  3310,  4943,  3311,   915,  3308,  2442,
    3056,  2417,   915,  1625,  3059,  4394,  2687,  3881,  1358,  3627,
    3923,  3625,  2575,  4164,  3612,  4566,  1136,   965,  3005,  1508,
    2070,  3121,  4802,  2869,  2834,  1507,  3550,  3572,  5140,  5120,
    1989,  5453,  5405,  5586,  5412,  3655,  3656,  1469,  3657,  5491,
    5523,  5027,  5541,  3658,  4871,  5253,  5499,  4414,  4613,   965,
    5254,  4878,  4221,  1632,  4998,  2351,  5141,  1968,  4390,  5114,
    5211,  5211,  5045,  3124,   934,  2876,   966,  5327,  3581,  1941,
    1726,  1727,  4857,  1369,  1969,  1970,  4160,  4161,  2188,  2350,
    4578,  4158,  4843,  1728,  5529,  4851,  1720,  2441,  1729,  5534,
    2328,  3047,   966,  1481,  1722,  3048,  2977,  3588,  3902,  5018,
     965,  2976,  5505,  4647,  5522,  4898,  5595,   915,  5599,  4737,
    4829,  4855,  5028,  3765,  4889,  3942,  1471,  5409,  1052,  2277,
    3035,  2071,  3024,  5570,  1053,  3690,  2276,  2234,  3621,  3020,
    3021,  2033,  1504,  2178,  5211,  3738,  1679,  3417,  1044,  2410,
     915,  3413,   114,   915,  3418,  5009,  5124,  2240,   758,  5211,
     759,  1150,  4458,  1918,   887,  2033,  1506,  5570,  1919,  1469,
    1920,   116,  2033,  5211,  4743,  4163,  4782,  5417,  4973,  4401,
    2033,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5211,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5211,  5211,     0,
       0,     0,     0,     0,  5211,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,     0,     0,  5211,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5211,     0,   915,
       0,     0,     0,     0,     0,  5212,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5211,     0,  5211,     0,
       0,     0,     0,     0,     0,     0,     0,  5211,     0,     0,
       0,     0,     0,  5211,     0,  5211,     0,  5211,  3426,     0,
       0,     0,     0,  1749,  1773,  1774,   966,     0,     0,     0,
       0,     0,  5211,     0,     0,     0,     0,   915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5211,  5211,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1776,     0,     0,     0,  5211,  5211,     0,     0,     0,  5211,
       0,     0,     0,     0,  1779,     0,     0,     0,     0,     0,
    1780,  1781,     0,     0,  1782,  5212,  5212,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1784,     0,
    1922,  1923,     0,     0,     0,     0,     0,     0,     0,  1933,
    1934,     0,  1785,  1937,  1938,     0,  1786,     0,     0,     0,
       0,     0,  1946,  1947,     0,  1948,  1949,     0,     0,     0,
    1973,     0,   970,     0,  1982,  1983,  1984,  1985,     0,  1987,
       0,     0,     0,  -659,     0,  1791,     0,  1995,  1996,     0,
    1999,  2000,     0,  5213,     0,     0,     0,  2004,     0,     0,
    2007,  2008,  2009,  2010,  2011,  2012,     0,  2014,     0,     0,
    2017,  2018,     0,     0,     0,  2021,     0,     0,     0,  2024,
    2028,  2029,     0,     0,     0,     0,  5212,  5212,     0,     0,
       0,     0,  2036,  2037,  2038,     0,     0,     0,     0,     0,
    2044,  2045,  2046,  2047,  2048,     0,     0,     0,     0,     0,
     966,     0,     0,     0,     0,     0,     0,     0,  3427,     0,
    2069,   887,  1795,     0,     0,     0,  4345,     0,  2073,  1796,
    2074,  2075,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,     0,     0,     0,     0,   915,  1469,  1797,
       0,   915,     0,  5213,  5213,     0,     0,     0,     0,   915,
    5212,   915,  2203,  -809,     0,     0,     0,     0,     0,     0,
    4722,  2115,     0,     0,  4347,  5212,  4348,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2476,  5212,
       0,     0,     0,   966,     0,     0,     0,     0,     0,     0,
       0,   915,     0,     0,     0,     0,     0,     0,  1799,     0,
     972,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5212,     0,     0,  4349,     0,  1800,     0,     0,     0,
       0,     0,     0,  5212,  5212,     0,     0,     0,     0,     0,
    5212,     0,     0,     0,     0,   915,   915,   915,     0,     0,
       0,     0,     0,  5212,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5212,  5213,  5213,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2251,     0,     0,     0,
       0,  1804,  5212,   915,  5212,     0,     0,  1128,   915,     0,
    1805,     0,     0,  5212,     0,     0,     0,     0,     0,  5212,
       0,  5212,     0,  5212,     0,     0,     0,   915,     0,  2289,
       0,     0,  2294,     0,   915,     0,     0,     0,  5212,   915,
       0,   915,     0,     0,     0,     0,     0,   915,     0,   915,
     915,     0,     0,  5212,  5212,     0,     0,     0,  5213,     0,
       0,     0,  3429,     0,     0,     0,     0,     0,     0,     0,
    5212,  5212,     0,  5213,     0,  5212,     0,     0,     0,     0,
       0,     0,  -983,     0,     0,     0,     0,  5213,     0,  1810,
       0,     0,  2414,  2414,  2414,     0,     0,     0,     0,    42,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5213,
       0,     0,     0,     0,     0,     0,     0,     0,  2365,     0,
       0,  5213,  5213,     0,     0,     0,     0,     0,  5213,     0,
       0,     0,     0,     0,     0,  1811,  1812,  1813,  1814,     0,
       0,  5213,     0,  1815,     0,     0,     0,     0,     0,     0,
       0,  5213,     0,     0,     0,     0,     0,     0,     0,     0,
    1816,     0,    49,  1817,     0,     0,     0,     0,     0,     0,
    5213,     0,  5213,     0,  1389,  4350,  2430,     0,     0,     0,
    4351,  5213,     0,     0,     0,     0,  4352,  5213,     0,  5213,
       0,  5213,     0,   965,     0,     0,   965,     0,     0,  1819,
       0,     0,     0,  1044,   915,     0,  5213,     0,   915,     0,
       0,  1044,     0,     0,   915,     0,    54,     0,     0,     0,
       0,  5213,  5213,     0,     0,     0,  4353,     0,     0,     0,
       0,     0,     0,    55,     0,     0,     0,     0,  5213,  5213,
       0,     0,     0,  5213,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3458,
       0,     0,     0,     0,     0,  4354,     0,     0,     0,     0,
       0,     0,     1,     0,     0,     2,     0,   965,     0,     0,
       0,  1822,     0,     0,     0,     0,  3459,     0,     0,     0,
       0,     0,     0,     0,     4,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1825,  1826,     0,     5,     6,
       0,     0,     0,     0,     0,  4355,     7,     0,     0,     0,
       0,     8,     9,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3460,    10,     0,  3461,
       0,     0,     0,     0,     0,     0,     0,  3462,     0,     0,
       0,     0,     0,     0,     0,  3184,  2731,    11,  3184,  3184,
    2735,     0,     0,     0,     0,     0,  3463,     0,  1130,     0,
    2731,  -659,  4356,     0,     0,     0,     0,     0,     0,    12,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
      14,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    15,    16,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3464,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3874,  3875,     0,     0,    18,  3465,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,  2807,  2809,  2811,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,    21,     0,
       0,   915,     0,    22,  4357,     0,    23,     0,     0,     0,
       0,     0,     0,     0,  3466,     0,     0,     0,     0,     0,
       0,    24,     0,     0,     0,     0,     0,  2850,  -811,    25,
       0,     0,    26,  3467,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2858,  4358,  4359,     0,
       0,     0,    27,     0,     0,     0,     0,     0,  2862,     0,
    2863,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,  2939,    29,  2945,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3468,  3469,  3470,     0,     0,     0,     0,  3471,     0,     0,
    3472,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   915,     0,   966,
       0,     0,     0,     0,     0,     0,   915,   915,     0,     0,
       0,     0,  3473,  3474,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,  3036,     0,     0,   915,   915,     0,
     915,     0,     0,   915,   915,   915,   915,   915,  3475,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,   915,
       0,     0,    31,     0,   915,     0,   915,     0,   915,   915,
       0,   915,   915,    32,     0,     0,   915,   915,   915,     0,
       0,     0,   915,   915,   915,     0,   915,     0,   915,     0,
     915,     0,   915,  3032,   915,    33,     0,  2289,    34,   915,
      35,     0,     0,    36,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    37,    38,   915,     0,     0,     0,     0,
       0,     0,  3476,    39,     0,    40,     0,     0,     0,     0,
     966,     0,     0,     0,    41,     0,     0,   915,     0,   915,
      42,   915,     0,     0,     0,   915,     0,     0,    43,     0,
       0,   915,   915,    44,    45,    46,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,     0,     0,     0,
       0,     0,  3477,    48,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3174,     0,     0,     0,  3185,
       0,     0,     0,    49,  3190,     0,     0,     0,     0,     0,
    3478,     0,  1044,     0,     0,     0,     0,     0,     1,     0,
       0,     2,     0,     0,   915,     0,     0,    50,     0,  3239,
    3240,  3241,  3242,     0,     0,     0,     3,     0,     0,    51,
       4,     0,     0,    52,     0,     0,     0,     0,     0,     0,
       0,    53,     0,  3479,     5,     6,     0,    54,     0,     0,
       0,  3276,     7,     0,     0,     0,     0,     8,     9,     0,
       0,     0,     0,     0,    55,     0,   965,   965,   965,     0,
       0,     0,    56,    10,     0,  3190,  3190,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    11,  1044,     0,     0,     0,     0,     0,
       0,     0,     0,    61,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,   915,     0,     0,     0,    13,    14,     0,     0,     0,
       0,   915,     0,   915,     0,     0,     0,    15,    16,     0,
      62,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3334,     0,     0,     0,    19,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,    21,     0,     0,     0,     0,    22,
       0,     0,    23,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    24,     0,     0,
       0,     0,     0,     0,     0,    25,     0,     0,    26,    64,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1749,
    1773,  1774,     0,     0,     0,     0,     0,     0,    27,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,  1776,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1779,     0,     0,     0,     0,     0,  1780,  1781,     0,     0,
    1782,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3447,     0,     0,     0,
       0,     0,     0,     0,  1784,  3455,  3456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1785,     0,
       0,     0,  1786,     0,     0,     0,  3493,  3494,     0,  3495,
       0,     0,  3498,  3499,  3500,  3501,  3502,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,  3508,     0,
       0,  1791,     0,  3509,     0,  3510,     0,  3511,  3512,     0,
    3513,     0,     0,     0,     0,  3518,  3519,  3520,     0,     0,
       0,  3523,  3524,  3525,     0,  3526,     0,  3528,    31,  3530,
       0,  3532,     0,  3533,     0,     0,     0,     0,  3536,    32,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,    34,     0,    35,     0,     0,    36,
       0,     0,     0,     0,     0,     0,     0,     0,  1795,    37,
      38,     0,     0,     0,  3570,  1796,     0,     0,     0,    39,
    2115,    40,     0,     0,     0,     0,   965,     0,  3623,     0,
      41,     0,     0,     0,     0,  1797,    42,     0,     0,     0,
       0,     0,     0,     0,    43,     0,     0,     0,     0,    44,
      45,    46,     0,     0,     0,     0,   915,     0,     0,     0,
       0,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     966,   966,    47,     0,     0,     0,     0,     0,     0,    48,
       0,     0,     0,     0,  1799,     0,     0,     0,     0,     0,
       0,   915,   915,  3622,     0,     0,     0,     0,     0,    49,
       0,     0,  1800,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2414,     0,     0,     0,   915,     0,     0,
       0,     0,     0,    50,     0,     0,     0,   915,     0,   915,
       0,   915,     0,     0,     0,    51,     0,     0,     0,    52,
       0,     0,     0,     0,     0,     0,     0,    53,     0,     0,
       0,     0,     0,    54,     0,     0,     0,  1804,     0,     0,
       0,     0,     0,     0,   915,     0,  1805,     0,     0,   915,
      55,   915,     0,     0,     0,     0,     0,     0,    56,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    57,    58,    59,    60,     0,     0,
    2346,     0,     0,     0,     0,     0,   915,     0,     0,    61,
       0,     0,     0,     0,  3771,     0,     0,  1769,     0,     0,
       0,     0,  1770,     0,  1771,     0,  3780,  1772,  3787,  3788,
    3789,  3790,     0,  3792,  3793,     0,  1749,  1773,  1774,     0,
       0,     0,     0,     0,     0,  1810,    62,     0,     0,     0,
       0,   915,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1775,  2430,
       0,  -964,  -964,  1776,  1777,     0,     0,     0,     0,  1778,
       0,  -964,     0,     0,     0,     0,    63,  1779,     0,   915,
       0,     0,     0,  1780,  1781,     0,     0,  1782,     0,     0,
       0,  1811,  1812,  1813,  1814,     0,  1783,  3886,     0,  1815,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3892,  1784,   915,     0,     0,     0,  1816,     0,     0,  1817,
       0,     0,     0,     0,     0,  1785,     0,     0,     0,  1786,
       0,     0,     0,     0,     0,    64,     0,  1787,  1788,     0,
       0,     0,     0,     0,  1789,     0,     0,     0,     0,     0,
       0,     0,  1790,     0,     0,  1819,     0,     0,  1791,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1792,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   915,  1793,     0,     0,     0,     0,     0,  2414,     0,
    2414,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2414,  2414,  2414,  2414,     0,     0,     0,     0,     0,  2414,
    2414,  2414,  2414,  2414,  2414,     0,  2414,  2414,  2414,  2414,
       0,     0,  3981,  1794,  2414,  1795,     0,     0,     0,     0,
       0,     0,  1796,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1797,     0,     0,     0,     0,     0,     0,   966,
       0,     0,     0,     0,     0,     0,     0,  1822,     0,     0,
       0,     0,     0,     0,     0,  1798,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1825,  1826,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1799,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1800,
       0,     0,     0,  1801,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4034,     0,     0,     0,     0,
       0,  1802,     0,  4037,     0,     0,     0,  1803,     0,     0,
       0,     0,     0,     0,  1804,  3184,  3184,     0,     0,     0,
       0,     0,     0,  1805,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4067,  4068,     0,     0,     0,     0,     0,     0,   915,     0,
       0,     0,     0,     0,     0,  1806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4093,     0,     0,     0,
    1807,  1808,  1809,     0,     0,     0,  4104,     0,  4106,     0,
    4108,   915,     0,   915,     0,     0,   915,   915,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,  1810,     0,     0,   915,     0,     0,   915,     0,
       0,   915,   915,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   915,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   915,     0,     0,
       0,     0,     0,     0,     0,  2346,     0,  1769,  1811,  1812,
    1813,  1814,  1770,     0,  1771,     0,  1815,  1772,     0,     0,
       0,     0,   915,     0,     0,     0,  1749,  1773,  1774,  4570,
       0,     0,     0,  1816,     0,     0,  1817,     0,     0,     0,
       0,     0,   915,     0,     0,     0,     0,     0,     0,     0,
    4191,     0,     0,     0,  4251,     0,     0,     0,  1775,  1818,
       0,     0,     0,  1776,  1777,     0,     0,     0,     0,  1778,
       0,     0,  1819,     0,     0,     0,     0,  1779,   915,   915,
       0,     0,     0,  1780,  1781,     0,     0,  1782,  2289,     0,
       0,     0,     0,  4281,     0,     0,  1783,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1820,     0,     0,  1821,
       0,  1784,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1785,     0,     0,     0,  1786,
       0,     0,     0,     0,     0,     0,     0,  1787,  1788,     0,
       0,     0,     0,     0,  1789,     0,     0,     0,     0,     0,
       0,     0,  1790,     0,     0,     0,     0,     0,  1791,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,  1792,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1793,     0,  1822,  1823,  1824,     0,     0,     0,
    4296,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1825,  1826,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1794,     0,  1795,     0,     0,     0,     0,
       0,     0,  1796,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2414,     0,     0,     0,     0,     0,     0,
       0,     0,  1797,     0,   915,   915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1798,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3305,  3184,  3184,     0,     0,
    1770,     0,  1771,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1749,  1773,  1774,     0,     0,     0,
       0,  1799,     0,     0,     0,     0,     0,  4447,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1800,
       0,     0,     0,  1801,     0,     0,  1775,     0,     0,     0,
       0,  1776,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1779,     0,     0,     0,     0,
       0,  1780,  1781,     0,     0,  1782,     0,     0,     0,     0,
       0,  1802,     0,     0,  1783,     0,     0,  1803,     0,     0,
       0,     0,     0,     0,  1804,     0,     0,     0,     0,  1784,
       0,     0,     0,  1805,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1785,     0,     0,     0,  1786,     0,     0,
       0,     0,     0,     0,     0,  1787,     0,     0,     0,     0,
       0,     0,  3306,   915,     0,  1806,     0,  4477,     0,     0,
    1790,     0,     0,     0,     0,     0,  1791,     0,     0,     0,
    1807,  1808,  1809,     0,     0,   915,     0,   915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4491,     0,  2430,     0,     0,  4496,  4497,     0,     0,     0,
    1793,     0,  1810,     0,     0,     0,     0,     0,     0,  4504,
       0,     0,     0,     0,  4506,     0,     0,  4507,     0,     0,
    4508,  4509,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4521,  1795,     0,     0,     0,     0,     0,     0,
    1796,     0,     0,  1055,  1056,     0,     0,     0,  1811,  1812,
    1813,  1814,     0,     0,     0,     0,  1815,     0,     0,     0,
    1797,     0,  4617,  4618,     0,  4620,     0,     0,     0,  1057,
    1030,  4564,     0,  1816,   915,     0,  1817,     0,     0,     0,
    1058, -2113,     0,  1798,     0,     0,     0,     0,     0,     0,
       0,  2346,     0,     0,     0,     0,     0,     0,     0,  1818,
       0,     0,     0,     0,     0,  1059,   915,  1060,     0,     0,
       0,     0,  1819,     0,     0,     0,     0,  1061,     0,  1799,
       0,     0,     0,     0,     0,     0,     0,  4607,  4610,     0,
       0,     0,     0,     0,     0,     0,     0,  1800,     0,     0,
       0,  1801,     0,     0,     0,     0,  1820,     0,     0,  1821,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2105,  1062,     0,     0,     0,
       0,  1063,     0,     0,  1064,     0,     0,   915,     0,     0,
     915,  4698,     0,     0,  1065,  1803,     0,     0,     0,     0,
       0,     0,  1804,   915,     0,     0,     0,     0,     0,     0,
       0,  1805,     0,     0,     0,     0,  1066,     0,  1067,  4665,
       0,     0,     0,     0,     0,     0,     0,  1068,     0,  1069,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1822,  1823,  1824,     0,     0,     0,
       0,     0,     0,   915,     0,     0,     0,     0,  1807,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1825,  1826,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2414,  2414,  2414,  2414,     0,
    1810,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1070,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4746,  4747,     0,     0,     0,     0,     0,
       0,     0,     0,  1071,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1811,  1812,  1813,  1814,
       0,     0,     0,     0,  1815,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1816,     0,     0,  1817,     0,     0,     0,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1072,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1819,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1073,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1074,  1075,     0, -2109,
    1076,  1077,     0,     0,  1820,     0,     0,  1821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,  1078,     0,     0,  4879,  5208,     0,     0,     0,     0,
       0,     0,  5219,     0,     0,     0,  4888,  4251,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2346,     0,     0,     0,     0,   915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4865,  1079,  4867,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1080,     0,
       0,     0,  1822,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1825,  1826,     0,   915,
   -2865,     0,  3190,  3190,  1081,  5208,  5208,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -2113,     0,     0,  1082,     0,     0,     0,     0,     0,     0,
       0,  3818,  3819,     0,     0,  4947,     0,  3820,     0,  3821,
       0,  3822,  3823, -2109,     0,     0,     0,  2414,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3824,
       0,     0,   965,  4933,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4980,     0,     0,     0,     0,
       0, -2865,   915,     0,     0,     0,     0,     0,  1083,     0,
       0,     0,     0,     0,     0,  4941,     0,     0,     0,     0,
       0,     0,   915,     0,   915,     0,     0,     0,     0,  3825,
       0,     0,  3826,     0,   915,     0,  5208,  5208,     0,     0,
    3827,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3463,
       0,     0,     0,     0,     0,     0,     0,  3818,  3819,     0,
       0,     0,     0,  3820,     0,  3821,  3828,  3822,  3823,     0,
       0,     0,     0,  5031,     0,     0,  2430,     0,     0,  4993,
       0,     0,     0,     0,     0,  3824,     0,     0,     0,     0,
       0,     0,  4607,     0,  3829,     0,  3830,     0,   915,     0,
    5208,  5331,     0,     0,  5066,     0,     0,     0,     0,     0,
       0,     0,  3831,  3832,     0,  5208,   915,     0,     0,     0,
       0,  1084,  1085,     0,     0,     0,     0,     0,     0,  5208,
       0,     0,     0,     0,     0,  3825,     0,     0,  3826,     0,
       0,     0,  4607,     0,     0,     0,  3827,     0,     0,     0,
     915,     0,     0,     0,  3833,     0,     0,     0,     0,     0,
     915,  5208,     0,     0,     0,  3463,     0,  3834,  5100,     0,
       0,     0,     0,  5208,  5208,     0,     0,     0,     0,     0,
    5208,     0,  3828,     0,     0,     0,  3835,     0,     0,     0,
       0,     0,     0,  5208,     0,  3836,  3837,     0,  3838,     0,
     915,     0,     0,  5208,     0,     0,     0,     0,     0,     0,
    3829,     0,  3830,     0,     0,   915,     0,     0,     0,     0,
       0,     0,  5208,     0,  5208,  5142,     0,     0,  3831,  3832,
       0,     0,     0,  5208,  3839,  3840,  3841,     0,     0,  5208,
       0,  5208,     0,  5208,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3842,  3843,  3844,     0,     0,  5208,     0,
    3845,  3190,  3190,  3846,     0,     0,     0,     0,  2430,     0,
    3833,     0,     0,  5208,  5208,     0,     0,     0,     0,     0,
     915,  3847,  3848,  3834,     0,     0,     0,     0,     0,     0,
    5208,  5208,     0,     0,     0,  5208,     0,     0,     0,     0,
       0,     0,  3835,     0,     0,     0,     0,     0,     0,     0,
       0,  3836,  3837,     0,  3838,  3849,  3850,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3475,     0,     0,     0,     0,     0,  5266,     0,  5178,
    3839,  3840,  3841,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3842,
    3843,  3844,     0,     0,     0,     0,  3845,     0,     0,  3846,
       0,     0,     0,     0,     0,     0,  5236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3847,  3848,     0,
       0,     0,     0,  3851,     0,     0,     0,  3852,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3853,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3849,  3850,     0,     0,   966,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5281,     0,
       0,     0,     0,     0,     0,     0,     0,  3475,     0,     0,
    5345,  5346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3854,
       0,     0,  3855,     0,     0,  3856,  3857,  3858,  3859,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5313,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3851,
       0,     0,     0,  3852,     0,     0,     0,     0,  3860,  3861,
       0,     0,     0,     0,     0,  3853,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5360,     0,  5361,     0,     0,  3862,     0,     0,     0,
       0,     0,     0,  5369,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3854,     0,     0,  3855,     0,
       0,  3856,  3857,  3858,  3859,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5436,     0,     0,
       0,     0,     0,     0,  3860,  3861,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5441,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5462,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5493,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   243,   244,     0,   763,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   764,     0,   253,   254,   255,   256,
     765,   258,     0,   259,     0,     0,   766,   260,   767,   768,
     769,   261,   770,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   771,   772,   269,   270,  5571,
     271,   272,   773,   774,   274,     0,   275,   276,   277,   278,
     775,   280,     0,   776,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   777,   778,   301,
       0,     0,     0,   779,   302,   780,  2346,   303,   781,   782,
       0,   304,   305,   306,   783,   784,   785,     0,     0,     0,
       0,   786,   309,   787,     0,     0,   788,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   789,     0,   336,   337,   338,   339,   340,   790,
     791,   341,   342,     0,   343,   344,   345,   346,   347,   792,
       0,   348,   349,     0,     0,     0,   793,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   794,   356,   795,     0,
     358,     0,   359,     0,   796,     0,   360,   361,     0,   362,
     797,     0,   363,   364,     0,     0,     0,   798,   366,   367,
     368,   799,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   800,   373,   374,   375,   801,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   802,   386,   387,     0,     0,     0,     0,     0,
     803,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   804,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   805,
     415,   416,   417,   418,   806,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   807,   426,     0,     0,   808,
     428,   809,   429,     0,   430,   810,   811,   812,   813,   814,
     435,   436,   437,   438,   439,     0,   815,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   816,   817,   818,   447,
     448,     0,   819,   820,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   821,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   822,
     823,   470,   824,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   825,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   826,   827,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   828,     0,   829,   514,   515,
     516,   517,     0,   518,   830,   831,   520,   521,   522,   523,
       0,   832,   525,    42,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   833,   834,   554,   555,     0,     0,
     556,   557,   835,   559,   560,   561,   836,   837,   562,   563,
     564,   565,   838,   566,   567,     0,    49,   568,   569,   570,
     571,     0,   839,   572,   573,     0,   840,   841,   842,   843,
       0,     0,     0,     0,     0,   578,   579,     0,   844,   845,
     846,   581,   582,     0,   847,   583,   584,   848,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   849,   593,     0,     0,   850,   851,   852,   594,
    1355,   595,     0,     0,   596,   854,     0,   855,   597,     0,
     598,   599,   856,   857,     0,     0,     0,    55,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     858,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   859,   860,     0,   616,   617,
     618,   861,   619,   620,   621,     0,   622,   862,   863,   623,
     864,   624,     0,   865,   866,   867,   868,   869,   625,   626,
       0,   870,   627,   871,   628,   872,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   873,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   874,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,     0,
       0,     0,     0,     0,   875,   876,     0,     0,     0,     0,
     878,     0,   879,     0,     0,     0,   880,     0,     0,     0,
     881,   882,   243,   244,     0,   763,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     764,     0,   253,   254,   255,   256,   765,   258,     0,   259,
       0,     0,   766,   260,   767,   768,   769,   261,   770,     0,
     262,   263,   264,  2025,   265,     0,   266,   267,     0,     0,
     268,   771,   772,   269,   270,     0,   271,   272,   773,   774,
     274,     0,   275,   276,   277,   278,   775,   280,     0,   776,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   777,   778,   301,     0,     0,     0,   779,
     302,   780,     0,   303,   781,   782,     0,   304,   305,   306,
     783,   784,   785,     0,     0,     0,     0,   786,   309,   787,
       0,     0,   788,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   789,     0,
     336,   337,   338,   339,   340,   790,   791,   341,   342,     0,
     343,   344,   345,   346,   347,   792,     0,   348,   349,     0,
       0,     0,   793,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   794,   356,   795,     0,   358,     0,   359,     0,
     796,     0,   360,   361,     0,   362,   797,     0,   363,   364,
       0,     0,     0,   798,   366,   367,   368,   799,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   800,   373,
     374,   375,   801,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,  2026,   385,     0,   802,   386,
     387,     0,     0,     0,     0,     0,   803,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   804,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   805,   415,   416,   417,   418,
     806,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   807,   426,     0,     0,   808,   428,   809,   429,     0,
     430,   810,   811,   812,   813,   814,   435,   436,   437,   438,
     439,     0,   815,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   816,   817,   818,   447,   448,     0,   819,   820,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   821,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   822,   823,   470,   824,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   825,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   826,   827,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   828,     0,   829,   514,   515,   516,   517,     0,   518,
     830,   831,   520,   521,   522,   523,     0,   832,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     833,   834,   554,   555,     0,     0,   556,   557,   835,   559,
     560,   561,   836,   837,   562,   563,   564,   565,   838,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   839,   572,
     573,     0,   840,   841,   842,   843,     0,     0,     0,     0,
    2027,   578,   579,     0,   844,   845,   846,   581,   582,     0,
     847,   583,   584,   848,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   849,   593,
       0,     0,   850,   851,   852,   594,   853,   595,     0,     0,
     596,   854,     0,   855,   597,     0,   598,   599,   856,   857,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   858,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   859,   860,     0,   616,   617,   618,   861,   619,   620,
     621,     0,   622,   862,   863,   623,   864,   624,     0,   865,
     866,   867,   868,   869,   625,   626,     0,   870,   627,   871,
     628,   872,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   873,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     874,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,     0,     0,     0,     0,     0,
     875,   876,     0,     0,     0,     0,   878,     0,   879,     0,
       0,     0,   880,     0,     0,     0,   881,   882,   243,   244,
       0,   763,   246,   247,   248,   249,  2283,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   764,     0,   253,   254,
     255,   256,   765,   258,     0,   259,     0,     0,  2284,   260,
     767,   768,   769,   261,   770,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   771,   772,   269,
     270,     0,   271,   272,   773,   774,   274,     0,   275,   276,
     277,   278,   775,   280,     0,   776,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   777,
     778,   301,     0,     0,     0,   779,   302,   780,     0,   303,
     781,   782,     0,   304,   305,   306,   783,   784,   785,     0,
       0,     0,     0,   786,   309,   787,     0,     0,  2285,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   789,     0,   336,   337,   338,   339,
     340,   790,   791,   341,   342,     0,   343,   344,   345,   346,
     347,   792,     0,   348,   349,     0,     0,     0,   793,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   794,   356,
     795,     0,   358,     0,   359,     0,   796,     0,   360,   361,
       0,   362,   797,     0,   363,   364,     0,     0,     0,   798,
     366,   367,   368,   799,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   800,   373,   374,   375,   801,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   802,   386,   387,     0,     0,     0,
       0,     0,   803,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   804,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   805,   415,   416,   417,   418,   806,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   807,   426,     0,
       0,   808,   428,   809,   429,     0,   430,   810,   811,   812,
     813,   814,   435,   436,   437,   438,   439,     0,   815,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   816,   817,
     818,   447,   448,     0,   819,   820,   449,     0,   450,   451,
    2286,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   821,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   822,   823,   470,   824,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   825,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   826,   827,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   828,     0,   829,
     514,   515,   516,   517,     0,   518,  2287,   831,   520,   521,
     522,   523,     0,   832,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   833,   834,   554,   555,
       0,     0,   556,   557,   835,   559,   560,   561,   836,   837,
     562,   563,   564,   565,   838,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   839,   572,   573,     0,   840,   841,
     842,   843,     0,     0,     0,     0,     0,   578,   579,     0,
     844,   845,   846,   581,   582,     0,   847,   583,   584,   848,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   849,   593,     0,     0,   850,   851,
     852,   594,   853,   595,     0,     0,   596,   854,     0,   855,
     597,     0,   598,   599,   856,   857,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   858,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   859,   860,     0,
     616,   617,   618,   861,   619,   620,   621,     0,   622,   862,
     863,   623,   864,   624,     0,   865,   866,   867,   868,   869,
     625,   626,     0,   870,   627,   871,   628,   872,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,  2288,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   873,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   874,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,     0,     0,     0,     0,     0,   875,   876,     0,     0,
       0,     0,   878,     0,   879,     0,     0,     0,   880,     0,
       0,     0,   881,   882,   243,   244,     0,   763,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   764,     0,   253,   254,   255,   256,   765,   258,
       0,   259,     0,     0,   766,   260,   767,   768,   769,   261,
     770,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   771,   772,   269,   270,     0,   271,   272,
     773,   774,   274,     0,   275,   276,   277,   278,   775,   280,
       0,   776,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   777,   778,   301,     0,     0,
       0,   779,   302,   780,     0,   303,   781,   782,     0,   304,
     305,   306,   783,   784,   785,     0,     0,     0,     0,   786,
     309,   787,     0,     0,   788,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     789,     0,   336,   337,   338,   339,   340,   790,   791,   341,
     342,     0,   343,   344,   345,   346,   347,   792,     0,   348,
     349,     0,     0,     0,   793,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   794,   356,   795,     0,   358,     0,
     359,     0,   796,     0,   360,   361,     0,   362,   797,     0,
     363,   364,     0,     0,     0,   798,   366,   367,   368,   799,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     800,   373,   374,   375,   801,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     802,   386,   387,     0,     0,     0,     0,     0,   803,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   804,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   805,   415,   416,
     417,   418,   806,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   807,   426,     0,     0,   808,   428,   809,
     429,     0,   430,   810,   811,   812,   813,   814,   435,   436,
     437,   438,   439,     0,   815,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   816,   817,   818,   447,   448,     0,
     819,   820,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   821,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   822,   823,   470,
     824,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   825,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   826,   827,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   828,     0,   829,   514,   515,   516,   517,
       0,   518,   830,   831,   520,   521,   522,   523,     0,   832,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   833,   834,   554,   555,     0,     0,   556,   557,
     835,   559,   560,   561,   836,   837,   562,   563,   564,   565,
     838,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     839,   572,   573,     0,   840,   841,   842,   843,     0,     0,
       0,     0,     0,   578,   579,     0,   844,   845,   846,   581,
     582,     0,   847,   583,   584,   848,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     849,   593,     0,     0,   850,   851,   852,   594,   853,   595,
       0,     0,   596,   854,     0,   855,   597,     0,   598,   599,
     856,   857,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   858,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   859,   860,     0,   616,   617,   618,   861,
     619,   620,   621,     0,   622,   862,   863,   623,   864,   624,
       0,   865,   866,   867,   868,   869,   625,   626,     0,   870,
     627,   871,   628,   872,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   873,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   874,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,     0,     0,     0,
       0,     0,   875,   876,   877,     0,     0,     0,   878,     0,
     879,     0,     0,     0,   880,     0,     0,     0,   881,   882,
     243,   244,     0,   763,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   764,     0,
     253,   254,   255,   256,   765,   258,     0,   259,     0,     0,
     766,   260,   767,   768,   769,   261,   770,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   771,
     772,   269,   270,     0,   271,   272,   773,   774,   274,     0,
     275,   276,   277,   278,   775,   280,     0,   776,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   777,   778,   301,     0,     0,     0,   779,   302,   780,
       0,   303,   781,   782,     0,   304,   305,   306,   783,   784,
     785,     0,     0,     0,     0,   786,   309,   787,     0,     0,
     788,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   789,     0,   336,   337,
     338,   339,   340,   790,   791,   341,   342,     0,   343,   344,
     345,   346,   347,   792,     0,   348,   349,     0,     0,     0,
     793,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     794,   356,   795,     0,   358,     0,   359,     0,   796,     0,
     360,   361,     0,   362,   797,     0,   363,   364,     0,     0,
       0,   798,   366,   367,   368,   799,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   800,   373,   374,   375,
     801,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   802,   386,   387,     0,
       0,     0,     0,     0,   803,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   804,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   805,   415,   416,   417,   418,   806,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   807,
     426,     0,     0,   808,   428,   809,   429,     0,   430,   810,
     811,   812,   813,   814,   435,   436,   437,   438,   439,     0,
     815,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     816,   817,   818,   447,   448,     0,   819,   820,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   821,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   822,   823,   470,   824,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   825,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   826,
     827,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   828,
       0,   829,   514,   515,   516,   517,     0,   518,   830,   831,
     520,   521,   522,   523,     0,   832,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   833,   834,
     554,   555,     0,     0,   556,   557,   835,   559,   560,   561,
     836,   837,   562,   563,   564,   565,   838,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   839,   572,   573,     0,
     840,   841,   842,   843,     0,     0,     0,     0,     0,   578,
     579,     0,   844,   845,   846,   581,   582,     0,   847,   583,
     584,   848,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   849,   593,     0,     0,
     850,   851,   852,   594,   853,   595,     0,     0,   596,   854,
       0,   855,   597,     0,   598,   599,   856,   857,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   858,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   859,
     860,     0,   616,   617,   618,   861,   619,   620,   621,     0,
     622,   862,   863,   623,   864,   624,     0,   865,   866,   867,
     868,   869,   625,   626,     0,   870,   627,   871,   628,   872,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     873,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   874,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,     0,     0,     0,     0,     0,   875,   876,
    2750,     0,     0,     0,   878,     0,   879,     0,     0,     0,
     880,     0,     0,     0,   881,   882,   243,   244,     0,   763,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   764,     0,   253,   254,   255,   256,
     765,   258,     0,   259,     0,     0,   766,   260,   767,   768,
     769,   261,   770,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   771,   772,   269,   270,     0,
     271,   272,   773,   774,   274,     0,   275,   276,   277,   278,
     775,   280,     0,   776,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   777,   778,   301,
       0,     0,     0,   779,   302,   780,     0,   303,   781,   782,
       0,   304,   305,   306,   783,   784,   785,     0,     0,     0,
       0,   786,   309,   787,     0,     0,   788,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   789,     0,   336,   337,   338,   339,   340,   790,
     791,   341,   342,     0,   343,   344,   345,   346,   347,   792,
       0,   348,   349,     0,     0,     0,   793,   351,  2806,   352,
       0,     0,     0,   353,     0,   354,   794,   356,   795,     0,
     358,     0,   359,     0,   796,     0,   360,   361,     0,   362,
     797,     0,   363,   364,     0,     0,     0,   798,   366,   367,
     368,   799,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   800,   373,   374,   375,   801,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   802,   386,   387,     0,     0,     0,     0,     0,
     803,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   804,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   805,
     415,   416,   417,   418,   806,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   807,   426,     0,     0,   808,
     428,   809,   429,     0,   430,   810,   811,   812,   813,   814,
     435,   436,   437,   438,   439,     0,   815,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   816,   817,   818,   447,
     448,     0,   819,   820,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   821,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   822,
     823,   470,   824,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   825,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   826,   827,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   828,     0,   829,   514,   515,
     516,   517,     0,   518,   830,   831,   520,   521,   522,   523,
       0,   832,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   833,   834,   554,   555,     0,     0,
     556,   557,   835,   559,   560,   561,   836,   837,   562,   563,
     564,   565,   838,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   839,   572,   573,     0,   840,   841,   842,   843,
       0,     0,     0,     0,     0,   578,   579,     0,   844,   845,
     846,   581,   582,     0,   847,   583,   584,   848,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   849,   593,     0,     0,   850,   851,   852,   594,
     853,   595,     0,     0,   596,   854,     0,   855,   597,     0,
     598,   599,   856,   857,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     858,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   859,   860,     0,   616,   617,
     618,   861,   619,   620,   621,     0,   622,   862,   863,   623,
     864,   624,     0,   865,   866,   867,   868,   869,   625,   626,
       0,   870,   627,   871,   628,   872,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   873,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   874,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,     0,
       0,     0,     0,     0,   875,   876,     0,     0,     0,     0,
     878,     0,   879,     0,     0,     0,   880,     0,     0,     0,
     881,   882,   243,   244,     0,   763,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     764,     0,   253,   254,   255,   256,   765,   258,     0,   259,
       0,     0,   766,   260,   767,   768,   769,   261,   770,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   771,   772,   269,   270,     0,   271,   272,   773,   774,
     274,     0,   275,   276,   277,   278,   775,   280,     0,   776,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   777,   778,   301,     0,     0,     0,   779,
     302,   780,     0,   303,   781,   782,     0,   304,   305,   306,
     783,   784,   785,     0,     0,     0,     0,   786,   309,   787,
       0,     0,   788,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   789,     0,
     336,   337,   338,   339,   340,   790,   791,   341,   342,     0,
     343,   344,   345,   346,   347,   792,     0,   348,   349,     0,
       0,     0,   793,   351,  2808,   352,     0,     0,     0,   353,
       0,   354,   794,   356,   795,     0,   358,     0,   359,     0,
     796,     0,   360,   361,     0,   362,   797,     0,   363,   364,
       0,     0,     0,   798,   366,   367,   368,   799,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   800,   373,
     374,   375,   801,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   802,   386,
     387,     0,     0,     0,     0,     0,   803,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   804,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   805,   415,   416,   417,   418,
     806,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   807,   426,     0,     0,   808,   428,   809,   429,     0,
     430,   810,   811,   812,   813,   814,   435,   436,   437,   438,
     439,     0,   815,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   816,   817,   818,   447,   448,     0,   819,   820,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   821,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   822,   823,   470,   824,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   825,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   826,   827,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   828,     0,   829,   514,   515,   516,   517,     0,   518,
     830,   831,   520,   521,   522,   523,     0,   832,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     833,   834,   554,   555,     0,     0,   556,   557,   835,   559,
     560,   561,   836,   837,   562,   563,   564,   565,   838,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   839,   572,
     573,     0,   840,   841,   842,   843,     0,     0,     0,     0,
       0,   578,   579,     0,   844,   845,   846,   581,   582,     0,
     847,   583,   584,   848,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   849,   593,
       0,     0,   850,   851,   852,   594,   853,   595,     0,     0,
     596,   854,     0,   855,   597,     0,   598,   599,   856,   857,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   858,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   859,   860,     0,   616,   617,   618,   861,   619,   620,
     621,     0,   622,   862,   863,   623,   864,   624,     0,   865,
     866,   867,   868,   869,   625,   626,     0,   870,   627,   871,
     628,   872,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   873,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     874,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,     0,     0,     0,     0,     0,
     875,   876,     0,     0,     0,     0,   878,     0,   879,     0,
       0,     0,   880,     0,     0,     0,   881,   882,   243,   244,
       0,   763,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   764,     0,   253,   254,
     255,   256,   765,   258,     0,   259,     0,     0,   766,   260,
     767,   768,   769,   261,   770,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   771,   772,   269,
     270,     0,   271,   272,   773,   774,   274,     0,   275,   276,
     277,   278,   775,   280,     0,   776,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   777,
     778,   301,     0,     0,     0,   779,   302,   780,     0,   303,
     781,   782,     0,   304,   305,   306,   783,   784,   785,     0,
       0,     0,     0,   786,   309,   787,     0,     0,   788,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   789,     0,   336,   337,   338,   339,
     340,   790,   791,   341,   342,     0,   343,   344,   345,   346,
     347,   792,     0,   348,   349,     0,     0,     0,   793,   351,
    2810,   352,     0,     0,     0,   353,     0,   354,   794,   356,
     795,     0,   358,     0,   359,     0,   796,     0,   360,   361,
       0,   362,   797,     0,   363,   364,     0,     0,     0,   798,
     366,   367,   368,   799,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   800,   373,   374,   375,   801,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   802,   386,   387,     0,     0,     0,
       0,     0,   803,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   804,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   805,   415,   416,   417,   418,   806,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   807,   426,     0,
       0,   808,   428,   809,   429,     0,   430,   810,   811,   812,
     813,   814,   435,   436,   437,   438,   439,     0,   815,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   816,   817,
     818,   447,   448,     0,   819,   820,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   821,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   822,   823,   470,   824,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   825,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   826,   827,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   828,     0,   829,
     514,   515,   516,   517,     0,   518,   830,   831,   520,   521,
     522,   523,     0,   832,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   833,   834,   554,   555,
       0,     0,   556,   557,   835,   559,   560,   561,   836,   837,
     562,   563,   564,   565,   838,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   839,   572,   573,     0,   840,   841,
     842,   843,     0,     0,     0,     0,     0,   578,   579,     0,
     844,   845,   846,   581,   582,     0,   847,   583,   584,   848,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   849,   593,     0,     0,   850,   851,
     852,   594,   853,   595,     0,     0,   596,   854,     0,   855,
     597,     0,   598,   599,   856,   857,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   858,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   859,   860,     0,
     616,   617,   618,   861,   619,   620,   621,     0,   622,   862,
     863,   623,   864,   624,     0,   865,   866,   867,   868,   869,
     625,   626,     0,   870,   627,   871,   628,   872,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   873,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   874,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,     0,     0,     0,     0,     0,   875,   876,     0,     0,
       0,     0,   878,     0,   879,     0,     0,     0,   880,     0,
       0,     0,   881,   882,   243,   244,     0,   763,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   764,     0,   253,   254,   255,   256,   765,   258,
       0,   259,     0,     0,   766,   260,   767,   768,   769,   261,
     770,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   771,   772,   269,   270,     0,   271,   272,
     773,   774,   274,     0,   275,   276,   277,   278,   775,   280,
       0,   776,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   777,   778,   301,     0,     0,
       0,   779,   302,   780,     0,   303,   781,   782,     0,   304,
     305,   306,   783,   784,   785,     0,     0,     0,     0,   786,
     309,   787,     0,     0,   788,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     789,     0,   336,   337,   338,   339,   340,   790,   791,   341,
     342,     0,   343,   344,   345,   346,   347,   792,     0,   348,
     349,     0,     0,     0,   793,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   794,   356,   795,     0,   358,     0,
     359,     0,   796,     0,   360,   361,     0,   362,   797,     0,
     363,   364,     0,     0,     0,   798,   366,   367,   368,   799,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     800,   373,   374,   375,   801,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     802,   386,   387,     0,     0,     0,     0,     0,   803,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   804,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   805,   415,   416,
     417,   418,   806,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   807,   426,     0,     0,   808,   428,   809,
     429,     0,   430,   810,   811,   812,   813,   814,   435,   436,
     437,   438,   439,     0,   815,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   816,   817,   818,   447,   448,     0,
     819,   820,   449,     0,   450,   451,  4563,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   821,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   822,   823,   470,
     824,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   825,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   826,   827,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   828,     0,   829,   514,   515,   516,   517,
       0,   518,   830,   831,   520,   521,   522,   523,     0,   832,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   833,   834,   554,   555,     0,     0,   556,   557,
     835,   559,   560,   561,   836,   837,   562,   563,   564,   565,
     838,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     839,   572,   573,     0,   840,   841,   842,   843,     0,     0,
       0,     0,     0,   578,   579,     0,   844,   845,   846,   581,
     582,     0,   847,   583,   584,   848,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     849,   593,     0,     0,   850,   851,   852,   594,   853,   595,
       0,     0,   596,   854,     0,   855,   597,     0,   598,   599,
     856,   857,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   858,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   859,   860,     0,   616,   617,   618,   861,
     619,   620,   621,     0,   622,   862,   863,   623,   864,   624,
       0,   865,   866,   867,   868,   869,   625,   626,     0,   870,
     627,   871,   628,   872,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   873,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   874,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,     0,     0,     0,
       0,     0,   875,   876,     0,     0,     0,     0,   878,     0,
     879,     0,     0,     0,   880,     0,     0,     0,   881,   882,
     243,   244,     0,   763,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   764,     0,
     253,   254,   255,   256,   765,   258,     0,   259,     0,     0,
     766,   260,   767,   768,   769,   261,   770,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   771,
     772,   269,   270,     0,   271,   272,   773,   774,   274,     0,
     275,   276,   277,   278,   775,   280,     0,   776,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   777,   778,   301,     0,     0,     0,   779,   302,   780,
       0,   303,   781,   782,     0,   304,   305,   306,   783,   784,
     785,     0,     0,     0,     0,   786,   309,   787,     0,     0,
     788,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   789,     0,   336,   337,
     338,   339,   340,   790,   791,   341,   342,     0,   343,   344,
     345,   346,   347,   792,     0,   348,   349,     0,     0,     0,
     793,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     794,   356,   795,     0,   358,     0,   359,     0,   796,     0,
     360,   361,     0,   362,   797,     0,   363,   364,     0,     0,
       0,   798,   366,   367,   368,   799,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   800,   373,   374,   375,
     801,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   802,   386,   387,     0,
       0,     0,     0,     0,   803,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   804,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   805,   415,   416,   417,   418,   806,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   807,
     426,     0,     0,   808,   428,   809,   429,     0,   430,   810,
     811,   812,   813,   814,   435,   436,   437,   438,   439,     0,
     815,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     816,   817,   818,   447,   448,     0,   819,   820,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   821,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   822,   823,   470,   824,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   825,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   826,
     827,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   828,
       0,   829,   514,   515,   516,   517,     0,   518,   830,   831,
     520,   521,   522,   523,     0,   832,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   833,   834,
     554,   555,     0,     0,   556,   557,   835,   559,   560,   561,
     836,   837,   562,   563,   564,   565,   838,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   839,   572,   573,     0,
     840,   841,   842,   843,     0,     0,     0,     0,     0,   578,
     579,     0,   844,   845,   846,   581,   582,     0,   847,   583,
     584,   848,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   849,   593,     0,     0,
     850,   851,   852,   594,   853,   595,     0,     0,   596,   854,
       0,   855,   597,     0,   598,   599,   856,   857,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   858,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   859,
     860,     0,   616,   617,   618,   861,   619,   620,   621,     0,
     622,   862,   863,   623,   864,   624,     0,   865,   866,   867,
     868,   869,   625,   626,     0,   870,   627,   871,   628,   872,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     873,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   874,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,     0,     0,     0,     0,     0,   875,   876,
       0,     0,     0,     0,   878,     0,   879,     0,     0,     0,
     880,     0,     0,     0,   881,   882,   243,   244,     0,   763,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   764,     0,   253,   254,   255,   256,
     765,   258,     0,   259,     0,     0,   766,   260,   767,   768,
     769,   261,   770,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   771,   772,   269,   270,     0,
     271,   272,   773,   774,   274,     0,   275,   276,   277,   278,
     775,   280,     0,   776,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   777,   778,   301,
       0,     0,     0,   779,   302,   780,     0,   303,   781,   782,
       0,   304,   305,   306,   783,   784,   785,     0,     0,     0,
       0,   786,   309,   787,     0,     0,   788,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   789,     0,   336,   337,   338,   339,   340,   790,
     791,   341,   342,     0,   343,   344,   345,   346,   347,   792,
       0,   348,   349,     0,     0,     0,   793,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   794,   356,   795,     0,
     358,     0,   359,     0,   796,     0,   360,   361,     0,   362,
     797,     0,   363,   364,     0,     0,     0,   798,   366,   367,
     368,   799,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   800,   373,   374,   375,   801,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   802,   386,   387,     0,     0,     0,     0,     0,
     803,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   804,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   805,
     415,   416,   417,   418,   806,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   807,   426,     0,     0,   808,
     428,   809,   429,     0,   430,   810,   811,   812,   813,   814,
     435,   436,   437,   438,   439,     0,   815,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   816,   817,   818,   447,
     448,     0,   819,   820,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   821,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   822,
     823,   470,   824,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   825,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   826,   827,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   828,     0,   829,   514,   515,
     516,   517,     0,   518,   830,   831,   520,   521,   522,   523,
       0,   832,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   833,   834,   554,   555,     0,     0,
     556,   557,   835,   559,   560,   561,   836,   837,   562,   563,
     564,   565,   838,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   839,   572,   573,     0,   840,   841,   842,   843,
       0,     0,     0,     0,     0,   578,   579,     0,   844,   845,
     846,   581,   582,     0,   847,   583,   584,   848,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   849,   593,     0,     0,   850,   851,   852,   594,
     853,   595,     0,     0,   596,   854,     0,   855,   597,     0,
     598,   599,   856,   857,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     858,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   859,   860,     0,   616,   617,
     618,   861,   619,   620,   621,     0,   622,   862,   863,   623,
     864,   624,     0,   865,   866,   867,   868,   869,   625,   626,
       0,   870,   627,   871,   628,   872,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   873,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   874,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,     0,
       0,     0,     0,     0,   875,   876,     0,     0,     0,     0,
     878,     0,  1278,     0,     0,     0,   880,     0,     0,     0,
     881,   882,   243,   244,     0,   763,   246,   247,   248,   249,
    2081,     0,   250,     0,     0,     0,     0,  2082,     0,     0,
     764,     0,   253,   254,   255,   256,   765,   258,     0,   259,
       0,     0,   766,   260,   767,   768,   769,   261,   770,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   771,   772,   269,   270,     0,   271,   272,   773,   774,
     274,     0,   275,   276,   277,   278,   775,   280,     0,   776,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   777,   778,   301,     0,     0,     0,   779,
     302,   780,     0,   303,   781,   782,     0,   304,   305,   306,
     783,   784,   785,     0,     0,     0,     0,   786,   309,   787,
       0,     0,   788,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   789,     0,
     336,   337,   338,   339,   340,   790,   791,   341,   342,     0,
     343,   344,   345,   346,   347,   792,     0,   348,   349,     0,
       0,     0,   793,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   794,   356,   795,     0,   358,     0,   359,     0,
     796,     0,   360,   361,     0,   362,   797,     0,   363,   364,
       0,     0,     0,   798,   366,   367,   368,   799,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   800,   373,
     374,   375,   801,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   802,   386,
     387,     0,     0,     0,     0,     0,   803,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   804,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   805,   415,   416,   417,   418,
     806,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   807,   426,     0,     0,   808,   428,   809,   429,     0,
     430,   810,   811,   812,   813,   814,   435,   436,   437,   438,
     439,     0,   815,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   816,     0,   818,   447,   448,     0,   819,   820,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   821,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   822,   823,   470,   824,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   825,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   826,   827,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   828,     0,   829,   514,   515,   516,   517,     0,   518,
     830,   831,   520,   521,   522,   523,     0,   832,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     833,   834,   554,   555,     0,     0,   556,   557,   835,   559,
     560,   561,   836,   837,   562,   563,   564,   565,   838,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   839,   572,
     573,     0,   840,   841,   842,   843,     0,     0,     0,     0,
       0,   578,   579,     0,   844,   845,   846,   581,   582,     0,
     847,   583,   584,   848,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   849,   593,
       0,     0,   850,   851,   852,   594,   853,   595,     0,     0,
     596,   854,     0,   855,   597,     0,   598,   599,   856,   857,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   858,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   859,   860,     0,   616,   617,   618,   861,   619,   620,
     621,     0,   622,   862,   863,   623,   864,   624,     0,   865,
     866,   867,   868,   869,   625,   626,     0,   870,   627,   871,
     628,   872,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   873,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     874,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,     0,     0,     0,     0,     0,
     875,   876,     0,     0,     0,     0,   878,     0,   879,     0,
       0,     0,   880,     0,     0,     0,   881,   882,   243,   244,
       0,   763,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   764,     0,   253,   254,
     255,   256,   765,   258,     0,   259,     0,     0,   766,   260,
     767,   768,   769,   261,   770,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   771,   772,   269,
     270,     0,   271,   272,   773,   774,   274,     0,   275,   276,
     277,   278,   775,   280,     0,   776,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   777,
     778,   301,     0,     0,     0,   779,   302,   780,     0,   303,
     781,   782,     0,   304,   305,   306,   783,   784,   785,     0,
       0,     0,     0,   786,   309,   787,     0,     0,  2345,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   789,     0,   336,   337,   338,   339,
     340,   790,   791,   341,   342,     0,   343,   344,   345,   346,
     347,   792,     0,   348,   349,     0,     0,     0,   793,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   794,   356,
     795,     0,   358,     0,   359,     0,   796,     0,   360,   361,
       0,   362,   797,     0,   363,   364,     0,     0,     0,   798,
     366,   367,   368,   799,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   800,   373,   374,   375,   801,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   802,   386,   387,     0,     0,     0,
       0,     0,   803,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   804,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   805,   415,   416,   417,   418,   806,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   807,   426,     0,
       0,   808,   428,   809,   429,     0,   430,   810,   811,   812,
     813,   814,   435,   436,   437,   438,   439,     0,   815,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   816,   817,
     818,   447,   448,     0,   819,   820,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   821,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   822,   823,   470,   824,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   825,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   826,   827,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   828,     0,   829,
     514,   515,   516,   517,     0,   518,   830,   831,   520,   521,
     522,   523,     0,   832,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   833,   834,   554,   555,
       0,     0,   556,   557,   835,   559,   560,   561,   836,   837,
     562,   563,   564,   565,   838,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   839,   572,   573,     0,   840,   841,
     842,   843,     0,     0,     0,     0,     0,   578,   579,     0,
     844,   845,   846,   581,   582,     0,   847,   583,   584,   848,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   849,   593,     0,     0,   850,   851,
     852,   594,   853,   595,     0,     0,   596,   854,     0,   855,
     597,     0,   598,   599,   856,   857,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   858,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   859,   860,     0,
     616,   617,   618,   861,   619,   620,   621,     0,   622,   862,
     863,   623,   864,   624,     0,   865,   866,   867,   868,   869,
     625,   626,     0,   870,   627,   871,   628,   872,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   873,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   874,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,     0,     0,     0,     0,     0,   875,   876,     0,     0,
       0,     0,   878,     0,   879,     0,     0,     0,   880,     0,
       0,     0,   881,   882,   243,   244,     0,   763,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   764,     0,   253,   254,   255,   256,   765,   258,
       0,   259,     0,     0,   766,   260,   767,   768,   769,   261,
     770,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   771,   772,   269,   270,     0,   271,   272,
     773,   774,   274,     0,   275,   276,   277,   278,   775,   280,
       0,   776,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   777,   778,   301,     0,     0,
       0,   779,   302,   780,     0,   303,   781,   782,     0,   304,
     305,   306,   783,   784,   785,     0,     0,     0,     0,   786,
     309,   787,     0,     0,   788,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     789,     0,   336,   337,   338,   339,   340,   790,   791,   341,
     342,     0,   343,   344,   345,   346,   347,   792,     0,   348,
     349,     0,     0,     0,   793,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   794,   356,   795,     0,   358,     0,
     359,     0,   796,     0,   360,   361,     0,   362,   797,     0,
     363,   364,     0,     0,     0,   798,   366,   367,   368,   799,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     800,   373,   374,   375,  3446,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     802,   386,   387,     0,     0,     0,     0,     0,   803,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   804,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   805,   415,   416,
     417,   418,   806,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   807,   426,     0,     0,   808,   428,   809,
     429,     0,   430,   810,   811,   812,   813,   814,   435,   436,
     437,   438,   439,     0,   815,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   816,   817,   818,   447,   448,     0,
     819,   820,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   821,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   822,   823,   470,
     824,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   825,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   826,   827,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   828,     0,   829,   514,   515,   516,   517,
       0,   518,   830,   831,   520,   521,   522,   523,     0,   832,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   833,   834,   554,   555,     0,     0,   556,   557,
     835,   559,   560,   561,   836,   837,   562,   563,   564,   565,
     838,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     839,   572,   573,     0,   840,   841,   842,   843,     0,     0,
       0,     0,     0,   578,   579,     0,   844,   845,   846,   581,
     582,     0,   847,   583,   584,   848,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     849,   593,     0,     0,   850,   851,   852,   594,   853,   595,
       0,     0,   596,   854,     0,   855,   597,     0,   598,   599,
     856,   857,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   858,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   859,   860,     0,   616,   617,   618,   861,
     619,   620,   621,     0,   622,   862,   863,   623,   864,   624,
       0,   865,   866,   867,   868,   869,   625,   626,     0,   870,
     627,   871,   628,   872,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   873,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   874,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,     0,     0,     0,
       0,     0,   875,   876,     0,     0,     0,     0,   878,     0,
     879,     0,     0,     0,   880,     0,     0,     0,   881,   882,
     243,   244,     0,   763,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   764,     0,
     253,   254,   255,   256,   765,   258,     0,   259,     0,     0,
     766,   260,   767,   768,   769,   261,   770,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   771,
     772,   269,   270,     0,   271,   272,   773,   774,   274,     0,
     275,   276,   277,   278,   775,   280,     0,   776,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   777,   778,   301,     0,     0,     0,   779,   302,   780,
       0,   303,   781,   782,     0,   304,   305,   306,   783,   784,
     785,     0,     0,     0,     0,   786,   309,   787,     0,     0,
     788,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   789,     0,   336,   337,
     338,   339,   340,   790,   791,   341,   342,     0,   343,   344,
     345,   346,   347,   792,     0,   348,   349,     0,     0,     0,
     793,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     794,   356,   795,     0,   358,     0,   359,     0,   796,     0,
     360,   361,     0,   362,   797,     0,   363,   364,     0,     0,
       0,   798,   366,   367,   368,   799,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   800,   373,   374,   375,
    3517,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   802,   386,   387,     0,
       0,     0,     0,     0,   803,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   804,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   805,   415,   416,   417,   418,   806,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   807,
     426,     0,     0,   808,   428,   809,   429,     0,   430,   810,
     811,   812,   813,   814,   435,   436,   437,   438,   439,     0,
     815,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     816,   817,   818,   447,   448,     0,   819,   820,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   821,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   822,   823,   470,   824,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   825,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   826,
     827,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   828,
       0,   829,   514,   515,   516,   517,     0,   518,   830,   831,
     520,   521,   522,   523,     0,   832,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   833,   834,
     554,   555,     0,     0,   556,   557,   835,   559,   560,   561,
     836,   837,   562,   563,   564,   565,   838,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   839,   572,   573,     0,
     840,   841,   842,   843,     0,     0,     0,     0,     0,   578,
     579,     0,   844,   845,   846,   581,   582,     0,   847,   583,
     584,   848,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   849,   593,     0,     0,
     850,   851,   852,   594,   853,   595,     0,     0,   596,   854,
       0,   855,   597,     0,   598,   599,   856,   857,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   858,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   859,
     860,     0,   616,   617,   618,   861,   619,   620,   621,     0,
     622,   862,   863,   623,   864,   624,     0,   865,   866,   867,
     868,   869,   625,   626,     0,   870,   627,   871,   628,   872,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     873,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   874,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,     0,     0,     0,     0,     0,   875,   876,
       0,     0,     0,     0,   878,     0,   879,     0,     0,     0,
     880,     0,     0,     0,   881,   882,   243,   244,     0,   763,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   764,     0,   253,   254,   255,   256,
     765,   258,     0,   259,     0,     0,   766,   260,   767,   768,
     769,   261,   770,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   771,   772,   269,   270,     0,
     271,   272,   773,   774,   274,     0,   275,   276,   277,   278,
     775,   280,     0,   776,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   777,   778,   301,
       0,     0,     0,   779,   302,   780,     0,   303,   781,   782,
       0,   304,   305,   306,   783,   784,   785,     0,     0,     0,
       0,   786,   309,   787,     0,     0,   788,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   789,     0,   336,   337,   338,   339,   340,   790,
     791,   341,   342,     0,   343,   344,   345,   346,   347,   792,
       0,   348,   349,     0,     0,     0,   793,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   794,   356,   795,     0,
     358,     0,   359,     0,   796,     0,   360,   361,     0,   362,
     797,     0,   363,   364,     0,     0,     0,   798,   366,   367,
     368,   799,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   800,   373,   374,   375,   801,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   802,   386,   387,     0,     0,     0,     0,     0,
     803,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   804,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   805,
     415,   416,   417,   418,   806,   419,   420,  5341,     0,     0,
       0,   421,   422,   423,   424,   807,   426,     0,     0,   808,
     428,   809,   429,     0,   430,   810,   811,   812,   813,   814,
     435,   436,   437,   438,   439,     0,   815,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   816,     0,   818,   447,
     448,     0,   819,   820,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   821,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   822,
     823,   470,   824,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   825,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   826,   827,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   828,     0,   829,   514,   515,
     516,   517,     0,   518,   830,   831,   520,   521,   522,   523,
       0,   832,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   833,   834,   554,   555,     0,     0,
     556,   557,   835,   559,   560,   561,   836,   837,   562,   563,
     564,   565,   838,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   839,   572,   573,     0,   840,   841,   842,   843,
       0,     0,     0,     0,     0,   578,   579,     0,   844,   845,
     846,   581,   582,     0,   847,   583,   584,   848,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   849,   593,     0,     0,   850,   851,   852,   594,
     853,   595,     0,     0,   596,   854,     0,   855,   597,     0,
     598,   599,   856,   857,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     858,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   859,   860,     0,   616,   617,
     618,   861,   619,   620,   621,     0,   622,   862,   863,   623,
     864,   624,     0,   865,   866,   867,   868,   869,   625,   626,
       0,   870,   627,   871,   628,   872,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   873,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   874,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,     0,
       0,     0,     0,     0,   875,   876,     0,     0,     0,     0,
     878,     0,   879,     0,     0,     0,   880,     0,     0,     0,
     881,   882,   243,   244,     0,   763,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     764,     0,   253,   254,   255,   256,   765,   258,     0,   259,
       0,     0,   766,   260,   767,   768,   769,   261,   770,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   771,   772,   269,   270,     0,   271,   272,   773,   774,
     274,     0,   275,   276,   277,   278,   775,   280,     0,   776,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   777,   778,   301,     0,     0,     0,   779,
     302,   780,     0,   303,   781,   782,     0,   304,   305,   306,
     783,   784,   785,     0,     0,     0,     0,   786,   309,   787,
       0,     0,   788,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   789,     0,
     336,   337,   338,   339,   340,   790,   791,   341,   342,     0,
     343,   344,   345,   346,   347,   792,     0,   348,   349,     0,
       0,     0,   793,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   794,   356,   795,     0,   358,     0,   359,     0,
     796,     0,   360,   361,     0,   362,   797,     0,   363,   364,
       0,     0,     0,   798,   366,   367,   368,   799,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   800,   373,
     374,   375,   801,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   802,   386,
     387,     0,     0,     0,     0,     0,   803,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   804,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   805,   415,   416,   417,   418,
     806,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   807,   426,     0,     0,   808,   428,   809,   429,     0,
     430,   810,   811,   812,   813,   814,   435,   436,   437,   438,
     439,     0,   815,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   816,     0,   818,   447,   448,     0,   819,   820,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   821,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   822,   823,   470,   824,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   825,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   826,   827,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   828,     0,   829,   514,   515,   516,   517,     0,   518,
     830,   831,   520,   521,   522,   523,     0,   832,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     833,   834,   554,   555,     0,     0,   556,   557,   835,   559,
     560,   561,   836,   837,   562,   563,   564,   565,   838,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   839,   572,
     573,     0,   840,   841,   842,   843,     0,     0,     0,     0,
       0,   578,   579,     0,   844,   845,   846,   581,   582,     0,
     847,   583,   584,   848,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   849,   593,
       0,     0,   850,   851,   852,   594,   853,   595,     0,     0,
     596,   854,     0,   855,   597,     0,   598,   599,   856,   857,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   858,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   859,   860,     0,   616,   617,   618,   861,   619,   620,
     621,     0,   622,   862,   863,   623,   864,   624,     0,   865,
     866,   867,   868,   869,   625,   626,     0,   870,   627,   871,
     628,   872,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   873,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     874,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,     0,     0,     0,     0,     0,
     875,   876,     0,     0,     0,     0,   878,     0,   879,     0,
       0,     0,   880,     0,     0,     0,   881,   882,   243,   244,
       0,   763,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   764,     0,   253,   254,
     255,   256,   765,   258,     0,   259,     0,     0,   766,   260,
     767,   768,   769,   261,   770,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   771,   772,   269,
     270,     0,   271,   272,   773,   774,   274,     0,   275,   276,
     277,   278,   775,   280,     0,   776,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   777,
     778,   301,     0,     0,     0,   779,   302,   780,     0,   303,
     781,   782,     0,   304,   305,   306,   783,   784,   785,     0,
       0,     0,     0,   786,   309,   787,     0,     0,   788,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   789,     0,   336,   337,   338,   339,
     340,   790,   791,   341,   342,     0,   343,   344,   345,   346,
     347,   792,     0,   348,   349,     0,     0,     0,   793,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   794,   356,
     795,     0,   358,     0,   359,     0,   796,     0,   360,   361,
       0,   362,   797,     0,   363,   364,     0,     0,     0,   798,
     366,   367,   368,   799,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   800,   373,   374,   375,  2099,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   802,   386,   387,     0,     0,     0,
       0,     0,   803,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   804,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   805,   415,   416,   417,   418,   806,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   807,   426,     0,
       0,   808,   428,   809,   429,     0,   430,   810,   811,   812,
     813,   814,   435,   436,   437,   438,   439,     0,   815,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   816,     0,
     818,   447,   448,     0,   819,   820,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   821,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   822,   823,   470,   824,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   825,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   826,   827,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   828,     0,   829,
     514,   515,   516,   517,     0,   518,   830,   831,   520,   521,
     522,   523,     0,   832,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   833,   834,   554,   555,
       0,     0,   556,   557,   835,   559,   560,   561,   836,   837,
     562,   563,   564,   565,   838,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   839,   572,   573,     0,   840,   841,
     842,   843,     0,     0,     0,     0,     0,   578,   579,     0,
     844,   845,   846,   581,   582,     0,   847,   583,   584,   848,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   849,   593,     0,     0,   850,   851,
     852,   594,   853,   595,     0,     0,   596,   854,     0,   855,
     597,     0,   598,   599,   856,   857,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   858,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   859,   860,     0,
     616,   617,   618,   861,   619,   620,   621,     0,   622,   862,
     863,   623,   864,   624,     0,   865,   866,   867,   868,   869,
     625,   626,     0,   870,   627,   871,   628,   872,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   873,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   874,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,     0,     0,     0,     0,     0,   875,   876,     0,     0,
       0,     0,   878,     0,   879,     0,     0,     0,   880,     0,
       0,     0,   881,   882,   243,   244,     0,   763,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   764,     0,   253,   254,   255,   256,   765,   258,
       0,   259,     0,     0,   766,   260,   767,   768,   769,   261,
     770,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   771,   772,   269,   270,     0,   271,   272,
     773,   774,   274,     0,   275,   276,   277,   278,   775,   280,
       0,   776,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   777,   778,   301,     0,     0,
       0,   779,   302,   780,     0,   303,   781,   782,     0,   304,
     305,   306,   783,   784,   785,     0,     0,     0,     0,   786,
     309,   787,     0,     0,   788,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     789,     0,   336,   337,   338,   339,   340,   790,   791,   341,
     342,     0,   343,   344,   345,   346,   347,   792,     0,   348,
     349,     0,     0,     0,   793,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   794,   356,   795,     0,   358,     0,
     359,     0,   796,     0,   360,   361,     0,   362,   797,     0,
     363,   364,     0,     0,     0,   798,   366,   367,   368,   799,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     800,   373,   374,   375,  2101,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     802,   386,   387,     0,     0,     0,     0,     0,   803,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   804,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   805,   415,   416,
     417,   418,   806,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   807,   426,     0,     0,   808,   428,   809,
     429,     0,   430,   810,   811,   812,   813,   814,   435,   436,
     437,   438,   439,     0,   815,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   816,     0,   818,   447,   448,     0,
     819,   820,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   821,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   822,   823,   470,
     824,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   825,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   826,   827,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   828,     0,   829,   514,   515,   516,   517,
       0,   518,   830,   831,   520,   521,   522,   523,     0,   832,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   833,   834,   554,   555,     0,     0,   556,   557,
     835,   559,   560,   561,   836,   837,   562,   563,   564,   565,
     838,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     839,   572,   573,     0,   840,   841,   842,   843,     0,     0,
       0,     0,     0,   578,   579,     0,   844,   845,   846,   581,
     582,     0,   847,   583,   584,   848,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     849,   593,     0,     0,   850,   851,   852,   594,   853,   595,
       0,     0,   596,   854,     0,   855,   597,     0,   598,   599,
     856,   857,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   858,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   859,   860,     0,   616,   617,   618,   861,
     619,   620,   621,     0,   622,   862,   863,   623,   864,   624,
       0,   865,   866,   867,   868,   869,   625,   626,     0,   870,
     627,   871,   628,   872,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   873,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   874,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,     0,     0,     0,
       0,     0,   875,   876,     0,     0,     0,     0,   878,     0,
     879,     0,     0,     0,   880,     0,     0,     0,   881,   882,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,    42,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
      49,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,    54,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,    55,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,  2987,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,  2988,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,     0,     0,     0,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,  2989,     0,   250,     0,
       0,     0,     0,   251,     0,  2990,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,  2986,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,  2987,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,  2988,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,     0,     0,     0,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,  2989,     0,   250,     0,     0,     0,
       0,   251,     0,  2990,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
    2987,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
    2988,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,     0,
       0,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,  2989,   250,     0,     0,     0,     0,   251,     0,
       0,  2990,     0,   253,   254,   255,   256,   257,   258,     0,
    -565,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,  5181,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,  5182,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,     0,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
    5183,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,  5184,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,  5185,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,  5186,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
    -520,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,  5187,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,  -520,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,  5188,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,  -520,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,  5583,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,   767,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,  2902,     0,     0,
       0,     0,   308,   309,   787,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,   791,   341,   342,     0,   343,   344,   345,   346,   347,
     792,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,   797,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   804,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,   815,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   819,   820,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   839,   572,   573,     0,  2903,   575,   576,
    2904,     0,     0,     0,     0,     0,   578,   579,     0,     0,
     845,   580,   581,   582,     0,   847,   583,   584,   848,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,  2905,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   804,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,   820,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   821,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,   847,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
    2049,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,  1696,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1146,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,  1697,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1698,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,  1029,  1030,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1031,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
    1032,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,  1033,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,  1034,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,  1035,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,  1036,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,  1037,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,  1038,  1039,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,  1040,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,  1041,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,  1042,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,  1146,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,  1359,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1146,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,  1535,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,  1029,  1030,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1543,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,  1032,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,  1033,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,  1034,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,  1036,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,  1038,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,  1040,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,  1042,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,  1146,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,  1698,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  2160,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,  2161,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,  5576,   251,     0,  5577,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,  2161,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
    5577,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
      42,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,    49,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,    54,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,    55,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,  1130,
    4178,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,  4415,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,  4419,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,  2476,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,  2477,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,  1854,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
    1855,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,  4020,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,    42,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,  2479,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,    49,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,    54,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,    55,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,  1130,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,  2987,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,  2988,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,  2989,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,  1282,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,  3209,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
    3542,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,  4300,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,     0,     0,     0,     0,     0,   243,   244,
    2119,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,     0,     0,     0,     0,     0,   243,   244,  2918,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,     0,
       0,     0,     0,     0,   243,   244,  3574,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,     0,     0,     0,
       0,     0,   243,   244,  3766,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,     0,     0,     0,     0,     0,
     243,   244,  4153,   245,   246,   247,   248,   249,   940,   941,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,   942,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,   943,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,   944,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   945,   333,   334,   946,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   947,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,   948,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
     949,     0,   372,     0,     0,     0,   950,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,   951,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
     952,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   953,   477,   478,   479,   954,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,   955,     0,   489,   490,   491,
     492,   493,     0,   956,   495,     0,   496,   497,   498,     0,
       0,   957,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,   958,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
     959,   960,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   961,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,   962,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,   963,   591,   964,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,     0,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,  1502,   941,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,   942,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,   943,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,   944,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   945,   333,   334,   946,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   947,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,   948,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,   949,     0,   372,     0,     0,     0,   950,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,   951,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,   952,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,     0,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   953,   477,
     478,   479,  1503,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,   955,     0,
     489,   490,   491,   492,   493,     0,   956,   495,     0,   496,
     497,   498,     0,     0,   957,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
     958,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,   959,   960,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   961,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,   962,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,   963,   591,   964,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,     0,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,     0,   941,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
     942,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,   943,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,   944,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   945,   333,
     334,   946,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   947,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,   948,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,   949,     0,   372,     0,
       0,     0,   950,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,   951,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,   952,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,     0,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   953,   477,   478,   479,     0,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,   955,     0,   489,   490,   491,   492,   493,     0,   956,
     495,     0,   496,   497,   498,     0,     0,   957,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,   958,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,   959,   960,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   961,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,   962,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,   963,
     591,   964,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,     0,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,  3227,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,  3228,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,  3229,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,  3230,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,  1389,
    1390,     0,   447,   448,     0,     0,  3231,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,  5563,  1007,  5564,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,  3232,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,  1363,  1364,   251,  1365,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,  1366,     0,     0,  1367,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,  1368,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,  1369,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,  1512,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1513,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
    1514,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1146,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,  1515,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,  2476,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,  2477,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,  1854,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,  1855,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,  2479,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,  1537,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,  1538,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
    1146,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,  2307,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,  2308,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   821,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,  2309,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,  1512,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,  3884,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,  1146,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,  1145,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,  1146,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,  1147,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,  1145,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1146,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,  1566,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1146,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,  1636,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,  1637,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,  1408,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,  3009,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1146,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1146,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,  3298,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,  1512,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,  1146,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
    1146,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,  3940,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1146,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,  5495,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,  5496,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,  1007,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,  1113,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,  1180,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,  1181,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,  1368,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,  2212,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,  2437,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,  2572,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,  3211,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,  3234,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,  3263,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,  3328,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,  2182,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,  2183,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,  5246,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,  1543,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,     0,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,     0,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,     0,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,  1544,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,     0,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,     0,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1543,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,     0,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,     0,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,     0,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,     0,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,     0,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,  1528,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,  1529,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
       0,   333,   334,     0,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,     0,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,   951,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,  1530,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,     0,   477,   478,   479,     0,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,     0,   495,     0,   496,   497,   498,     0,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,     0,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
       0,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
       0,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,  5323,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,  5324,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,     0,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,     0,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
     951,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
    5325,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,     0,   477,   478,   479,
       0,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,     0,   495,     0,   496,   497,   498,
       0,     0,     0,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,     0,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,     0,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,  2245,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,     0,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,     0,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,   951,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,  2246,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,     0,
     477,   478,   479,     0,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,     0,   495,     0,
     496,   497,   498,     0,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,     0,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,     0,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,  3090,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,     0,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,     0,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,   951,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,  3091,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,     0,   477,   478,   479,     0,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
       0,   495,     0,   496,   497,   498,     0,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,     0,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,     0,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,     0,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,     0,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,   951,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,     0,   477,   478,   479,     0,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,     0,   495,     0,   496,   497,   498,     0,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,     0,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,     0,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,     0,     0,   253,   254,   255,   256,   257,   258,     0,
    -565,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,  5181,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,  5182,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,  -535,  -535,
     322,     0,  -535,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
    5183,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,  5184,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,  5185,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,  5186,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
    -520,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,  5187,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,  -520,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,  5188,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,  -520,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,     0,     0,   253,   254,   255,   256,
     257,   258,     0,  -565,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
       0,     0,     0,     0,   268,  5181,     0,   269,   270,     0,
     271,   272,     0,     0,     0,     0,   275,   276,   277,  5182,
     279,   280,     0,   281,   282,     0,   283,   284,     0,   286,
       0,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,     0,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,     0,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,     0,     0,     0,   319,   320,   321,
       0,  -556,     0,   322,     0,  -556,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,  5183,   343,   344,   345,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,     0,   361,     0,     0,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,  5184,     0,   369,     0,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,     0,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,  5185,     0,
       0,   381,     0,   382,     0,     0,     0,   384,     0,     0,
     385,  5186,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,  -520,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,  5187,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,     0,     0,     0,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,     0,   498,  -520,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,     0,     0,   508,   509,
       0,   510,   511,   512,  5188,   513,     0,     0,     0,   515,
     516,   517,     0,   518,     0,   519,   520,     0,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,     0,
     533,     0,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,     0,
     550,   551,   552,   553,     0,     0,     0,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
       0,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,     0,     0,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,  -556,     0,  -520,     0,     0,     0,
     602,   603,   604,     0,   605,     0,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,     0,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,   721,   722,   723,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,     0,     0,   253,
     254,   255,   256,   257,   258,     0,  -565,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,     0,     0,     0,     0,   268,  5181,     0,
     269,   270,     0,   271,   272,     0,     0,     0,     0,   275,
     276,   277,  5182,   279,   280,     0,   281,   282,     0,   283,
     284,     0,   286,     0,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,     0,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,     0,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,     0,     0,     0,
     319,   320,   321,     0,  -553,     0,   322,     0,  -553,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,     0,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,  5183,   343,   344,   345,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,     0,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,  5184,     0,   369,     0,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,     0,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,  5185,     0,     0,   381,     0,   382,     0,     0,     0,
     384,     0,     0,   385,  5186,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,  -520,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,  5187,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,     0,   498,  -520,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,     0,
       0,   508,   509,     0,   510,   511,   512,  5188,   513,     0,
       0,     0,   515,   516,   517,     0,   518,     0,   519,   520,
       0,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
       0,     0,     0,   533,     0,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,     0,   550,   551,   552,   553,     0,     0,     0,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,     0,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,     0,     0,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,  -553,     0,  -520,
       0,     0,     0,   602,   603,   604,     0,   605,     0,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,     0,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,   721,
     722,   723,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
       0,     0,   253,   254,   255,   256,   257,   258,     0,  -565,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,     0,     0,     0,     0,
     268,  5181,     0,   269,   270,     0,   271,   272,     0,     0,
       0,     0,   275,   276,   277,  5182,   279,   280,     0,   281,
     282,     0,   283,   284,     0,   286,     0,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
       0,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,     0,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
       0,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,  5437,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,  5183,
     343,   344,   345,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,     0,   361,     0,     0,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,  5184,     0,   369,
       0,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,     0,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,  5185,     0,     0,   381,     0,   382,
       0,     0,     0,   384,     0,     0,   385,  5186,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,  -520,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,  5187,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,     0,
     498,  -520,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,     0,     0,   508,   509,     0,   510,   511,   512,
    5188,   513,     0,     0,     0,   515,   516,   517,     0,   518,
       0,   519,   520,     0,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,     0,   533,     0,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,     0,   550,   551,   552,   553,
       0,     0,     0,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,     0,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,     0,     0,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,  -520,     0,     0,     0,   602,   603,   604,     0,
     605,     0,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,     0,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   721,   722,   723,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,     0,     0,   253,   254,   255,   256,   257,
     258,     0,  -565,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,     0,
       0,     0,     0,   268,  5181,     0,   269,   270,     0,   271,
     272,     0,     0,     0,     0,   275,   276,   277,  5182,   279,
     280,     0,   281,   282,     0,   283,   284,     0,   286,     0,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,     0,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,     0,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,     0,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,  -558,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,  5183,   343,   344,   345,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,     0,   361,     0,     0,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
    5184,     0,   369,     0,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,     0,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,  5185,     0,     0,
     381,     0,   382,     0,     0,     0,   384,     0,     0,   385,
    5186,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,  -520,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
    5187,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,     0,   498,  -520,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,     0,     0,   508,   509,     0,
     510,   511,   512,  5188,   513,     0,     0,     0,   515,   516,
     517,     0,   518,     0,   519,   520,     0,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,     0,   533,
       0,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,     0,   550,
     551,   552,   553,     0,     0,     0,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,     0,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
       0,     0,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,  -520,     0,     0,     0,   602,
     603,   604,     0,   605,     0,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,     0,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,   721,   722,   723,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,     0,     0,   253,   254,
     255,   256,   257,   258,     0,  -565,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,     0,     0,     0,     0,   268,  5181,     0,   269,
     270,     0,   271,   272,     0,     0,     0,     0,   275,   276,
     277,  5182,   279,   280,     0,   281,   282,     0,   283,   284,
       0,   286,     0,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,     0,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,     0,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,     0,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,  5500,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,     0,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,  5183,   343,   344,   345,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,     0,   361,
       0,     0,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,  5184,     0,   369,     0,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,     0,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
    5185,     0,     0,   381,     0,   382,     0,     0,     0,   384,
       0,     0,   385,  5186,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,  -520,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,  5187,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,     0,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,     0,   498,  -520,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,     0,     0,
     508,   509,     0,   510,   511,   512,  5188,   513,     0,     0,
       0,   515,   516,   517,     0,   518,     0,   519,   520,     0,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,     0,
       0,     0,   533,     0,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,     0,   550,   551,   552,   553,     0,     0,     0,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,     0,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,     0,     0,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,  -520,     0,
       0,     0,   602,   603,   604,     0,   605,     0,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,     0,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,   721,   722,
     723,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,  -565,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
    5181,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,  5182,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
    5532,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,  5183,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,  5184,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,  5185,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,  5186,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,  -520,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,  5187,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
    -520,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,  5188,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,  -520,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   721,   722,   723,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,     0,     0,   253,   254,   255,   256,   257,   258,
       0,  -565,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,     0,     0,
       0,     0,   268,  5181,     0,   269,   270,     0,   271,   272,
       0,     0,     0,     0,   275,   276,   277,  5182,   279,   280,
       0,   281,   282,     0,   283,   284,     0,   286,     0,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,     0,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
       0,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,     0,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,  -539,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,  5183,   343,   344,   345,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,     0,   361,     0,     0,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,  5184,
       0,   369,     0,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,     0,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,  5185,     0,     0,   381,
       0,   382,     0,     0,     0,   384,     0,     0,   385,  5186,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,  -520,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,  5187,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,     0,   498,  -520,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,     0,     0,   508,   509,     0,   510,
     511,   512,  5188,   513,     0,     0,     0,   515,   516,   517,
       0,   518,     0,   519,   520,     0,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,     0,   533,     0,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,     0,   550,   551,
     552,   553,     0,     0,     0,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,     0,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,     0,
       0,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,  -520,     0,     0,     0,   602,   603,
     604,     0,   605,     0,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,     0,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,   721,   722,   723,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,     0,     0,   253,   254,   255,
     256,   257,   258,     0,  -565,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,     0,     0,     0,     0,   268,  5181,     0,   269,   270,
       0,   271,   272,     0,     0,     0,     0,   275,   276,   277,
    5182,   279,   280,     0,   281,   282,     0,   283,   284,     0,
     286,     0,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,     0,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,     0,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,     0,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,     0,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,  5183,   343,   344,   345,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,     0,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,  5184,     0,   369,     0,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,     0,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,  5185,
       0,     0,   381,     0,   382,     0,     0,     0,   384,     0,
       0,   385,  5186,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,  -520,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,  5187,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,     0,   498,  -520,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,     0,     0,   508,
     509,     0,   510,   511,   512,  5188,   513,     0,     0,     0,
     515,   516,   517,     0,   518,     0,   519,   520,     0,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
       0,   533,     0,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
       0,   550,   551,   552,   553,     0,     0,     0,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,     0,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,     0,     0,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,  -520,     0,     0,
       0,   602,   603,   604,     0,   605,     0,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,     0,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,   721,   722,   723,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,     0,     0,
     253,   254,   255,   256,   257,   258,     0,  -565,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,  5181,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,  5182,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,     0,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,  5183,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,  5184,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,  5185,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,  5186,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,  -520,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,  5187,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,  -520,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,  5188,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,  5440,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
    -520,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     721,   722,   723,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,     0,     0,   253,   254,   255,   256,   257,   258,     0,
       0,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,     0,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,  2591,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,   721,   722,   723,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2592,  2593,  2594,  2595,  2596,
    2597,  2598,  2599,  2600,  2601,  2602,  2603,  2604,  2605,  2606,
    2607,  2608,  2609,  2610,  2611,     0,  2612,  2613,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2614,  2615,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2616,  2617,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2618,     0,  2619,  2620,  2621,  2622,  2623,     0,     0,
    2624,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2625,     0,     0,     0,     0,  2626,  2627,  2628,  2629,  2630,
    2631,  2632,  2633,  2634,  2635,  2636,  2637,  2638,  2639,  2640,
    2641,  2642,  2643,  2644,  2645,  2646,  2647,  2648,  2649,  2650,
    2651,  2652,  2653,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2654
};

static const yytype_int16 yycheck[] =
{
       6,   890,  1183,    44,  1184,     0,   904,     0,  1330,    15,
      43,    44,    18,  1034,  1035,  1233,    22,  1330,  1279,  1697,
    1177,    60,  1083,  2197,    97,    31,     0,  1153,    60,  1346,
    1458,  1422,    38,  1054,  1625,    41,    57,   805,  1252,  1253,
      46,    43,     6,    49,  1061,  1828,  1148,    53,  1198,    55,
    1148,  1153,  1422,  2841,    21,  1153,  3061,  1858,  2509,  2938,
    1383,  2697,  1199,  2160,  2552,  2553,  1199,  1281,   766,  1086,
    2242,    64,  2160,  3216,  1669,  2833,    43,  3477,  3378,  1293,
    1294,  1295,   230,  2386,    19,  1299,  2468,  2469,  2391,  1672,
      64,    97,  1675,  1769,  1677,    30,  1750,    59,  1752,  1753,
      35,  3130,   226,  1757,  3041,  3042,  1272,  2719,  2465,  3272,
    1769,  2468,  2469,  1789,  1175,  1052,  1770,  2742,  3324,  1773,
    1774,  2746,  1776,  3002,  1338,  1779,  1780,  1781,  1782,  1737,
    2132,  1807,  1786,  3717,  2700,   752,   753,  1791,  3864,  1737,
    1346,    21,  1796,  1797,  1798,  1799,  1800,   121,  2278,  1737,
    1804,  1805,  2907,  3768,  2442,   121,  1810,  3302,  1812,  1813,
    1814,  2700,  1816,  1817,  3057,  1819,  2237,  2476,  1822,  2042,
    2043,  1825,  1826,  1153,  1689,  1690,  1691,   875,   876,  1153,
     878,  2185,  2055,  2056,  2057,   191,  2984,  1681,  1581,  1683,
    1684,  1685,  2700,   891,  2700,  1771,  2700,   738,   739,  1775,
    2979,  3387,  1153,  2747,  2716,  1598,  3387,  2540,  2541,  1427,
      52,  4531,  1605,  1789,   220,  1168,   222,  4531,  1611,   225,
     226,   227,   228,  3927,  1751,  1801,    21,    43,  3864,  4188,
       9,  3837,  3838,    22,  4429,  3841,   242,    21,  2242,    11,
      73,  2877,    71,    71,    21,  3025,  2739,   160,  3884,  3885,
      29,  2827,  1569,  3859,  2747,    34,  2493,  2377,   222,  2379,
      59,   225,    35,  2691,    22,  2502,  2739,  2491,    73,  2732,
    2733,  2734,  2392,    77,  2747,  2395,   125,    77,  2398,    18,
      19,   156,  2989,   144,   156,  2479,  2749,   125,    18,    19,
      71,    49,  1510,   176,  3074,   197,  2520,   246,  2522,  2523,
      18,    19,    18,    19,   194,  2542,    18,    19,   197,  2546,
     125,  2774,    18,    19,   125,  2778,    18,    19,   156,    21,
     235,    68,    18,    19,    18,    19,    31,   231,  1245,  1246,
    1247,  2794,  2795,  1222,  3114,  3115,  2972,  2800,   197,  1256,
    2697,   156,   131,   125,   246,     5,    18,    19,   194,   326,
     176,  3268,  4406,  2816,  2817,   759,  2968,   249,    21,    26,
      19,  1168,  2825,    73,    65,  1892,   156,  4242,    18,    19,
    1287,    48,   156,  1290,   156,    18,    19,   176,    18,    19,
    2843,   180,    77,    18,    19,   204,    37,    62,   372,    21,
     156,    78,  1309,  1310,  4791,   194,  1313,    18,    19,  2702,
     160,   276,   158,    81,   158,   236,    48,  1237,  1238,   464,
      18,    19,   500,   231,  1331,  1332,   185,    84,   162,  1336,
    1337,  2889,   239,    35,    73,  3825,    18,    19,   372,  3666,
      67,   282,   249,   191,  1351,    37,  4042,  4663,  2504,    18,
      19,   103,    74,   366,    18,    19,   780,  1137,    18,    19,
    2516,    87,   455,   156,  4560,  3855,  3856,   209,  3238,   238,
      18,    19,   262,    23,   230,    12,  3672,   125,   483,   293,
     228,   369,    11,   219,   156,    35,   571,   191,   285,   197,
    1170,  2547,   571,   231,   242,   197,   276,    19,   194,    49,
    1379,   158,    18,    19,    18,    19,   109,  3122,    40,     9,
    1268,    61,    62,   156,   130,   421,   186,   197,    25,   373,
     156,  2577,  1410,  1411,  1282,  1536,   850,   455,   377,   571,
    2877,   614,    73,   315,    18,    19,  1547,   446,   160,    22,
     282,   330,  3659,  3660,   502,    18,    19,   282,    19,   111,
    3315,   186,  3669,  3670,  4159,   428,  4909,   611,   204,   198,
     212,   243,   156,  4343,   127,   256,  4349,  1574,   197,   388,
     388,  1578,   368,    86,  4759,   536,  1583,   262,   219,   216,
     237,  3351,   156,  3353,    23,   392,  3767,    35,    73,   234,
     235,   804,   105,   804,    65,  2822,   266,  4380,   501,   812,
     282,   812,  4382,   571,   432,  1612,  1613,   130,  3164,   570,
    1498,    21,   428,   235,    62,   150,   261,   388,   432,   150,
     249,  4974,    61,    62,   533,  2972,   263,   219,  3243,  1236,
     484,   266,   746,    43,   235,   370,  4585,   469,   167,   428,
     293,   263,    18,    19,    18,    19,  3411,  4363,   131,   130,
     608,   447,    18,    19,   708,   235,   150,   386,   546,   125,
     389,   168,  1350,  1714,  1552,   322,   386,   640,  2253,   389,
    2255,   200,  4246,   235,   456,  1206,  1356,    70,   386,   585,
     386,   389,   362,   389,   386,   248,   186,   389,  3303,   163,
     386,    18,    19,   389,   386,   432,   141,   389,   368,  1387,
     386,   510,   386,   389,   209,   389,   228,   239,   412,    70,
    1507,  2989,   369,   315,  1657,   376,   368,   455,   241,  1407,
      64,  5108,  4318,   371,   386,   492,   811,   389,  2372,    18,
      19,  3864,  4328,   816,   727,  1939,   815,   578,   816,   612,
    4336,   629,   738,   739,  2125,  3878,   386,  4843,   285,   389,
     746,   501,   748,   403,  2135,   497,   386,   608,   517,   389,
     789,   386,  3388,  1706,   389,  2125,   880,   789,   259,   634,
     812,   816,  2934,  4958,  4959,   386,  4372,  1981,   389,   432,
     387,   919,   920,   921,   103,   256,   924,   925,   386,    21,
     928,   389,   930,   931,   932,  3253,    18,    19,   565,   727,
     546,   427,   546,  3551,   386,  3553,   811,   389,   605,   805,
    3598,  2477,   194,  2479,   372,  4349,   729,   386,  2236,   487,
     389,  1145,   386,  3037,  3426,   389,   386,    52,   642,   389,
    2474,  3387,   582,  3435,  3436,   571,  5223,  3439,   386,  3003,
    3281,   389,   816,  3005,   811,  1239,   636,  5063,  2446,   193,
      26,  3078,   619,  2914,   634,   760,  3134,  2501,  2446,  2063,
    1657,   552,  5249,   977,   510,   655,   656,  1005,  2446,   636,
     386,   571,   386,   389,  2518,   389,  4741,   816,   812,  3106,
    3107,  3108,  3109,   510,   880,   693,   882,   582,  2880,   546,
     419,   887,  2979,  3762,   614,  1426,  2380,  2381,  3197,   344,
    3199,  2979,   386,  3013,    21,   389,    18,    19,    84,  4858,
    3817,  2555,  2556,   386,   817,   879,   389,   594,   647,  2563,
    1034,   722,   816,   562,   816,  1895,   922,   647,  1042,  1043,
     571,   927,  4976,   582,   816,   998,   816,   816,   584,   647,
    2934,   647,  3169,   816,   753,   647,  2719,  1478,  1062,   814,
    1557,   647,   814,   747,   816,   647,  1487,   622,   748,   749,
     582,   647,  3659,   647,   698,   816,  3384,   816,  3132,   636,
     655,   656,   629,  3880,  2837,   796,  3542,   816,  3748,   571,
     816,   977,  4209,  4210,   816,   647,   814,   983,   811,   642,
     738,   739,   608,   812,   812,  3448,  4192,    18,    19,   761,
     816,   997,   998,   532,   636,   812,  3608,   647,  2589,   814,
     386,  3005,   386,   389,   647,   389,   811,   647,  1925,  3203,
     386,   562,   647,   389,   627,    18,    19,   816,  3798,  1025,
    1850,   816,   811,  5218,   814,  3488,   647,  3490,  1034,   156,
     814,  3388,   814,   695,   811,   816,  1042,  1043,   811,   647,
     600,  3504,  1166,  3506,  4073,  2263,  1013,   586,   814,   386,
    1052,   237,   389,   748,   749,   647,  1062,  4761,  3521,   174,
    2714,  5020,   816,   417,  2655,   625,  4193,   562,   647,  1193,
     817,   552,  1039,   647,   646,   608,  1993,   647,   738,   739,
    1997,   748,   821,  2691,  4275,  1052,   816,   386,   633,   647,
     389,  1921,   633,  2691,   812,  3558,   812,   753,  1104,  1105,
     816,  5498,  2019,  2691,   816,   716,   812,  1113,  2061,  3346,
     812,   814,  3349,   816,   816,  1188,   812,   608,   812,  3356,
     816,   647,   816,   647,  3361,  3362,  3363,  3364,  3365,   633,
      18,    19,   814,  1013,   816,  3372,   322,   652,  1144,   542,
    3377,  4304,  2059,  3380,   816,   816,   630,  2948,    65,   276,
     651,   600,  3218,   647,   386,   934,  1130,   389,  3382,  1232,
    1166,   814,   812,   816,   647,  1139,   816,  4711,   814,  2387,
     816,   542,   812,  1139,  2701,  2355,   816,  3628,  1184,   655,
     656,   816,  1188,   369,  1190,  1191,   144,  1193,  1183,  1195,
    1183,   812,  5506,   126,  1200,   816,  1202,  1203,    57,   816,
    1206,  4346,   282,  3269,  2526,  5525,   535,  1213,   816,  1183,
     814,  3277,   816,  2526,   500,   994,  3282,  1223,  1224,  1225,
    4363,  1000,  1228,  1991,   816,  1231,  1232,  4007,  1234,  1235,
     814,  2252,   816,   812,   469,   803,  1052,   816,   812,  1203,
      18,    19,   816,   406,   636,   377,   816,   176,    21,   603,
     315,   811,  4438,  4178,   812,   634,   401,  4438,   816,   571,
     387,   647,  1268,   647,   386,  2326,  1233,   389,   111,    18,
      19,   647,   432,   400,  1891,    48,  1282,    13,    85,  1300,
     275,  1429,  1406,  2409,  1106,   160,  1903,  1904,  1905,  1906,
     816,   565,   816,    18,    19,   368,  1420,  1914,   216,  3811,
    3812,   237,  2319,   582,  1278,    47,  2897,  2409,   486,  2700,
     647,  2409,  2329,  2463,   258,  2332,  3659,  2467,  2335,  4925,
     122,  4927,   816,  2473,  1330,  3668,   652,    18,    19,  1108,
    2700,  1455,  4112,   816,    18,    19,  2273,    21,  4231,   256,
    1346,    25,   565,  4979,  2281,   263,  1104,  1386,   647,   464,
     805,   806,   807,   808,  1386,   386,  1362,    71,   389,  1365,
     546,   371,   112,  1384,  1385,   115,    52,  1388,   179,   571,
    1391,  1392,  1393,   472,  1447,  1396,  1397,  1398,  1399,  1400,
    1401,  1402,  1403,   386,  2975,  2976,   389,   483,   278,  4187,
      18,    19,  2160,  4148,    18,    19,  3398,   455,    18,    19,
    1406,  3079,  4702,  4703,   140,   387,  4185,  1413,  1414,  1415,
    1416,  2109,  1418,  1419,  1420,   647,   125,  1423,  1424,  1425,
    1426,   230,  1428,  2560,  2561,   125,  1432,  2560,  2561,  2409,
     816,   743,   816,   369,  3436,  2409,  3769,   816,  1444,   158,
     816,  1447,  4008,   629,  4224,   510,  1519,   364,  1206,  1455,
     582,  1415,  1458,    18,    19,  1419,  1462,  1463,  2409,  1423,
    1427,   534,   162,    18,    19,  4245,   122,  3918,  3919,  4008,
     403,  1477,  1478,  3761,   216,  3712,   636,  4257,  3652,   816,
    1486,  1487,  4262,  1489,  1490,    77,   293,  2878,   290,  2917,
    1563,   571,  1459,  3802,  3148,   658,  3150,  3671,   386,   428,
    4008,   389,  4008,   158,  4008,  1511,  1579,   634,  2878,   368,
      44,  3094,  5127,  1519,  2831,  1548,  4060,   816,    18,    19,
    3014,  3015,    18,    19,  3307,   647,   470,  3203,  1534,  3701,
     816,    18,    19,  3209,  2857,  3050,  1542,   816,    18,    19,
     194,   292,   500,  1510,    18,    19,  1548,  1671,    18,    19,
    2700,  2765,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  3689,
     371,  5145,   748,  1569,    18,    19,  4178,  4060,  4573,  1575,
     372,  1577,   153,  1579,  1698,  3646,  1582,  4722,  2792,  1459,
    1653,  1548,   237,   164,   816,  4129,  2284,  4060,   703,   704,
    5226,   481,  3764,  1013,  1558,  1559,  1560,   200,  1562,  1723,
    2141,  2862,  2863,  3097,   209,  3099,  3100,   122,   386,   811,
     546,   389,  3732,  1577,  1687,  3043,   647,   534,  1582,  1039,
     602,   464,   276,  4005,  4006,  2831,   501,  1633,  1634,  3305,
    3306,   285,  1052,  5359,   290,   552,  4129,   386,  4844,   634,
     389,   192,  1648,  1465,   647,   406,  3305,  1653,  4005,  4006,
     369,  4576,  1431,  4116,   634,   123,  4129,    18,    19,  3052,
    3053,   386,   742,  3317,   389,  1671,   811,   198,  1426,   727,
     262,   371,  5308,   188,   388,   657,  3549,   282,   611,  3552,
     231,  1687,   368,   612,   816,  3687,   120,   814,   753,   287,
     812,   243,  1698,   629,  4319,   386,  5332,  3701,   389,  3936,
      18,    19,   386,   454,  5004,   389,  2872,  4010,   122,   108,
      13,  5111,  1718,   723,   369,   571,   372,  1723,   817,  1477,
    1478,  4357,  4288,   432,  3041,  3042,   643,   243,  1486,  1487,
    3306,  1489,  1548,   387,  1740,  1741,  1710,  1711,  1712,  3393,
    3394,  3395,  3396,   485,  1710,  1711,  1712,  4910,    18,    19,
     379,   349,    18,    19,  3430,   139,   429,   371,   386,   647,
    3764,   389,   386,    18,    19,   389,   386,  4525,   379,   389,
      71,  1013,   571,  3164,   188,   290,  3384,   588,  4807,   247,
    3782,   179,  5309,   469,   138,   816,  3384,   125,  3006,  3007,
    3008,   593,   226,   604,  3164,   255,  3384,  1039,  4586,  1832,
      71,   139,   811,  1561,   385,   219,  1564,   235,   481,   812,
     355,  3612,   794,  1233,   500,  5115,   419,   638,    18,    19,
     354,   386,   221,     7,   389,   575,    21,   546,   578,   400,
    3345,   386,  3347,   332,   389,   263,   816,   140,    13,    18,
      19,    33,  3357,  3358,  3359,  3360,  1852,  1853,   125,  4461,
       0,  3366,  3367,  3368,  3369,  3370,  3371,   372,  3373,  3374,
    3375,  3376,  1868,   127,   165,   746,  3381,   160,   399,   647,
     680,   571,  4438,  1835,   228,  2936,   290,   156,  4115,   194,
    5516,   691,    18,    19,   635,   162,   386,    18,    19,   389,
     386,   546,   497,   389,   165,  1901,   653,   658,   647,   386,
     334,   194,   389,   784,   338,  3907,   386,  2824,  5071,   389,
     629,   345,   386,   414,   137,   389,   386,   220,   160,   389,
      18,    19,   647,    53,  3315,  2049,   238,   614,   816,   152,
      18,    19,   386,   732,    64,   389,  4370,   593,  3616,  4373,
      18,    19,   614,  2067,   542,   125,  4249,   331,   602,    18,
      19,  5478,  4255,   571,   138,   811,   647,   571,   372,   271,
     144,   156,   565,   647,  4576,   140,   434,   365,   366,    18,
      19,   377,   432,   371,   629,    18,    19,  3038,   509,   160,
    2128,    18,    19,   128,   248,  1991,  1992,  3048,  3990,   570,
      21,  1233,   426,   331,   393,   816,  3387,    18,    19,   591,
    4357,    18,    19,   657,   403,  2942,   400,  1427,   681,   167,
    3031,   410,   231,   642,   636,  5315,   212,  3387,   372,   647,
    3411,   636,   614,   647,   636,   386,   571,   647,   389,    18,
      19,   642,  4495,   141,    18,    19,   231,  2161,   816,  1459,
      18,    19,   200,  2049,   228,  2084,   562,   652,   212,   565,
    4675,   596,  2084,   368,  4436,  4437,   490,   249,    18,    19,
     817,  2067,   613,   655,   656,   245,   671,   816,   386,  2108,
     569,   389,  5150,  2094,   293,  5153,  2108,  2201,   593,  4436,
    4437,   549,   647,   275,  3679,  3680,  2107,   388,  4185,  2110,
    1510,   816,   647,   352,   371,  1853,   595,  4185,    18,    19,
      23,  4273,  4274,  2720,    18,    19,  5043,  4279,  3699,  2115,
    1868,   614,    35,  2087,   732,   514,   386,   388,  2124,   389,
     386,   812,   128,   389,   563,  2249,    49,   194,  1548,   816,
     817,   386,  2205,  2206,   389,  2141,    13,  2835,    61,    62,
     794,  2265,  4754,  1901,   816,   817,  3729,   647,   293,    21,
    3733,   647,   282,  2159,  2160,  2161,   748,   749,   812,   343,
     647,  2859,  2235,  2861,   476,    18,    19,   647,   400,   563,
    2176,   239,   203,   647,  2180,  3603,   167,   647,    13,   593,
     360,   249,  2188,   127,  5279,  1427,   386,  2193,   816,   389,
     588,  3582,   816,   647,   816,  2201,   816,   631,  3416,  2205,
    2206,   816,  2241,  2418,   816,   400,   604,   386,   501,   428,
     389,  2979,   611,    38,   220,   649,  5359,  1459,   285,  3647,
     811,    46,  2437,   526,   527,   448,   529,   530,   531,  2235,
    2236,  4719,  4720,  2239,  4962,  2241,   344,    18,    19,  4967,
      13,  4024,   591,  2249,  4678,   548,  3569,  4349,   492,   441,
     386,   816,  4125,   389,  4127,   386,   479,   812,   389,  2265,
     455,   419,  5340,   140,   122,   614,  2390,   125,  1510,  4273,
    4274,  2273,   492,   500,   811,  4279,    18,    19,  4380,  2281,
     817,   122,   696,    18,    19,   122,   647,   293,   386,   582,
    2296,   389,   542,    18,    19,   235,  2263,   492,   386,  2266,
     160,   389,    18,    19,  2428,   140,  2273,  3629,   386,   812,
    3632,   389,   812,   816,  2281,  2354,   812,   386,    19,  3632,
     389,   565,  2354,   263,   392,   812,   186,  2333,  2334,   647,
     188,   563,   812,  3987,  3988,   741,   742,   386,   812,   817,
     389,   201,   812,   386,   582,   565,   389,   188,   212,   386,
    3564,   188,   389,   249,   214,    18,    19,    19,   812,   231,
      13,   219,  5457,  5458,  4165,   386,  2124,   140,   389,   386,
     565,  5099,   389,   623,   532,   619,   272,   647,   219,  5159,
      13,   647,   219,  2141,  2390,  4557,   277,    18,    19,   280,
    2514,   797,   647,  2426,   258,   503,   504,   386,   625,   619,
     389,  2159,   386,  2442,   230,   389,   266,   267,   386,  5185,
    5186,   389,  2418,   235,   547,  4866,   636,  4868,   137,  2452,
    2387,   508,  2428,   212,   619,  4527,   386,  2551,   586,   389,
    2188,  2437,   290,   152,   294,  2193,  2442,    18,    19,     9,
     141,   636,  3579,    18,    19,  3578,  3768,   647,  5327,   290,
     400,   812,   455,   290,   713,   714,   715,  2273,   137,   563,
     400,    31,  5098,   614,  2470,  2281,   386,  2500,   647,   389,
    2476,   100,   386,   152,   194,   389,  2482,  2483,  2484,  2485,
    2486,  2487,  2488,    18,    19,   636,  2492,   140,  2494,    18,
      19,    18,    19,   565,   812,   628,   300,   301,  2504,   449,
    2506,  2507,   362,  2509,   141,  2511,  2512,   140,  2514,  2515,
    2516,   647,    18,    19,   372,  2521,   647,   366,  2524,   606,
    2526,  5157,  5158,   387,   212,  2531,   246,   125,  2534,  2535,
      97,   372,  4769,   386,   122,   372,   389,   125,   429,  2545,
    5328,  2547,   812,  2478,  3605,  2551,   812,   300,   301,   647,
     148,   680,   571,  4557,  2489,  5335,   416,   812,   811,   647,
    2495,  2567,   691,   650,   817,   285,   415,   811,   227,   647,
     229,  2577,  2578,  3895,   562,  2333,  2334,   565,   647,    19,
    5068,  5069,  3895,   455,   622,  4822,  3204,   625,  3609,   187,
    2525,   811,  5597,   235,  2529,   103,  3214,  3215,   647,    12,
     188,  2536,  2537,  4374,   647,   386,  4377,  4378,   389,   238,
     647,   667,   812,   669,   122,  3459,   811,  4008,  2742,   814,
     492,   816,  2746,   611,    18,    19,   647,    61,    62,   258,
     647,   219,  4308,   812,   680,   680,  3480,    71,  4008,  2712,
     444,   445,   271,   344,   386,   691,   691,   389,   811,    18,
      19,   386,   815,    21,   389,    18,    19,   811,   647,  3557,
     227,   386,   229,   647,   389,   816,   212,  5443,  5444,   647,
     386,   492,   811,   389,    18,    19,   812,   600,  4461,  2437,
     188,   812,   365,   366,   521,  3702,  2692,   647,    18,    19,
    2696,   444,   445,   565,  5482,   803,   804,   805,   806,   807,
     808,   141,   290,   816,  4358,  4359,  2712,   344,    18,    19,
     787,   788,   141,   790,   812,  2721,  2722,  2723,  2724,  2725,
    4866,   122,  4868,   386,   812,   354,   389,   647,  4222,  4223,
      61,    62,   100,   647,   812,   593,  2742,   245,   812,   716,
    2746,  5098,   816,   812,   565,  2719,   812,   619,   480,  2770,
     816,   811,   593,    18,    19,   386,   593,  2721,   389,  2723,
    2724,   812,  4190,   812,   636,   816,  2890,   655,   656,   812,
     523,   524,   525,  4034,    80,   812,    82,  2535,   811,   108,
     636,  2905,   290,   639,   372,   812,   812,   188,   156,   816,
     816,   812,   812,   156,   647,   812,   816,   811,   619,     7,
    5157,  5158,   503,   504,   811,   386,  4067,  4068,   389,  2567,
    2883,   386,   432,   812,   389,   636,   811,   816,    26,   125,
     249,  2827,   563,   812,   192,  2831,   194,   817,   812,   811,
    5067,   563,  4093,   453,   812,   811,   568,  4159,   167,     7,
      18,    19,   148,  2263,   212,   562,  2266,   476,   565,   217,
     811,   386,   812,  2273,   389,  3753,  3754,   386,  4008,   386,
     389,  2281,   389,   231,   372,  4079,   647,  2873,  2874,   811,
     238,   200,    59,  3571,   811,   495,    84,  2883,   246,   611,
     386,   187,   812,   389,  2890,  4011,   816,   197,   396,   290,
     258,  2865,   812,   811,  4074,   627,   812,  4288,   812,  2905,
     816,  2907,   811,   271,   344,   647,  2912,   811,   276,  4011,
    2916,  2917,   647,  4011,   811,   344,   811,   285,  4288,   548,
     812,   653,   647,  4137,   816,  4601,  4602,  4442,  4443,  4444,
    4445,   647,   197,   812,  2692,   811,   144,   816,  2696,   811,
    2942,   812,   811,    18,    19,   816,  2952,    22,   811,  2988,
    2989,   717,   718,  2959,  2960,  4828,  2988,   125,  5132,   812,
     764,   765,    61,    62,  2970,  2971,   811,  2387,   811,   812,
     138,   372,    71,  2979,   418,  2942,   144,  3821,  2984,    18,
      19,    64,   811,  2989,   647,    84,   354,   150,   151,   176,
     811,    74,   386,   180,  2968,   389,    12,   811,  3122,   574,
     955,  3034,   811,   958,   811,   593,    89,   194,   963,   377,
    3854,   764,   765,   968,   811,  2989,   647,   386,  3862,   387,
     389,  2263,   212,   386,  2266,  3869,   389,    47,    48,   237,
     812,   812,  3034,   194,   816,  3041,  3042,  3043,   135,  3006,
    3007,  3008,   386,   319,   320,   389,   811,  4438,   324,   325,
    3071,   812,  3073,   480,   812,   816,   131,  3063,   816,   811,
     228,   812,  3068,   503,   504,   816,   647,  3034,  4438,  3193,
     812,   811,   647,   811,   503,   504,   386,   812,   811,   389,
     241,   811,   160,   161,   812,   593,   384,   812,   816,   811,
     419,   653,   108,   122,   812,  3134,   812,    33,   816,   811,
     801,   802,   803,   804,   805,   806,   807,   808,   476,   812,
     562,   127,   647,   816,   322,   811,  3122,   811,   647,  3243,
     647,   386,   811,   201,   389,  4553,  2942,   811,  3134,  3135,
    3136,   818,   500,   439,    21,   811,   214,    37,   812,    37,
      33,   647,   816,   330,  4324,  2387,   812,  2560,  2561,   812,
     816,   838,   235,  4581,  3160,  4335,  4177,   811,   197,   188,
     811,   369,   100,   811,   851,   852,   803,   804,   805,   806,
     807,   808,  1609,  1610,   492,   343,   254,    26,  3302,  3303,
     548,   812,   500,   812,   200,  1317,  1318,  3193,   696,   267,
     219,  3197,   593,  3199,  2952,   377,   812,   811,    26,  3205,
     816,  2959,  2960,  3209,   372,   141,   666,   667,   386,   669,
     103,   389,  3218,   100,   811,   115,   294,   115,  3034,   812,
    3226,   812,   122,   816,   122,   816,   811,   243,    77,   122,
     574,   812,  1173,  1174,   602,    84,   565,  3243,   811,   380,
     812,   428,   450,  3249,   816,   613,   614,   565,   812,    77,
    4572,   811,   816,   647,   811,  4577,    84,   586,  4912,  4913,
    4914,   290,   811,  3269,  4577,  3389,   634,    77,   636,   156,
     286,  3277,   811,   811,   141,  3281,  3282,   812,   647,   179,
     358,   179,   611,   812,   647,   812,   811,   811,   188,   657,
     188,  3297,   811,   811,   455,   188,  3302,  3303,   627,  5536,
     238,   619,   620,   647,   811,   197,   812,   194,   811,   158,
     811,   386,  5549,   249,   389,   811,    77,   811,   636,   219,
     258,   219,   812,    77,   811,   212,   816,  3333,   177,   697,
     217,   492,    93,   271,   811,   184,   812,   647,   546,   275,
     816,   812,  3348,   372,   122,   816,  5583,   386,   158,   177,
     389,   238,   245,   812,   812,   811,   184,   816,   816,   246,
     811,   801,   802,   803,   804,   805,   806,   807,   808,   811,
     811,   258,   801,   802,   803,   804,   805,   806,   807,   808,
     231,   812,   647,  3389,   271,   816,   246,   812,   237,   276,
     290,   816,   290,   811,    23,   811,  5050,   290,   285,  5053,
    5054,  5055,  5056,   419,   565,   811,    35,   812,   344,   237,
     188,   816,   811,   811,   141,   811,   354,  4185,   812,  3425,
      49,   629,  3428,   811,  3430,   811,   794,   237,   811,   365,
     366,  4859,    61,    62,  3440,   194,   812,   811,    32,   377,
     816,   219,  5033,   812,   812,   811,   814,   812,   816,  3416,
     812,   816,  3426,   821,   816,   355,  3430,   355,   619,   811,
      12,  3435,  3436,  4643,  4644,  3439,  4646,   354,   811,   647,
     811,   371,   372,   322,   372,   636,   812,   344,    21,   372,
     816,   197,   498,   237,    27,    79,  4747,   812,   811,   811,
     377,   816,  5146,   811,   322,   812,  4653,  4654,   811,   816,
     387,  5155,  5156,   396,   265,   441,   811,   246,   620,   812,
    5164,   492,   290,   816,   363,   500,   171,   500,   212,   500,
     369,    64,  2942,   817,  1119,  1120,   812,  1122,    71,  1124,
     816,    77,    75,   812,    77,   363,  3542,   816,   476,  3297,
     748,   369,   816,   166,   812,   811,    89,   563,   816,   565,
     812,  3624,   108,   363,   816,  3561,   108,   812,   812,   369,
     154,   816,   816,   276,   593,   111,   812,   503,   504,   812,
     816,   542,   647,   816,   812,   127,   194,    21,   816,  5257,
     516,   342,   125,   599,   565,   100,  3006,  3007,  3008,   476,
    4488,   166,  3598,   562,   372,   611,  3602,  3603,   457,   458,
     459,   460,   461,   462,   463,  3611,   222,   368,   647,   363,
     548,   167,   158,   500,  3034,   369,   542,   344,  3624,   542,
    3659,  3660,  3628,  3629,   287,   157,  3632,   811,   438,  3668,
    3669,  3670,   817,   816,  3608,   816,   503,   504,   619,   620,
     122,  3647,   812,   125,   200,   811,   816,   199,    96,   811,
     811,   156,   817,  3659,  3660,   636,   100,    48,  3632,   156,
     203,   548,  3668,  3669,  3670,   111,   197,  3425,   812,   430,
    3428,   571,   812,   571,   812,   575,   614,   575,   578,   235,
     578,   814,   811,   235,   438,   492,   160,  5004,   588,   235,
     588,   707,   815,   593,   160,   593,   596,   546,   596,   160,
     593,  3722,   816,    48,    37,   249,   188,   293,   195,  3715,
      13,  3717,   156,   160,  4894,   602,  4896,  4897,   546,   383,
     263,   532,  3761,   238,   518,   193,  5043,   614,   141,   708,
     286,     7,    71,    13,   286,   812,   546,   219,   633,   812,
      43,   140,    10,   258,   141,   816,  4926,   634,   817,   636,
     194,   812,   812,   812,   812,  3761,   271,  3763,   565,   812,
     122,   812,  3768,   125,  3006,  3007,  3008,   812,   212,   141,
     657,   532,   501,   217,   811,   321,   503,   504,   666,   275,
     629,  4842,   115,   708,   156,   721,   377,   614,   598,   122,
     122,    94,   546,   339,   238,    98,  3802,   562,  5115,    50,
     515,   629,   246,   696,  3810,  5127,    30,   197,   290,   287,
     697,   816,   619,   620,   258,   593,   582,   363,   816,   629,
     414,  3986,   365,   366,   377,   486,   188,   271,   371,   636,
     811,    71,   276,   732,   377,   571,  4001,   389,   273,   354,
     816,   285,   436,   816,   598,   657,   179,   815,   249,  5297,
     816,   805,   817,  3611,   252,   188,   188,   219,   414,   560,
     181,   816,   377,   419,   194,   801,   802,   803,   804,   805,
     806,   807,   808,    88,   417,   629,  3882,   194,    21,   816,
     378,   816,   816,   477,   816,   558,   219,   219,   645,  3895,
     372,   100,  3898,  3899,   136,   227,   156,   229,   812,   748,
      48,   786,   728,   803,   804,   803,   804,   794,   455,   372,
     354,   811,  3918,  3919,   728,   653,  3922,   636,  3924,   727,
     748,  3927,   571,   502,   811,   812,   816,   814,   290,   816,
      87,   344,   315,   377,   821,   802,   803,   804,   805,   806,
     807,   808,   498,   387,   538,     7,   498,   344,   811,   110,
     253,   582,   158,   496,    74,   400,   582,   290,   290,   400,
     141,   476,   518,  4861,   400,   136,   518,   261,   261,   400,
     136,   600,   344,  4770,   400,  5236,    48,   400,  4775,    21,
    3986,    64,   400,  5431,    26,    27,    28,   584,   400,   400,
     618,    74,   621,   622,   618,  4001,  3416,  4003,  5315,   816,
     546,   816,   709,   546,   811,   500,    89,   563,   491,   811,
     372,   563,   568,   565,  4020,   627,   568,   563,   811,   816,
     812,    63,   355,    57,  5242,    15,   609,   447,   331,   238,
     586,    21,   476,   548,   367,    77,   171,   377,   371,   372,
     372,    83,    84,   599,  5492,    87,  5494,   599,     7,   258,
     716,   603,  5313,    43,  4952,   611,   500,   111,   377,   611,
     603,  5509,   271,   613,     7,   591,   200,    57,    58,   111,
     812,   627,   812,    63,   801,   802,   803,   804,   805,   806,
     807,   808,   812,   125,   812,   812,   812,   129,    56,   812,
     503,   504,   395,   197,   812,  5543,  5544,   653,    66,   614,
     812,   653,   816,   811,   548,  4902,   503,   504,    76,  4906,
     193,   593,   655,   656,   156,   804,   158,   812,   816,   812,
     812,   812,    90,    91,    92,  4290,   812,   812,   816,   812,
    4295,   503,   504,   812,  4299,   816,   812,   812,   106,   141,
     689,   812,  4148,   817,   811,   354,   808,    64,   817,   817,
     815,   707,   235,  4159,  4193,   707,   812,    74,   602,   811,
     811,   192,   705,   344,   817,   287,  4963,   160,   816,   816,
     614,  4968,    89,   287,  3416,   287,   287,   287,   287,  4185,
     263,  4187,   816,   816,  4190,   377,   729,  4193,   582,   231,
     634,   634,   636,   235,   282,  4319,   816,   816,   582,   816,
     242,   400,   817,   817,  4178,   748,   749,   582,    13,   816,
     160,   141,   816,   657,   517,   197,   582,   582,   255,   432,
     262,   194,  4346,   197,   817,   817,   816,    64,   817,   817,
     817,   593,   812,   275,   614,  5557,   427,    74,   571,    60,
    4246,   513,   575,   607,  5557,   578,   812,   249,   816,   404,
     194,   401,    89,   697,   818,   588,   559,   403,   228,  5581,
     593,   593,  4020,   596,   789,   789,  5588,   476,  5581,   144,
      26,    27,    28,   403,  5596,  5588,   193,   103,   341,   321,
     571,  4314,   199,  5596,  4290,   571,  4292,   571,   816,  4295,
     668,   794,   379,  4299,  4459,   817,    60,   339,   477,   263,
     597,   263,  4308,   263,   811,    61,    62,    63,   402,   377,
     706,   672,   672,  4319,  3462,    71,  3464,   400,   235,   160,
     249,    77,   503,   504,   160,   160,   160,    83,    84,   160,
     160,    87,   160,   160,   417,   160,  4342,   160,    35,   548,
    4346,  5521,   344,   160,   160,   160,   263,   160,   160,   160,
     794,   160,   394,   160,   160,   111,   193,   160,   400,   160,
     160,   403,   199,   160,   160,   333,   160,   160,   812,   125,
     814,   160,   816,   129,  5555,   160,   160,   821,   160,   160,
    4386,  4387,   350,   160,   160,   160,   160,   160,   801,   802,
     803,   804,   805,   806,   807,   808,   708,   160,   235,   812,
     160,  4407,   158,   160,   801,   802,   803,   804,   805,   806,
     807,   808,   160,   455,   344,   812,   160,   160,   160,   160,
    5309,   641,   286,  4429,    19,   653,   263,   812,   791,   801,
     802,   803,   804,   805,   806,   807,   808,   464,    34,    35,
     482,   377,   154,  4407,    40,   812,    42,   245,    44,    45,
     492,   582,   571,  4459,   245,   812,   812,   812,   817,  4465,
     812,   158,   812,    64,   812,   162,    62,   654,   817,   816,
     803,   804,   571,    74,   571,   817,   817,     4,   811,   235,
     817,   816,   811,   400,   582,   816,   242,  4461,    89,   811,
     210,   377,   197,   811,    21,   730,   538,   539,   540,   541,
     417,   503,   504,   471,   546,   202,   262,   116,   117,   118,
     119,   120,   816,  5411,   212,   732,   112,   432,   372,   115,
     488,   563,   611,   565,   566,   222,   816,   123,   156,   811,
     811,   335,   554,   811,    12,   403,     7,   500,   403,   816,
      73,   343,   491,   532,   532,   532,   142,  4553,   532,   532,
     811,  4675,   263,  4559,   263,   377,   811,   614,   591,   816,
     602,   636,   563,   159,    15,   321,  4572,   366,   563,   816,
    5591,  4577,   582,   503,   504,  4581,   582,   619,   450,   812,
     417,   812,   550,   339,  4342,   372,   816,   377,   811,  5478,
     287,   187,   193,   189,   636,   811,   212,   377,  4722,   567,
     811,   518,  4576,   811,   811,  4611,   811,   811,  5506,   205,
     206,    19,    63,   785,   223,   224,   225,   226,   811,  4625,
     801,   802,   803,   804,   805,   806,   807,   808,  4386,   811,
     413,   812,    62,    77,   235,   811,   811,   247,   394,   247,
     720,    21,   812,   751,   812,   812,    48,   403,   494,    93,
     571,   247,   811,    56,   816,   687,  4780,  4663,   812,   687,
    5549,  4667,   263,    66,   260,   816,   285,   812,    35,  4675,
      12,  3819,  3820,    76,   160,   546,  3824,   816,   805,   231,
     384,   518,   724,   279,   642,   382,   603,    90,    91,    92,
     134,   282,   288,   289,  5583,   291,   811,   160,   384,   604,
     197,   258,   258,   106,    48,   390,   748,   749,   217,   816,
     812,   812,  3860,   160,   160,   160,  4722,   812,  3866,  3867,
    3868,   418,   812,  3871,   816,   334,   482,   336,   337,   338,
     812,   327,   328,   329,   403,    48,   345,   811,   160,   228,
     811,   792,   103,   245,   278,   442,   111,   817,   111,   162,
     346,   347,   348,  4759,   368,  4761,  4762,   353,   811,   400,
     356,   811,   729,   811,   811,   811,   603,  4840,   440,   811,
     467,   811,   814,   125,  4780,   228,   766,   565,   374,   375,
    4754,   771,   538,   539,   540,   541,   812,   803,  4794,   383,
     546,   158,   811,   472,   377,   162,   582,   811,   372,   801,
     802,   803,   804,   805,   806,   807,   808,   563,   812,   245,
     566,   801,   408,   409,   511,  5370,   417,   426,   812,   400,
     812,   265,   636,   197,   582,   432,   812,   817,   210,    21,
    5385,   812,   812,   377,  4840,   202,   269,   812,   434,   816,
     816,   197,   611,   821,  5399,   542,   602,   258,   258,   821,
     821,   258,   697,  4859,   160,   222,   126,   277,    48,    21,
    4866,   403,  4868,  4904,    18,    19,    48,    48,   153,    48,
     805,   801,   802,   803,   804,   805,   806,   807,   808,   477,
     489,   490,    35,   811,    35,   875,   876,   625,   878,   879,
     729,   608,   125,   263,    64,  5450,   203,   263,   342,    35,
     496,   891,   372,   811,   500,   372,   372,   415,  5463,   377,
      77,    21,   377,   817,   811,   487,   512,   812,  5473,   377,
     287,   365,   366,  4929,   368,   515,   816,   812,   812,   812,
     333,   812,   812,   812,   812,   341,   265,   427,   387,   816,
      48,   175,   812,   377,   285,   384,   210,   350,  5503,    21,
     147,   372,  4958,  4959,   249,   372,  5511,   812,  5513,   197,
     258,   258,   116,   117,   118,   119,   120,   811,   724,   811,
     405,   160,  4978,  5528,   812,   120,   572,   120,    48,   575,
      48,  4987,   578,   579,   580,   581,   430,   816,    48,   387,
     377,   372,   748,   749,   619,   367,   620,   987,    15,    21,
      81,   811,   143,   510,   111,  5560,  5561,   228,   816,   515,
    5565,    21,   372,  5034,   372,   382,   341,  5058,   173,   811,
      48,   816,   631,  1013,  5030,   621,   622,   377,   263,   384,
     194,   417,    21,   812,   160,  1025,  4794,  5043,   816,   648,
     649,   812,   812,   811,   816,   276,   162,   812,   636,  1039,
     318,   418,   811,   649,   397,   673,    48,  5063,    21,   812,
     194,   816,  1052,   812,   112,   812,   816,   162,   636,   223,
     224,   225,   226,   608,   246,   442,   263,   811,   136,   812,
     812,   812,   811,   811,   811,   488,   811,   811,   532,   573,
     136,   136,   811,   158,   377,   537,   812,   472,   816,   149,
     467,   678,   691,   653,   483,   691,   691,   387,   565,    48,
      48,   534,   811,   554,   155,   633,    32,   818,    64,   384,
      64,  5127,   812,    19,   483,  5131,   702,   553,   812,   633,
     197,    32,  5138,  5139,   384,   384,   812,   143,   691,  5145,
     688,   701,   464,   483,   511,     6,   246,   550,   377,  5273,
     377,   154,  5276,   814,  5160,   134,   171,   130,   608,   633,
     154,   230,   292,   814,   567,   818,  5172,   124,    54,   481,
     702,   143,   814,   574,   228,   542,  5182,   154,   574,   816,
     334,  5187,   336,   337,   338,   215,    48,   814,    54,   154,
     194,   345,   194,   194,   231,   562,   574,  5192,   565,  5192,
     454,   125,   377,   635,   372,   811,   500,   698,   196,    12,
     160,   816,  5218,   795,  3586,  3342,  5192,  3336,  5192,  3340,
     816,  1211,  3338,  4761,  4764,  4769,  3354,  3999,  4774,  3795,
    1238,  4787,   386,  5101,  5222,   389,  5393,  1746,  5446,  5245,
    4978,  5262,  5107,  1233,  5583,  5536,    46,  1094,  2912,  2978,
    4148,  1241,  1242,  5085,  5460,  5085,  5545,  5363,  5085,  5460,
    1250,  1251,  1252,  1253,  1254,  1255,  5444,  5273,  5389,  5085,
    5276,  5085,   426,  1263,  1264,  5242,  1266,  1267,  5402,  5388,
    4008,  1271,  1272,  5289,  5085,  1275,  1276,  1277,  1278,  5085,
    1280,  1281,  5085,  2467,  5085,  1198,  2473,  5085,  1288,  1289,
    5085,  1291,  1292,  1293,  1294,  1295,  5347,  5085,  1298,  1299,
    1300,  1301,  1302,  1303,  1304,  1305,  1306,  5085,  1308,  3582,
     771,  1311,  1312,  5085,  5330,  4438,  1316,  4288,  4461,  2693,
    1320,  1321,  1322,  3436,  3435,   489,   490,  3439,  4241,  5337,
    4660,  5420,  4885,  1333,  1334,  1335,  5347,  5058,  1338,  5349,
     801,  1341,  1342,  1343,  1344,  1345,  2446,  2560,  4463,  3430,
    1350,  4308,  4360,  4309,  3871,  3838,   817,  4689,  3870,  5185,
    5186,  1361,  1362,  5359,  4363,  5410,  3538,  5410,  5062,  1369,
    4902,  1371,  1372,  4963,  1900,  4906,  4968,  4916,  3205,  4667,
    4335,  4457,  4013,  1383,  1384,  1385,  5402,  1387,  1388,  5420,
    3418,  1391,  1392,  1393,  3117,  3110,  1396,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  2561,  4739,  2561,  1407,  2560,  1720,
    2341,  1692,  1412,  1100,  2343,  3901,  1878,  3235,   879,  2965,
    3333,  2959,  1853,  3611,  2948,  4166,    64,  1427,  2244,  1026,
    1362,  2421,  4486,  2115,  2047,  1025,  2831,  2871,  5029,  5004,
    1282,  5411,  5315,  5577,  5330,  2989,  2989,   984,  2989,  5465,
    5506,  4870,  5525,  2989,  4604,  5138,  5472,  3922,  4221,  1459,
    5139,  4613,  3675,  1113,  4823,  1633,  5030,   631,  3895,  4999,
    5296,  5297,  4900,  2428,    16,  2125,  1013,  5245,  2878,  1256,
    1183,  1183,  4579,   647,   648,   649,  3608,  3608,  1467,  1631,
    4182,  3606,  4558,  1183,  5510,  4572,  1179,  1719,  1183,  5515,
    1596,  2327,  1039,   996,  1180,  2328,  2218,  2899,  3297,  4849,
    1510,  2217,  5481,  4269,  5505,  4650,  5588,  1517,  5596,  4380,
    4527,  4577,  4873,  3135,  4634,  3348,   987,  5323,    43,  1546,
    2281,  1365,  2266,  5549,    43,  3034,  1544,  1502,  2952,  2259,
    2261,  5557,  1013,  1459,  5370,  3105,  1153,  2712,  1548,  1687,
    1550,  2704,  5555,  1553,  2713,  4837,  5009,  1506,    11,  5385,
      11,  5577,  4016,  1238,  1025,  5581,  1014,  5583,  1238,  1106,
    1238,  5555,  5588,  5399,  4397,  3610,  4458,  5338,  4782,  3912,
    5596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5443,  5444,    -1,
      -1,    -1,    -1,    -1,  5450,    -1,    -1,    -1,    -1,    -1,
    1630,    -1,    -1,    -1,    -1,    -1,    -1,  5463,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5473,    -1,  1649,
      -1,    -1,    -1,    -1,    -1,  5085,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5492,    -1,  5494,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5503,    -1,    -1,
      -1,    -1,    -1,  5509,    -1,  5511,    -1,  5513,    21,    -1,
      -1,    -1,    -1,    26,    27,    28,  1233,    -1,    -1,    -1,
      -1,    -1,  5528,    -1,    -1,    -1,    -1,  1707,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5543,  5544,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      63,    -1,    -1,    -1,  5560,  5561,    -1,    -1,    -1,  5565,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,  5185,  5186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,
    1241,  1242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1250,
    1251,    -1,   125,  1254,  1255,    -1,   129,    -1,    -1,    -1,
      -1,    -1,  1263,  1264,    -1,  1266,  1267,    -1,    -1,    -1,
    1271,    -1,  5242,    -1,  1275,  1276,  1277,  1278,    -1,  1280,
      -1,    -1,    -1,   156,    -1,   158,    -1,  1288,  1289,    -1,
    1291,  1292,    -1,  5085,    -1,    -1,    -1,  1298,    -1,    -1,
    1301,  1302,  1303,  1304,  1305,  1306,    -1,  1308,    -1,    -1,
    1311,  1312,    -1,    -1,    -1,  1316,    -1,    -1,    -1,  1320,
    1321,  1322,    -1,    -1,    -1,    -1,  5296,  5297,    -1,    -1,
      -1,    -1,  1333,  1334,  1335,    -1,    -1,    -1,    -1,    -1,
    1341,  1342,  1343,  1344,  1345,    -1,    -1,    -1,    -1,    -1,
    1427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,
    1361,  1362,   235,    -1,    -1,    -1,    27,    -1,  1369,   242,
    1371,  1372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1459,    -1,    -1,    -1,    -1,  1927,  1465,   262,
      -1,  1931,    -1,  5185,  5186,    -1,    -1,    -1,    -1,  1939,
    5370,  1941,  1479,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      71,  1412,    -1,    -1,    75,  5385,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,  5399,
      -1,    -1,    -1,  1510,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1981,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,
    5242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5431,    -1,    -1,   125,    -1,   339,    -1,    -1,    -1,
      -1,    -1,    -1,  5443,  5444,    -1,    -1,    -1,    -1,    -1,
    5450,    -1,    -1,    -1,    -1,  2025,  2026,  2027,    -1,    -1,
      -1,    -1,    -1,  5463,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5473,  5296,  5297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1517,    -1,    -1,    -1,
      -1,   394,  5492,  2063,  5494,    -1,    -1,   400,  2068,    -1,
     403,    -1,    -1,  5503,    -1,    -1,    -1,    -1,    -1,  5509,
      -1,  5511,    -1,  5513,    -1,    -1,    -1,  2087,    -1,  1550,
      -1,    -1,  1553,    -1,  2094,    -1,    -1,    -1,  5528,  2099,
      -1,  2101,    -1,    -1,    -1,    -1,    -1,  2107,    -1,  2109,
    2110,    -1,    -1,  5543,  5544,    -1,    -1,    -1,  5370,    -1,
      -1,    -1,   455,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5560,  5561,    -1,  5385,    -1,  5565,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,  5399,    -1,   482,
      -1,    -1,  1689,  1690,  1691,    -1,    -1,    -1,    -1,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1630,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5431,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1649,    -1,
      -1,  5443,  5444,    -1,    -1,    -1,    -1,    -1,  5450,    -1,
      -1,    -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,
      -1,  5463,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     563,    -1,   565,   566,    -1,    -1,    -1,    -1,    -1,    -1,
    5492,    -1,  5494,    -1,   365,   366,  1707,    -1,    -1,    -1,
     371,  5503,    -1,    -1,    -1,    -1,   377,  5509,    -1,  5511,
      -1,  5513,    -1,  2263,    -1,    -1,  2266,    -1,    -1,   602,
      -1,    -1,    -1,  2273,  2274,    -1,  5528,    -1,  2278,    -1,
      -1,  2281,    -1,    -1,  2284,    -1,   619,    -1,    -1,    -1,
      -1,  5543,  5544,    -1,    -1,    -1,   417,    -1,    -1,    -1,
      -1,    -1,    -1,   636,    -1,    -1,    -1,    -1,  5560,  5561,
      -1,    -1,    -1,  5565,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    -1,    -1,   496,    -1,    -1,    -1,    -1,
      -1,    -1,    14,    -1,    -1,    17,    -1,  2387,    -1,    -1,
      -1,   724,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   748,   749,    -1,    50,    51,
      -1,    -1,    -1,    -1,    -1,   546,    58,    -1,    -1,    -1,
      -1,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   112,    79,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2465,  1927,    99,  2468,  2469,
    1931,    -1,    -1,    -1,    -1,    -1,   142,    -1,   811,    -1,
    1941,   814,   603,    -1,    -1,    -1,    -1,    -1,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   655,   656,    -1,    -1,   170,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,  2025,  2026,  2027,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,
      -1,  2581,    -1,   215,   705,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,  2068,   729,   241,
      -1,    -1,   244,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2087,   748,   749,    -1,
      -1,    -1,   264,    -1,    -1,    -1,    -1,    -1,  2099,    -1,
    2101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,  2189,   285,  2191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,
     356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2263,  2727,    -1,  2266,
      -1,    -1,    -1,    -1,    -1,    -1,  2736,  2737,    -1,    -1,
      -1,    -1,   408,   409,    -1,    -1,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,  2291,    -1,    -1,  2757,  2758,    -1,
    2760,    -1,    -1,  2763,  2764,  2765,  2766,  2767,   434,    -1,
    2770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2779,
      -1,    -1,   414,    -1,  2784,    -1,  2786,    -1,  2788,  2789,
      -1,  2791,  2792,   425,    -1,    -1,  2796,  2797,  2798,    -1,
      -1,    -1,  2802,  2803,  2804,    -1,  2806,    -1,  2808,    -1,
    2810,    -1,  2812,  2274,  2814,   447,    -1,  2278,   450,  2819,
     452,    -1,    -1,   455,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   465,   466,  2835,    -1,    -1,    -1,    -1,
      -1,    -1,   508,   475,    -1,   477,    -1,    -1,    -1,    -1,
    2387,    -1,    -1,    -1,   486,    -1,    -1,  2857,    -1,  2859,
     492,  2861,    -1,    -1,    -1,  2865,    -1,    -1,   500,    -1,
      -1,  2871,  2872,   505,   506,   507,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,    -1,    -1,    -1,
      -1,    -1,   578,   545,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2462,    -1,    -1,    -1,  2466,
      -1,    -1,    -1,   565,  2471,    -1,    -1,    -1,    -1,    -1,
     606,    -1,  2942,    -1,    -1,    -1,    -1,    -1,    14,    -1,
      -1,    17,    -1,    -1,  2954,    -1,    -1,   589,    -1,  2496,
    2497,  2498,  2499,    -1,    -1,    -1,    32,    -1,    -1,   601,
      36,    -1,    -1,   605,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   613,    -1,   649,    50,    51,    -1,   619,    -1,    -1,
      -1,  2528,    58,    -1,    -1,    -1,    -1,    63,    64,    -1,
      -1,    -1,    -1,    -1,   636,    -1,  3006,  3007,  3008,    -1,
      -1,    -1,   644,    79,    -1,  2552,  2553,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,  3034,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,
      -1,  3061,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,
      -1,  3071,    -1,  3073,    -1,    -1,    -1,   143,   144,    -1,
     712,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2581,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
    3130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,   811,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2727,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,  2736,  2737,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,  2757,  2758,    -1,  2760,
      -1,    -1,  2763,  2764,  2765,  2766,  2767,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,  2779,    -1,
      -1,   158,    -1,  2784,    -1,  2786,    -1,  2788,  2789,    -1,
    2791,    -1,    -1,    -1,    -1,  2796,  2797,  2798,    -1,    -1,
      -1,  2802,  2803,  2804,    -1,  2806,    -1,  2808,   414,  2810,
      -1,  2812,    -1,  2814,    -1,    -1,    -1,    -1,  2819,   425,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   447,    -1,    -1,   450,    -1,   452,    -1,    -1,   455,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,   465,
     466,    -1,    -1,    -1,  2865,   242,    -1,    -1,    -1,   475,
    2871,   477,    -1,    -1,    -1,    -1,  3416,    -1,  2955,    -1,
     486,    -1,    -1,    -1,    -1,   262,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,    -1,    -1,    -1,  3446,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3454,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3006,
    3007,  3008,   538,    -1,    -1,    -1,    -1,    -1,    -1,   545,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,
      -1,  3491,  3492,  2954,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3050,    -1,    -1,    -1,  3517,    -1,    -1,
      -1,    -1,    -1,   589,    -1,    -1,    -1,  3527,    -1,  3529,
      -1,  3531,    -1,    -1,    -1,   601,    -1,    -1,    -1,   605,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,    -1,    -1,   394,    -1,    -1,
      -1,    -1,    -1,    -1,  3564,    -1,   403,    -1,    -1,  3569,
     636,  3571,    -1,    -1,    -1,    -1,    -1,    -1,   644,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   660,   661,   662,   663,    -1,    -1,
    3061,    -1,    -1,    -1,    -1,    -1,  3606,    -1,    -1,   675,
      -1,    -1,    -1,    -1,  3151,    -1,    -1,     7,    -1,    -1,
      -1,    -1,    12,    -1,    14,    -1,  3163,    17,  3165,  3166,
    3167,  3168,    -1,  3170,  3171,    -1,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,   482,   712,    -1,    -1,    -1,
      -1,  3651,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,  3130,
      -1,    61,    62,    63,    64,    -1,    -1,    -1,    -1,    69,
      -1,    71,    -1,    -1,    -1,    -1,   752,    77,    -1,  3689,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,    96,  3244,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3257,   111,  3722,    -1,    -1,    -1,   563,    -1,    -1,   566,
      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   811,    -1,   137,   138,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   152,    -1,    -1,   602,    -1,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3801,   192,    -1,    -1,    -1,    -1,    -1,  3345,    -1,
    3347,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3357,  3358,  3359,  3360,    -1,    -1,    -1,    -1,    -1,  3366,
    3367,  3368,  3369,  3370,  3371,    -1,  3373,  3374,  3375,  3376,
      -1,    -1,  3379,   233,  3381,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,  3416,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   748,   749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3446,    -1,    -1,    -1,    -1,
      -1,   381,    -1,  3454,    -1,    -1,    -1,   387,    -1,    -1,
      -1,    -1,    -1,    -1,   394,  4005,  4006,    -1,    -1,    -1,
      -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3491,  3492,    -1,    -1,    -1,    -1,    -1,    -1,  4038,    -1,
      -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3517,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,  3527,    -1,  3529,    -1,
    3531,  4071,    -1,  4073,    -1,    -1,  4076,  4077,    -1,  4079,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4090,    -1,   482,    -1,    -1,  4095,    -1,    -1,  4098,    -1,
      -1,  4101,  4102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4137,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3606,    -1,     7,   538,   539,
     540,   541,    12,    -1,    14,    -1,   546,    17,    -1,    -1,
      -1,    -1,  4162,    -1,    -1,    -1,    26,    27,    28,  4169,
      -1,    -1,    -1,   563,    -1,    -1,   566,    -1,    -1,    -1,
      -1,    -1,  4182,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3651,    -1,    -1,    -1,  3731,    -1,    -1,    -1,    58,   589,
      -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    69,
      -1,    -1,   602,    -1,    -1,    -1,    -1,    77,  4218,  4219,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,  3689,    -1,
      -1,    -1,    -1,  3770,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,   639,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
    4300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,   724,   725,   726,    -1,    -1,    -1,
    3801,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3930,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,  4404,  4405,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     7,  4436,  4437,    -1,    -1,
      12,    -1,    14,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    26,    27,    28,    -1,    -1,    -1,
      -1,   321,    -1,    -1,    -1,    -1,    -1,  4004,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,   343,    -1,    -1,    58,    -1,    -1,    -1,
      -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,   381,    -1,    -1,    96,    -1,    -1,   387,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,
      -1,    -1,   144,  4573,    -1,   435,    -1,  4038,    -1,    -1,
     152,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,  4595,    -1,  4597,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4071,    -1,  4073,    -1,    -1,  4076,  4077,    -1,    -1,    -1,
     192,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,  4090,
      -1,    -1,    -1,    -1,  4095,    -1,    -1,  4098,    -1,    -1,
    4101,  4102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4123,   235,    -1,    -1,    -1,    -1,    -1,    -1,
     242,    -1,    -1,    35,    36,    -1,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
     262,    -1,  4229,  4230,    -1,  4232,    -1,    -1,    -1,    61,
      62,  4162,    -1,   563,  4704,    -1,   566,    -1,    -1,    -1,
      72,    73,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4182,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,
      -1,    -1,    -1,    -1,    -1,    97,  4736,    99,    -1,    -1,
      -1,    -1,   602,    -1,    -1,    -1,    -1,   109,    -1,   321,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4218,  4219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,
      -1,   343,    -1,    -1,    -1,    -1,   636,    -1,    -1,   639,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   157,   158,    -1,    -1,    -1,
      -1,   163,    -1,    -1,   166,    -1,    -1,  4807,    -1,    -1,
    4810,  4348,    -1,    -1,   176,   387,    -1,    -1,    -1,    -1,
      -1,    -1,   394,  4823,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   403,    -1,    -1,    -1,    -1,   198,    -1,   200,  4300,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   724,   725,   726,    -1,    -1,    -1,
      -1,    -1,    -1,  4873,    -1,    -1,    -1,    -1,   450,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4442,  4443,  4444,  4445,    -1,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4404,  4405,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,   541,
      -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   563,    -1,    -1,   566,    -1,    -1,    -1,    -1,  4999,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,  5034,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   407,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   418,   419,    -1,   421,
     422,   423,    -1,    -1,   636,    -1,    -1,   639,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5080,   443,    -1,    -1,  4621,  5085,    -1,    -1,    -1,    -1,
      -1,    -1,  5092,    -1,    -1,    -1,  4633,  4634,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4573,    -1,    -1,    -1,    -1,  5117,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4595,   497,  4597,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
      -1,    -1,   724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   748,   749,    -1,  5179,
     542,    -1,  4719,  4720,   546,  5185,  5186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     562,    -1,    -1,   565,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    34,    35,    -1,    -1,  4752,    -1,    40,    -1,    42,
      -1,    44,    45,   585,    -1,    -1,    -1,  4764,    -1,  5229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,  5242,  4704,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4792,    -1,    -1,    -1,    -1,
      -1,   623,  5262,    -1,    -1,    -1,    -1,    -1,   630,    -1,
      -1,    -1,    -1,    -1,    -1,  4736,    -1,    -1,    -1,    -1,
      -1,    -1,  5282,    -1,  5284,    -1,    -1,    -1,    -1,   112,
      -1,    -1,   115,    -1,  5294,    -1,  5296,  5297,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    35,    -1,
      -1,    -1,    -1,    40,    -1,    42,   159,    44,    45,    -1,
      -1,    -1,    -1,  4880,    -1,    -1,  4807,    -1,    -1,  4810,
      -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,  4823,    -1,   187,    -1,   189,    -1,  5368,    -1,
    5370,   194,    -1,    -1,  4911,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   205,   206,    -1,  5385,  5386,    -1,    -1,    -1,
      -1,   753,   754,    -1,    -1,    -1,    -1,    -1,    -1,  5399,
      -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,  4873,    -1,    -1,    -1,   123,    -1,    -1,    -1,
    5420,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
    5430,  5431,    -1,    -1,    -1,   142,    -1,   260,  4975,    -1,
      -1,    -1,    -1,  5443,  5444,    -1,    -1,    -1,    -1,    -1,
    5450,    -1,   159,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,  5463,    -1,   288,   289,    -1,   291,    -1,
    5470,    -1,    -1,  5473,    -1,    -1,    -1,    -1,    -1,    -1,
     187,    -1,   189,    -1,    -1,  5485,    -1,    -1,    -1,    -1,
      -1,    -1,  5492,    -1,  5494,  5032,    -1,    -1,   205,   206,
      -1,    -1,    -1,  5503,   327,   328,   329,    -1,    -1,  5509,
      -1,  5511,    -1,  5513,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   346,   347,   348,    -1,    -1,  5528,    -1,
     353,  5068,  5069,   356,    -1,    -1,    -1,    -1,  4999,    -1,
     247,    -1,    -1,  5543,  5544,    -1,    -1,    -1,    -1,    -1,
    5550,   374,   375,   260,    -1,    -1,    -1,    -1,    -1,    -1,
    5560,  5561,    -1,    -1,    -1,  5565,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,    -1,   291,   408,   409,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5597,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,    -1,    -1,  5154,    -1,  5080,
     327,   328,   329,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,   356,
      -1,    -1,    -1,    -1,    -1,    -1,  5117,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,
      -1,    -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,   409,    -1,    -1,  5242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5179,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,
    5267,  5268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,
      -1,    -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,
      -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,   621,   622,
      -1,    -1,    -1,    -1,    -1,   512,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5282,    -1,  5284,    -1,    -1,   649,    -1,    -1,    -1,
      -1,    -1,    -1,  5294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,   575,    -1,
      -1,   578,   579,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5368,    -1,    -1,
      -1,    -1,    -1,    -1,   621,   622,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5386,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5430,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5470,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5485,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,  5550,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,  5597,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,   565,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
      -1,    -1,    -1,    -1,   803,   804,    -1,    -1,    -1,    -1,
     809,    -1,   811,    -1,    -1,    -1,   815,    -1,    -1,    -1,
     819,   820,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    46,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,   268,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
     583,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,    -1,    -1,    -1,    -1,
     803,   804,    -1,    -1,    -1,    -1,   809,    -1,   811,    -1,
      -1,    -1,   815,    -1,    -1,    -1,   819,   820,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,    -1,    -1,    -1,    -1,   803,   804,    -1,    -1,
      -1,    -1,   809,    -1,   811,    -1,    -1,    -1,   815,    -1,
      -1,    -1,   819,   820,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,    -1,    -1,
      -1,    -1,   803,   804,   805,    -1,    -1,    -1,   809,    -1,
     811,    -1,    -1,    -1,   815,    -1,    -1,    -1,   819,   820,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,    -1,    -1,    -1,    -1,   803,   804,
     805,    -1,    -1,    -1,   809,    -1,   811,    -1,    -1,    -1,
     815,    -1,    -1,    -1,   819,   820,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
      -1,    -1,    -1,    -1,   803,   804,    -1,    -1,    -1,    -1,
     809,    -1,   811,    -1,    -1,    -1,   815,    -1,    -1,    -1,
     819,   820,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,    -1,    -1,    -1,    -1,
     803,   804,    -1,    -1,    -1,    -1,   809,    -1,   811,    -1,
      -1,    -1,   815,    -1,    -1,    -1,   819,   820,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,    -1,    -1,    -1,    -1,   803,   804,    -1,    -1,
      -1,    -1,   809,    -1,   811,    -1,    -1,    -1,   815,    -1,
      -1,    -1,   819,   820,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,    -1,    -1,
      -1,    -1,   803,   804,    -1,    -1,    -1,    -1,   809,    -1,
     811,    -1,    -1,    -1,   815,    -1,    -1,    -1,   819,   820,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,    -1,    -1,    -1,    -1,   803,   804,
      -1,    -1,    -1,    -1,   809,    -1,   811,    -1,    -1,    -1,
     815,    -1,    -1,    -1,   819,   820,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
      -1,    -1,    -1,    -1,   803,   804,    -1,    -1,    -1,    -1,
     809,    -1,   811,    -1,    -1,    -1,   815,    -1,    -1,    -1,
     819,   820,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,    -1,    -1,    -1,    -1,
     803,   804,    -1,    -1,    -1,    -1,   809,    -1,   811,    -1,
      -1,    -1,   815,    -1,    -1,    -1,   819,   820,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,    -1,    -1,    -1,    -1,   803,   804,    -1,    -1,
      -1,    -1,   809,    -1,   811,    -1,    -1,    -1,   815,    -1,
      -1,    -1,   819,   820,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,    -1,    -1,
      -1,    -1,   803,   804,    -1,    -1,    -1,    -1,   809,    -1,
     811,    -1,    -1,    -1,   815,    -1,    -1,    -1,   819,   820,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,    -1,    -1,    -1,    -1,   803,   804,
      -1,    -1,    -1,    -1,   809,    -1,   811,    -1,    -1,    -1,
     815,    -1,    -1,    -1,   819,   820,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
      -1,    -1,    -1,    -1,   803,   804,    -1,    -1,    -1,    -1,
     809,    -1,   811,    -1,    -1,    -1,   815,    -1,    -1,    -1,
     819,   820,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,    -1,    -1,    -1,    -1,
     803,   804,    -1,    -1,    -1,    -1,   809,    -1,   811,    -1,
      -1,    -1,   815,    -1,    -1,    -1,   819,   820,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,    -1,    -1,    -1,    -1,   803,   804,    -1,    -1,
      -1,    -1,   809,    -1,   811,    -1,    -1,    -1,   815,    -1,
      -1,    -1,   819,   820,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,    -1,    -1,
      -1,    -1,   803,   804,    -1,    -1,    -1,    -1,   809,    -1,
     811,    -1,    -1,    -1,   815,    -1,    -1,    -1,   819,   820,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,   636,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,   699,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,   811,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   820,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,   699,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,   811,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   820,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,   811,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,   820,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   816,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   815,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     815,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   815,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   815,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   815,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   815,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   815,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   815,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   815,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   812,    20,    -1,   815,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   815,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     815,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,   619,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   811,
     812,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   812,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   812,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
     263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,   275,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,   492,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,   619,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   811,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   811,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   811,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   811,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     811,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   811,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,    -1,    -1,    -1,    -1,     5,     6,
     805,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,    -1,    -1,    -1,    -1,     5,     6,   805,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
      -1,    -1,    -1,    -1,     5,     6,   805,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,    -1,    -1,
      -1,    -1,     5,     6,   805,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,    -1,    -1,    -1,    -1,
       5,     6,   805,     8,     9,    10,    11,    12,    13,    14,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,   144,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
     285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
     505,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,   608,   609,   610,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,   505,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,   586,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,   608,   609,   610,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,   608,
     609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,    -1,    -1,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,   520,   521,   522,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    18,    19,    20,    21,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,   386,    -1,    -1,   389,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,   647,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,   501,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,   199,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,   593,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,   371,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    95,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,    -1,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,    -1,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,    -1,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,    -1,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,    -1,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,    -1,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,    -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
      -1,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,    -1,   421,   422,   423,
      -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,    -1,   449,    -1,   451,   452,   453,
      -1,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,    -1,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,    -1,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,    -1,   421,   422,   423,    -1,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,    -1,   449,    -1,   451,   452,   453,    -1,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,   633,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,   633,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   232,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   444,   445,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     710,   711,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   731,    -1,   733,   734,   735,   736,   737,    -1,    -1,
     740,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     750,    -1,    -1,    -1,    -1,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   793
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   811,   823,   824,   827,   828,   829,
     830,   831,   833,   838,   841,   894,   895,   896,   897,   899,
     902,   924,   946,   953,   954,  1189,  1190,  1192,  1194,  1196,
    1199,  1201,  1202,  1203,  1204,  1205,  1207,  1208,  1243,  1244,
    1252,  1253,  1256,  1269,  1271,  1275,  1278,  1279,  1283,  1285,
    1290,  1294,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1311,
    1312,  1438,  1471,  1472,  1473,  1474,  1475,  1476,  1477,  1478,
    1479,  1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1496,
    1497,  1518,  1519,  1523,  1527,  1533,  1534,  1535,  1536,  1537,
    1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,
    1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1588,
    1589,  1591,  1595,  1604,  1615,  1619,  1621,  1622,  1697,  1699,
    1701,  1724,  1730,  1732,  1733,  1734,  1736,  1740,  1742,  1779,
    1785,  1786,  1787,  1788,  1824,  1836,  1837,  1839,  1840,    12,
     108,   127,   200,   243,   286,   419,   498,   563,   565,   599,
     611,   707,  1798,  1799,  1800,  1803,   282,   370,  1284,  1780,
     571,  1672,   235,     5,     6,     8,     9,    10,    11,    12,
      15,    20,    23,    25,    26,    27,    28,    29,    30,    32,
      36,    40,    43,    44,    45,    47,    49,    50,    53,    56,
      57,    59,    60,    61,    63,    65,    66,    67,    68,    69,
      70,    72,    73,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    90,    91,    92,    93,
      94,    98,   103,   106,   110,   111,   112,   115,   120,   121,
     126,   127,   129,   135,   136,   137,   138,   139,   143,   146,
     147,   148,   152,   154,   155,   157,   158,   159,   162,   163,
     165,   166,   167,   168,   169,   170,   173,   174,   175,   176,
     177,   180,   181,   183,   184,   185,   186,   187,   190,   191,
     195,   196,   198,   202,   204,   205,   206,   207,   209,   211,
     215,   216,   218,   221,   222,   226,   227,   228,   229,   232,
     233,   234,   237,   242,   243,   244,   248,   252,   253,   255,
     256,   260,   262,   265,   266,   269,   272,   273,   279,   280,
     282,   284,   286,   287,   295,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   315,   316,   317,   319,   320,   321,   322,   324,
     325,   330,   331,   332,   333,   334,   335,   338,   339,   341,
     343,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     356,   357,   360,   361,   362,   363,   364,   368,   369,   373,
     375,   376,   378,   379,   380,   383,   393,   394,   395,   397,
     399,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   412,   414,   415,   416,   418,   420,   421,   422,   423,
     424,   426,   427,   428,   431,   435,   436,   438,   439,   442,
     443,   444,   445,   446,   448,   449,   451,   452,   453,   456,
     457,   458,   459,   460,   461,   462,   463,   465,   467,   468,
     470,   471,   472,   474,   477,   478,   479,   480,   482,   484,
     485,   486,   487,   488,   490,   491,   495,   496,   497,   498,
     502,   506,   508,   509,   510,   511,   513,   514,   515,   516,
     517,   523,   524,   525,   527,   530,   533,   535,   537,   538,
     539,   540,   541,   542,   545,   546,   549,   550,   551,   552,
     553,   554,   557,   558,   559,   560,   562,   563,   566,   567,
     568,   569,   572,   573,   575,   576,   577,   578,   584,   585,
     589,   590,   591,   594,   595,   597,   598,   600,   601,   604,
     607,   609,   611,   612,   618,   620,   623,   627,   629,   630,
     631,   632,   639,   640,   641,   643,   644,   645,   646,   649,
     652,   653,   654,   655,   656,   658,   667,   668,   669,   671,
     672,   673,   675,   678,   680,   687,   688,   691,   693,   695,
     696,   700,   701,   702,   703,   704,   705,   706,   707,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   745,   746,   747,   748,   749,   750,   751,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   795,   796,   797,   918,  1669,  1678,  1688,  1689,  1690,
    1692,  1693,  1696,   315,   456,   840,   562,   565,  1726,  1726,
     640,  1781,   108,   199,   286,   389,   498,   518,   563,   568,
     599,   603,   611,   653,   707,  1167,  1492,  1795,  1799,  1800,
    1801,  1802,  1803,     8,    23,    29,    35,    37,    38,    39,
      41,    54,    55,    61,    62,    69,    72,    96,    97,   102,
     104,   107,   108,   113,   114,   115,   120,   122,   125,   171,
     178,   179,   188,   195,   205,   207,   213,   219,   226,   230,
     241,   245,   271,   279,   290,   318,   323,   334,   338,   340,
     344,   345,   346,   347,   348,   355,   365,   366,   367,   371,
     372,   396,   408,   409,   411,   426,   454,   455,   474,   476,
     483,   484,   490,   543,   544,   551,   555,   556,   561,   571,
     575,   576,   577,   578,   587,   588,   589,   593,   596,   611,
     615,   616,   617,   619,   624,   626,   631,   632,   649,   664,
     665,   670,   676,   677,   679,   682,   683,   684,   685,   686,
     690,   692,   694,   745,   783,   803,   804,   805,   809,   811,
     815,   819,   820,  1140,  1304,  1322,  1323,  1326,  1327,  1328,
    1330,  1334,  1337,  1339,  1340,  1342,  1343,  1344,  1351,  1352,
    1353,  1376,  1377,  1378,  1648,  1650,  1653,  1654,  1655,  1656,
    1657,  1658,  1661,  1664,  1666,  1669,  1678,  1790,  1792,   108,
     167,   200,   235,   286,   419,   498,   518,   563,   586,   599,
     611,   627,   653,   707,  1492,  1678,  1284,   103,   535,   955,
      13,    14,    99,   130,   144,   167,   170,   183,   210,   235,
     241,   274,   285,   420,   424,   440,   448,   456,   492,   505,
     506,   557,   586,   608,   610,  1669,  1672,  1679,  1683,  1690,
    1693,  1694,  1696,  1746,  1747,  1667,  1678,   839,   565,   128,
     220,   293,  1498,   406,   658,    87,   427,  1620,   111,   235,
     646,  1623,   243,  1726,  1284,  1678,  1616,   486,   611,  1726,
    1284,   128,   293,  1499,  1522,   652,  1605,   521,   943,   947,
     948,  1678,   230,  1490,  1781,  1678,    13,   140,   220,   526,
     527,   529,   530,   531,   548,  1313,  1314,  1315,  1793,    61,
      62,   125,   209,   282,   351,   403,   497,   584,   652,   653,
     671,   707,   815,  1142,  1669,  1681,  1689,  1690,  1692,  1693,
    1695,  1698,  1708,  1713,  1714,    35,    36,    61,    72,    97,
      99,   109,   158,   163,   166,   176,   198,   200,   209,   211,
     282,   315,   380,   407,   418,   419,   422,   423,   443,   497,
     510,   546,   565,   630,   753,   754,  1142,  1251,  1578,  1579,
    1581,  1582,  1583,  1709,   947,   204,   510,   584,  1251,   204,
    1251,  1667,  1678,   565,  1528,   406,   658,   243,  1731,  1678,
     483,  1508,  1512,   659,  1439,  1440,  1678,    32,    79,   154,
     414,   436,   477,   538,  1827,  1330,  1678,  1669,   400,  1059,
     811,  1791,  1792,   243,   282,  1326,  1301,  1302,  1304,  1438,
    1505,     0,   156,   825,   414,   104,   274,   611,  1216,  1672,
    1678,  1682,  1684,  1685,  1768,  1771,   126,   403,   611,  1245,
    1246,  1247,  1248,  1249,  1250,   194,   246,   285,  1316,  1317,
    1469,   387,   602,   657,   794,  1451,  1452,  1303,   130,   608,
      17,   195,  1592,  1593,  1667,   160,  1220,  1678,   160,   918,
     137,   152,   448,   479,  1735,   212,   918,  1682,  1678,  1667,
     563,  1490,   212,   167,  1198,  1798,  1726,  1781,  1291,  1292,
    1667,   811,   925,   817,   185,   517,   582,  1488,  1667,  1488,
      19,  1782,   230,  1090,   235,   212,   455,  1682,   235,   716,
    1678,   563,  1090,  1090,   212,   235,   565,  1794,  1794,  1798,
    1803,   811,   811,   811,  1337,   811,   811,   811,  1326,  1389,
     811,   811,   811,   811,   811,   811,   811,   811,  1325,  1325,
     811,  1128,   811,   811,   811,   571,   811,   811,   811,  1791,
     811,   811,   811,   811,   811,   811,   811,   811,   811,  1326,
     811,   811,   811,  1387,  1388,  1664,  1678,   811,   811,   811,
     811,   811,   811,   811,   811,   811,  1326,  1128,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,  1128,   571,   811,   811,   811,   571,
     811,   811,   811,    37,   219,   571,   811,  1325,  1128,  1128,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,  1337,  1337,  1337,   619,  1302,  1304,  1326,   815,
    1682,  1678,   816,    18,    19,    21,   386,   389,   571,   647,
    1324,  1331,  1332,  1677,  1678,   160,   161,   201,   214,   254,
     267,   294,   358,  1335,    33,   141,   249,   275,   344,   365,
     366,   441,   503,   504,   516,   721,   801,   802,   803,   804,
     805,   806,   807,   808,  1333,  1337,    71,   388,   571,  1673,
     259,   651,   811,   817,  1490,  1490,  1490,  1678,   212,  1490,
    1490,   716,  1678,  1490,   563,  1490,  1490,  1490,   212,  1726,
     834,  1596,   135,   418,  1745,   480,   480,   563,   568,   611,
     627,   653,   653,   384,   811,  1772,   562,   377,  1772,    67,
     510,  1772,   109,   627,  1772,   815,  1772,   377,   582,   816,
     380,    68,   432,   817,  1682,   197,   231,  1239,  1678,  1672,
    1838,  1326,   246,    85,   293,  1626,   194,  1725,  1726,   197,
     315,  1578,  1617,  1678,  1287,  1685,  1286,  1726,   246,  1500,
    1490,  1607,   315,   510,   753,  1606,  1609,   620,   944,   500,
     949,   171,    13,   424,  1746,   582,  1782,  1322,  1315,   500,
     653,   817,    35,   125,   160,   501,  1143,  1509,  1682,   194,
     582,  1509,   255,   432,  1716,  1717,  1719,  1721,    13,   125,
     364,  1683,  1686,  1754,   212,   815,  1682,    35,   125,  1145,
    1146,  1682,   817,   125,   584,  1704,  1712,  1714,   816,  1705,
    1509,   166,   275,   634,  1436,  1587,   811,   108,   167,   200,
     419,   565,   586,   611,   627,  1587,    13,  1577,  1682,   276,
    1456,  1457,   197,   249,  1580,  1584,   198,    70,   542,   194,
     542,   562,    70,   542,    13,    43,    94,    98,   253,   331,
     395,   517,   559,  1529,  1530,  1531,   166,   222,   542,  1456,
    1587,   542,   287,   157,   421,   585,   234,   235,   261,  1166,
      73,   562,   542,   623,   949,   432,   636,  1257,  1258,  1259,
     446,   533,  1264,  1265,  1266,  1264,  1667,  1678,  1838,  1726,
     811,   816,  1439,   816,   811,  1441,    37,   219,  1649,  1673,
    1826,  1826,  1826,    96,  1825,  1826,  1826,   156,   817,   811,
      48,   156,   156,   197,   111,   156,   812,  1316,   812,   812,
     814,  1678,  1325,   811,   138,   228,   372,  1757,  1761,  1762,
    1769,   815,     7,   125,   138,   144,   228,   343,  1756,  1757,
    1761,  1762,  1763,  1764,  1765,  1766,   464,   816,  1774,   160,
     160,   160,   816,   502,   608,  1318,   146,   391,   815,  1467,
    1468,  1470,  1682,   249,  1317,  1469,  1316,    48,    13,   140,
    1789,  1789,  1789,  1456,  1451,   231,   293,   428,  1525,  1526,
    1522,   195,  1592,   160,   194,  1300,  1496,  1497,  1518,  1523,
    1590,  1594,  1649,  1678,   332,   569,   595,  1191,  1685,  1195,
    1678,  1678,   746,   784,  1682,  1678,  1193,   383,     7,    26,
      84,   144,   237,   322,   369,   450,   629,   748,  1026,  1027,
    1040,  1041,  1042,  1043,  1049,  1051,  1052,  1053,  1579,     7,
      12,    14,    17,    27,    28,    58,    63,    64,    69,    77,
      83,    84,    87,    96,   111,   125,   129,   137,   138,   144,
     152,   158,   169,   192,   233,   235,   242,   262,   285,   321,
     339,   343,   381,   387,   394,   403,   435,   450,   451,   452,
     482,   538,   539,   540,   541,   546,   563,   566,   589,   602,
     636,   639,   724,   725,   726,   748,   749,  1042,  1091,  1094,
    1096,  1097,  1149,  1221,  1222,  1224,  1225,  1227,  1229,  1230,
    1231,  1232,  1234,  1236,  1678,  1678,   918,   532,  1804,  1805,
    1197,  1488,   249,   816,   235,   263,   400,  1164,  1297,  1298,
    1326,  1385,  1386,  1678,   843,   842,   176,   428,   816,  1270,
      59,   176,   180,   194,   330,   428,  1280,  1281,  1282,    57,
     368,   368,   447,  1783,  1333,  1678,  1678,  1678,   518,   193,
    1678,   708,     7,  1020,  1678,  1685,  1758,  1770,  1754,  1678,
    1678,  1090,    11,   167,   200,   419,   586,   905,  1797,  1805,
    1811,  1813,  1814,  1819,   200,   905,  1796,  1805,  1811,  1814,
    1819,  1794,  1326,  1326,    13,   140,  1383,  1434,  1383,  1383,
    1383,   633,  1391,  1326,  1326,  1386,  1386,  1326,  1326,   140,
    1383,  1434,   812,   372,   812,   812,  1326,  1326,  1326,  1326,
    1664,   116,   117,   118,   119,   120,   223,   224,   225,   226,
     334,   336,   337,   338,   345,   426,   489,   490,   631,   648,
     649,  1429,  1430,  1326,  1385,   112,   115,   575,   578,  1431,
     140,  1379,  1326,  1326,  1326,  1326,  1429,  1326,  1386,  1388,
      10,   816,   817,   140,  1383,  1326,  1326,   140,  1383,  1326,
    1326,  1386,  1386,  1386,  1326,  1386,  1330,  1326,  1326,  1326,
    1326,  1326,  1326,   812,  1326,  1383,  1383,  1326,  1326,   140,
    1383,  1326,  1430,  1430,  1326,    46,   268,   583,  1326,  1326,
     812,  1665,  1666,  1678,  1383,  1383,  1326,  1326,  1326,  1383,
    1383,  1386,   812,   812,  1326,  1326,  1326,  1326,  1326,   815,
    1355,  1356,  1650,  1657,  1678,   812,   812,   812,  1337,   140,
    1383,  1316,   812,   816,   209,   282,   497,  1710,   501,  1326,
    1323,  1677,  1678,  1326,  1326,  1326,   179,   371,   588,   604,
    1333,    13,    20,  1328,  1336,  1330,  1330,   811,  1791,  1337,
    1330,  1330,  1330,  1330,   275,   666,  1329,  1330,  1330,   245,
    1330,   245,  1330,  1330,  1330,  1330,  1330,    33,   249,   275,
     441,  1682,  1337,  1673,  1673,  1326,  1348,  1349,  1350,   805,
    1678,  1678,   918,  1678,   377,  1678,   918,  1682,   708,  1049,
    1051,  1493,  1494,  1495,   918,  1678,  1685,  1753,  1488,  1754,
    1678,  1490,   614,   835,    35,   158,   162,   202,   222,   287,
     382,   418,   442,   467,   511,   542,  1597,  1601,  1602,  1726,
      86,   815,   956,   957,   958,   959,  1678,  1743,   562,  1678,
    1773,  1685,  1682,   200,   419,   565,  1744,  1753,  1747,    21,
    1432,  1433,   186,   362,  1678,  1737,  1678,  1838,  1500,   515,
     500,   816,  1835,    50,   197,  1625,    30,  1667,  1727,  1728,
    1488,   815,   832,  1672,   287,   816,   582,  1288,  1289,  1667,
    1488,  1667,   125,  1608,  1678,  1612,  1610,  1611,   816,  1673,
      56,    66,    76,    90,    91,    92,   106,   333,   350,   488,
     550,   567,   950,   952,  1745,   377,   197,   377,   486,  1784,
    1783,   197,  1307,  1308,  1469,    13,   364,  1754,  1678,    71,
    1148,  1326,  1685,   732,   571,  1675,   273,   379,   642,   816,
    1720,   816,  1718,   657,  1700,   815,   816,  1678,   209,   282,
     497,   652,   671,  1711,  1509,  1678,  1716,  1705,  1509,  1706,
    1707,  1708,  1713,    13,    35,   125,   377,   483,   708,  1326,
    1723,   249,  1585,  1673,  1326,   805,  1090,   918,   918,   918,
    1667,   918,  1685,  1667,   287,   349,   542,   290,   372,   593,
    1458,  1459,  1650,  1678,  1587,  1678,   918,  1587,  1685,  1580,
     918,  1587,   252,   560,   181,   194,  1532,   816,  1585,  1580,
     194,   893,  1580,  1584,  1584,  1580,  1587,  1587,   379,   642,
      88,   816,  1254,   816,   893,   125,  1326,  1513,  1514,  1515,
    1512,  1440,  1442,  1678,    21,   816,   378,  1829,   558,  1830,
     645,   258,   470,  1828,  1678,  1326,   277,   280,   429,  1060,
    1061,  1685,   136,   156,   826,   812,   728,    48,   786,   455,
    1206,  1206,   787,   788,   790,  1682,  1769,   653,   728,  1769,
     636,  1769,   455,   727,  1755,   455,  1755,  1755,   455,  1755,
    1755,    65,   256,   364,   534,   552,   643,  1750,  1751,  1685,
    1768,   636,  1213,  1670,  1672,  1670,  1670,  1247,   666,   667,
     669,  1319,  1320,  1321,   571,  1674,  1674,  1682,   816,   502,
    1326,  1453,  1662,  1303,  1303,  1303,  1456,   197,  1489,  1668,
    1678,  1525,  1239,  1682,    87,   432,  1085,  1086,  1089,  1096,
    1097,  1098,  1149,   919,  1678,  1678,   194,   368,   315,     7,
     919,   811,   110,  1037,  1509,  1510,  1510,  1037,  1510,  1510,
     582,  1510,   816,  1093,   158,    74,    89,   199,   400,   518,
    1106,  1108,  1164,  1238,  1510,    64,    89,   235,  1238,   400,
    1510,  1510,  1238,  1510,   400,   400,  1510,  1510,  1510,  1510,
     582,   136,  1510,   261,   400,   563,    64,    89,   193,   400,
     417,  1164,  1238,   261,  1510,   400,   400,   563,   136,  1510,
    1510,  1510,  1510,  1510,  1238,   400,    48,  1510,  1510,   400,
      21,    74,   160,   582,  1164,  1242,   400,   400,  1510,   584,
    1510,  1510,  1510,   139,   331,  1510,  1510,   400,  1510,   618,
     618,  1510,  1510,  1510,  1094,    71,  1142,   449,  1059,  1223,
     816,   816,   500,   709,  1844,  1200,   491,   627,  1805,   144,
     608,  1277,   125,  1293,  1678,  1292,  1667,   811,   811,  1298,
     812,   816,   457,   458,   459,   460,   461,   462,   463,   844,
     845,   232,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   316,   317,   444,   445,   710,   711,   731,   733,
     734,   735,   736,   737,   740,   750,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   793,   857,   858,   859,   860,   861,
     862,   863,   864,   865,   866,   867,   868,   869,   870,   871,
     872,   873,   874,   875,   876,   877,   878,   879,   880,   881,
     882,   883,   890,   891,   892,  1667,   609,  1281,    57,   447,
     171,   898,   377,     7,   716,   111,   377,  1090,  1037,   613,
    1021,     7,    19,  1759,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,   125,   816,   901,   591,   591,   614,  1179,  1180,  1667,
     200,  1090,  1090,  1090,  1090,  1090,  1805,   816,   812,  1383,
     812,  1326,   812,   812,   812,  1326,   150,   633,  1390,    21,
      25,   812,   614,   812,   812,   812,   614,   816,  1386,   812,
     805,   812,   816,   816,   812,   812,   812,   197,   816,   812,
     816,  1386,   812,   816,   816,   816,   804,   816,   812,   812,
     811,  1664,  1678,  1383,   812,   812,   812,  1383,   812,   816,
     812,   812,   812,   812,   816,   812,   249,   812,   816,   816,
     812,   816,   816,   812,   812,   812,   816,   197,   816,  1383,
     812,   812,   816,   816,   816,   812,   197,  1326,   197,  1326,
     197,  1326,   197,   812,   816,   812,   812,   812,   812,   816,
      21,   812,   816,   812,   816,   812,   812,   689,  1361,  1361,
     812,   816,  1354,   812,  1354,   816,  1682,   812,  1361,  1361,
    1361,   816,  1383,   812,  1386,   817,   817,   817,  1682,  1715,
    1326,   821,   179,   371,   588,   604,  1791,    19,  1326,   165,
    1330,   811,  1326,  1326,  1330,   811,  1791,  1337,  1330,  1324,
     812,   816,   811,   817,   817,  1667,  1493,  1490,  1093,  1028,
    1029,  1030,  1049,   816,    52,   469,  1240,   192,  1850,  1488,
     815,   836,   837,   287,   287,   287,   287,   287,   287,   816,
    1488,  1603,   115,   575,   578,   815,   951,   961,  1378,  1655,
    1664,  1682,   816,   160,   377,   812,   816,   582,   805,  1678,
    1687,  1752,   636,  1748,  1678,   160,   186,   201,   214,   266,
     267,   294,   362,   416,  1738,  1739,  1435,  1436,  1667,  1672,
     209,   652,  1831,  1833,  1834,  1672,  1295,  1296,  1667,   282,
    1624,  1433,   816,  1682,    31,   582,  1618,  1685,  1685,   816,
     582,   176,   428,   612,  1272,  1273,  1274,   400,  1400,  1401,
     817,   817,   582,  1614,    13,  1613,  1613,  1609,   816,   160,
     816,  1741,  1685,  1753,  1744,  1678,   145,   699,   719,   811,
     820,  1309,  1310,  1392,  1394,  1402,  1403,  1404,  1405,  1406,
    1407,  1408,  1667,  1791,  1435,  1307,   582,   582,   582,    35,
    1147,  1682,   582,  1509,  1206,  1206,   432,   453,   495,  1722,
    1719,  1717,  1754,  1682,  1686,   194,   817,   817,   817,   817,
     817,  1714,  1326,  1723,   816,  1712,  1672,   197,  1586,   812,
    1678,   376,   816,   614,  1587,   427,  1456,  1531,  1586,  1587,
      60,  1587,  1667,  1667,  1587,   513,  1259,   607,  1267,  1266,
     812,   816,   812,   816,  1791,  1649,   404,   194,   817,   812,
      73,   811,    73,   811,   401,  1063,   216,   263,   818,  1510,
     403,   732,  1675,  1675,  1755,  1755,   789,   789,  1760,  1763,
      13,   364,  1754,   403,   144,  1682,  1760,  1675,   103,  1675,
    1675,   571,   571,   571,    19,  1749,   319,   320,   324,   325,
    1214,  1215,     5,   403,   738,   739,  1210,  1211,  1212,  1489,
     668,  1320,  1142,  1144,  1468,   341,    22,   131,  1454,  1455,
     816,  1489,  1667,  1678,   197,   816,   817,  1524,  1310,   122,
     188,   219,   290,   372,   593,  1462,  1465,  1466,   379,  1086,
      84,    77,    93,   265,   342,   368,   430,   532,   921,   923,
      60,   477,   263,   597,  1039,   108,   221,   393,   403,   410,
     514,   611,   903,   904,  1672,  1025,  1026,   219,   290,   372,
     593,  1054,  1464,  1465,  1669,  1672,  1025,  1054,  1054,  1678,
    1672,  1851,  1027,  1510,  1187,  1678,  1164,  1165,  1284,  1165,
      64,   193,   417,   603,  1107,  1163,  1178,  1187,  1678,   811,
    1678,   125,  1235,  1678,  1678,  1678,  1678,  1678,  1284,   122,
     188,   290,   372,   593,  1463,  1463,  1678,   122,   188,   219,
     290,   372,   593,  1461,    13,  1228,  1428,  1678,  1284,  1672,
    1672,  1672,  1672,  1142,  1510,  1461,  1228,  1678,  1678,   263,
    1428,   263,  1678,  1678,  1682,  1678,  1228,  1510,   186,   266,
     368,  1100,  1463,   125,  1237,  1678,  1463,  1463,  1678,  1284,
    1449,  1450,  1665,   125,  1095,  1461,  1672,  1284,  1678,  1678,
    1667,  1284,  1284,    80,    82,   125,   148,   187,   439,  1099,
    1095,  1095,   125,  1461,  1678,  1461,  1228,   811,   371,  1682,
    1851,  1851,  1510,  1510,   402,     7,   144,  1091,  1231,  1232,
    1225,  1229,  1232,   717,   718,  1038,  1510,   706,  1848,   377,
     913,  1217,   127,   248,  1667,   672,   672,  1228,   417,  1424,
    1425,  1426,  1678,   249,  1326,   160,   160,   160,   160,   160,
     160,   160,   816,   893,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   816,   893,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,  1087,  1088,  1089,  1667,  1039,   708,   641,
    1667,  1464,   286,    77,   177,   184,   363,  1022,  1023,  1024,
    1040,  1041,  1043,  1044,  1047,  1048,  1049,  1050,  1051,  1052,
    1053,  1037,  1760,  1759,   791,  1767,   653,  1758,  1774,  1510,
      47,   216,   485,  1182,  1182,   377,    21,   231,   275,   455,
     811,  1055,  1056,  1057,  1058,  1059,  1092,  1094,  1505,  1631,
    1090,   918,   918,  1678,   918,   918,   245,  1326,   812,  1360,
    1361,  1360,  1360,  1360,   574,  1326,  1326,   154,    35,    62,
     112,   115,   123,   142,   189,   205,   260,   279,   346,   347,
     348,   353,   356,   408,   409,   434,   508,   578,   606,   649,
    1117,  1121,  1384,   282,   578,  1143,  1143,  1384,   812,  1360,
     812,   245,   245,  1326,  1326,  1326,   387,  1381,  1326,  1326,
    1326,  1326,  1326,  1330,   812,  1360,   812,  1360,  1326,  1326,
    1326,  1326,  1326,  1326,  1386,  1360,  1360,   245,  1326,  1326,
    1326,   812,  1360,  1326,  1326,  1326,  1326,   197,  1326,   197,
    1326,   197,  1326,  1326,  1360,  1360,  1326,    35,    62,  1461,
    1383,  1360,   811,  1362,  1363,  1364,  1678,   231,   693,  1358,
    1355,   812,  1358,   812,  1337,  1361,   596,  1648,   812,  1360,
     812,   817,  1328,   812,   816,  1337,  1337,  1429,  1429,    19,
    1326,   165,  1350,  1385,   805,  1678,  1678,  1233,  1234,  1236,
    1464,  1495,  1093,  1685,  1240,  1682,   816,   893,  1602,  1598,
    1682,   959,   962,   963,   958,   373,   484,   960,  1744,  1678,
    1753,   817,   817,   582,   654,  1435,   811,  1456,  1400,  1714,
     816,   816,  1297,  1298,   236,   796,  1627,   293,   432,   642,
    1729,  1728,  1326,  1672,   582,  1289,  1667,  1274,   811,   500,
     619,   620,   811,  1501,  1502,  1504,  1505,  1506,  1678,  1678,
    1464,   893,   893,   952,   951,   210,   377,   197,   231,  1491,
    1752,   811,  1791,  1310,  1394,  1403,  1404,  1405,  1406,   730,
     816,   100,   238,   258,   271,   354,   476,   548,  1395,  1396,
    1397,  1400,  1433,   212,  1446,  1435,  1754,  1754,  1754,   732,
    1675,  1755,  1755,    78,   594,   432,  1462,  1702,  1703,  1509,
    1707,  1463,  1456,   163,   630,  1459,  1459,  1753,   372,  1456,
    1670,  1580,  1580,   523,   524,   525,   892,  1268,   611,  1260,
    1515,  1678,   816,   335,   156,   811,  1330,   811,  1330,  1462,
     554,  1064,   811,    12,  1062,  1461,  1674,   403,   500,     7,
    1769,    21,    48,   343,  1755,   403,  1755,  1755,  1750,  1461,
    1461,  1461,  1461,  1215,   285,   605,   174,   464,   703,   704,
     696,  1462,  1462,    77,   747,  1209,  1212,  1143,    73,  1632,
    1662,   614,  1433,   817,  1310,  1668,   805,  1678,   500,  1510,
    1510,  1672,   532,   532,   532,   532,   532,   491,  1678,   377,
    1672,  1034,  1035,  1036,  1040,  1049,  1051,  1672,  1672,  1672,
    1672,  1461,  1672,  1672,   812,   816,  1682,  1187,   401,   811,
    1187,   811,   263,   263,  1165,   366,  1109,  1110,  1111,  1178,
     811,   614,   591,  1102,  1103,  1104,  1106,  1678,    34,    35,
      40,    42,    44,    45,    62,   112,   115,   123,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   327,
     328,   329,   346,   347,   348,   353,   356,   374,   375,   408,
     409,   496,   500,   512,   572,   575,   578,   579,   580,   581,
     621,   622,   649,  1112,  1115,  1116,  1117,  1118,  1119,  1120,
    1121,  1123,  1111,  1111,   655,   656,  1181,   144,   500,  1228,
    1678,  1280,   816,  1462,   125,  1143,  1672,   563,  1678,  1240,
     636,   563,  1672,  1112,  1228,   816,  1454,  1228,   582,   582,
    1428,  1228,  1603,  1147,  1143,  1028,   372,  1845,  1846,  1510,
     137,   152,  1849,    81,   487,   450,  1218,  1441,   377,   377,
     812,   812,   816,  1293,   811,   846,   846,   811,   851,   851,
     811,   854,   854,   811,   849,   845,   811,  1670,  1461,  1670,
     371,   886,  1684,  1461,   377,   741,   742,   797,   887,  1462,
     282,   571,   742,   888,  1462,   883,  1461,  1670,  1670,  1670,
    1670,  1461,  1461,  1461,  1461,  1461,  1670,  1670,  1670,  1670,
    1670,  1670,  1461,  1670,   371,   889,  1670,  1670,  1670,  1461,
    1656,  1672,  1461,  1670,  1463,  1089,   811,   438,   598,  1031,
    1032,  1033,  1040,  1045,  1046,  1047,  1048,  1049,  1051,  1464,
    1682,   811,   900,   212,  1510,  1510,  1510,  1510,  1093,  1028,
      19,   785,  1754,  1213,   611,   708,  1843,  1667,  1505,  1667,
     275,  1102,  1057,  1056,  1093,  1058,  1678,   906,   811,   472,
    1820,     9,    31,  1018,  1326,   812,  1360,  1326,   574,   811,
    1132,  1133,  1133,   811,  1127,   811,  1125,  1126,  1132,   413,
    1122,  1124,  1132,    62,   247,  1127,   247,  1133,   720,  1338,
      21,   751,   812,   812,   812,  1360,  1360,  1326,  1326,   812,
     812,   816,   812,    48,   494,  1380,   816,   816,   812,   816,
     812,   249,  1345,  1346,  1360,  1360,   812,   812,   812,   812,
     816,   812,   812,  1326,   812,   194,   812,   812,   816,  1360,
     812,   816,   816,   812,  1326,   812,  1326,   812,  1326,   812,
     812,   812,   811,  1154,  1154,   816,   812,  1363,  1365,  1366,
     687,   687,  1361,   816,  1357,  1358,  1361,  1358,   812,   743,
    1341,  1360,  1678,  1386,   812,  1328,   812,   816,  1337,   812,
    1236,  1234,  1030,   837,   194,   636,  1599,   160,   816,  1752,
     636,  1776,   805,   805,  1678,  1753,   384,  1456,  1514,   500,
    1501,  1502,  1509,  1833,  1296,  1667,  1298,   231,  1299,  1674,
     642,   282,  1685,  1427,  1428,  1520,  1521,  1665,   812,  1503,
    1660,  1665,   811,  1507,  1511,   160,   384,  1744,  1753,   604,
     197,  1326,  1433,   816,   812,   812,   812,   812,   812,  1392,
    1393,  1394,  1402,  1392,   258,   258,   390,  1399,   238,   271,
     476,  1398,  1399,  1402,  1392,  1392,  1433,  1441,    48,   217,
    1437,  1446,  1206,  1206,  1093,  1723,   893,  1435,  1587,   160,
     160,   816,   160,   403,  1261,  1461,  1066,  1678,   812,  1066,
     812,    48,   811,  1068,  1330,   160,   811,   228,   792,  1769,
     219,  1672,  1676,   732,  1675,  1769,   125,   245,   360,   103,
     125,  1462,   245,  1673,  1673,   153,   164,   385,   570,  1633,
    1634,   278,  1635,  1310,  1400,  1678,  1435,   817,  1524,  1520,
    1095,  1672,   111,   111,   127,   248,   368,   162,  1093,   904,
     811,  1462,   400,  1069,  1070,   811,  1326,  1187,   729,   811,
     811,  1184,  1185,  1186,  1678,  1182,  1182,   812,   816,  1112,
    1132,  1132,  1133,    23,    35,    49,   600,   625,  1132,  1142,
    1150,  1151,  1152,  1127,   811,  1152,    62,   621,  1118,  1152,
    1152,    62,   622,   622,   625,   811,  1133,  1127,  1127,  1152,
    1132,  1133,   440,  1105,  1157,    27,    71,    75,    77,   125,
     366,   371,   377,   417,   496,   546,   603,   705,   748,   749,
    1108,  1111,  1135,  1136,  1137,  1148,  1156,  1181,  1333,    35,
    1132,  1153,  1132,  1132,  1133,   811,  1126,  1134,  1125,   125,
     125,  1181,  1112,  1678,  1148,  1148,   565,     9,   186,  1241,
    1450,  1678,  1678,   246,  1272,   812,   803,  1093,   372,   803,
    1847,  1850,   366,   415,    25,   168,   907,   582,   137,   152,
     909,  1806,  1428,  1428,  1425,   812,   847,   848,  1678,   812,
     852,   853,  1678,  1687,   812,   855,   856,  1670,  1671,   811,
     812,   850,   884,   885,  1461,  1185,  1510,  1510,  1093,   900,
     383,  1185,   352,   713,   714,   715,  1678,  1672,  1054,  1054,
    1462,  1024,  1760,   228,  1761,  1762,  1764,  1210,  1844,   811,
    1667,   812,  1094,   472,   377,  1815,   123,   247,   434,   549,
    1101,   811,   130,   241,   608,  1019,  1429,  1326,   122,   290,
     372,   593,  1152,   372,   372,   812,  1384,   245,  1659,  1429,
    1429,  1326,  1382,  1662,  1649,   812,  1326,  1326,  1386,    44,
     354,   812,   636,  1347,  1326,  1429,  1326,  1326,  1326,  1326,
     812,   812,   812,  1462,   812,   812,  1461,  1360,   812,   400,
    1367,  1326,  1361,  1361,   197,  1359,  1384,   125,   162,   371,
    1413,  1415,  1416,  1417,   812,  1386,  1600,   432,    56,    66,
      76,    90,    91,    92,   106,   333,   350,   471,   488,   550,
     567,   964,   963,   582,   210,   636,  1775,   812,  1520,    21,
    1516,   377,  1517,   377,  1326,  1832,  1299,   269,    97,  1628,
    1669,   812,   816,  1509,  1504,  1505,   812,   816,  1513,   816,
     951,   197,  1752,  1491,   611,  1753,   816,  1441,  1392,   821,
     258,  1399,  1399,   258,   258,   377,   614,   377,   614,   192,
     231,   613,  1419,  1420,  1421,  1422,  1423,  1326,  1447,  1663,
    1326,   697,  1443,  1437,  1755,  1755,  1462,  1672,  1672,   892,
    1672,   160,   126,  1262,   812,   816,   812,  1061,  1069,   812,
    1462,  1065,  1066,    48,    21,  1760,   403,  1760,  1462,   125,
     722,   125,  1462,    48,    48,   153,    48,  1634,   536,   570,
    1636,  1637,  1435,  1435,  1435,   477,  1036,  1185,  1678,   812,
     816,  1185,   812,   811,  1185,  1326,   812,   816,   811,  1454,
    1103,  1105,    35,    23,   600,  1142,    35,  1152,  1143,  1188,
    1649,  1152,   625,  1188,  1152,   508,   606,   650,  1129,  1130,
    1131,  1667,  1241,  1147,   125,   148,   187,  1138,  1672,   115,
     575,   578,   803,   804,   811,  1140,  1141,  1651,  1652,  1653,
    1654,   608,   125,   125,   139,   331,  1139,   263,  1464,  1510,
    1510,  1107,    71,  1137,   203,  1113,   263,   371,   723,  1153,
    1152,  1153,  1129,   372,  1129,  1129,   811,  1652,  1241,  1667,
    1678,   811,   372,  1846,   372,   415,  1326,  1326,   377,   913,
     918,   377,    77,   914,    21,   614,   636,  1276,   812,   816,
     812,   816,   817,   812,   816,   848,   812,   816,   812,   816,
     812,  1054,  1054,  1033,   811,   812,  1670,  1670,  1670,  1670,
     636,  1209,  1848,  1185,   812,  1055,  1101,   487,   926,   927,
     928,  1678,   515,  1821,   377,   812,   812,   812,   812,   812,
     812,   816,  1338,  1673,   812,   812,   812,   816,  1360,   812,
     816,   812,   341,   265,   427,   812,   812,   812,   812,   812,
     812,  1155,   816,    48,   387,  1368,   186,   266,  1358,  1651,
     812,  1416,  1417,   377,   812,   175,   285,  1753,   384,   210,
      21,  1778,  1435,  1516,  1678,  1517,   147,   372,   249,  1629,
     372,  1521,  1515,  1504,  1505,  1660,   812,  1511,  1753,   197,
    1491,  1648,   812,   258,   258,  1326,   811,  1326,   811,  1164,
    1164,  1420,   638,   816,  1448,  1363,  1444,  1445,  1443,  1672,
     160,   405,  1263,  1678,   216,   263,   812,   812,  1672,  1676,
     120,   120,  1649,  1649,    48,  1649,    48,    48,  1637,  1451,
    1451,   377,   812,   619,  1071,  1070,   812,  1183,  1184,   812,
     812,    77,   262,   748,   749,  1174,  1175,  1176,  1177,  1180,
    1181,  1186,   372,  1143,  1153,   812,   816,   812,  1131,   811,
    1158,  1656,  1656,  1326,  1140,   620,  1851,  1851,  1147,    15,
      21,  1326,  1226,  1227,  1069,  1429,   510,  1672,   143,  1219,
    1505,  1807,   111,   372,   848,   853,  1678,   856,   816,   811,
     885,   636,  1168,  1169,  1170,  1177,   903,  1171,  1172,  1173,
    1177,   228,  1682,  1849,   812,   515,   907,   812,   816,  1115,
    1672,   239,   249,   392,   929,   930,   931,   932,  1667,   372,
     812,    21,  1662,  1326,   341,   173,   812,  1461,  1447,    48,
     429,   481,   681,  1369,  1375,  1361,   377,   162,   698,  1775,
     384,  1685,  1456,  1517,  1441,   263,   417,  1630,  1631,  1491,
    1753,    73,  1409,  1427,  1427,   194,  1418,  1418,  1663,    21,
     816,  1672,   160,  1255,   811,  1062,   111,   464,  1841,  1842,
    1649,  1649,  1649,   276,  1460,  1460,   162,  1168,   249,   272,
      77,   111,   235,   321,   339,   363,   563,  1082,  1083,  1084,
    1579,  1171,   812,   816,  1174,  1454,  1672,  1510,  1510,  1510,
    1176,   812,  1152,  1649,  1152,  1159,  1678,   318,  1160,   812,
     811,   812,   812,   908,   915,   916,   636,  1808,  1673,   673,
     848,   848,   397,  1233,  1170,   812,  1233,  1173,    48,  1174,
    1672,   912,   913,  1816,   928,  1148,   812,   816,  1678,   194,
     812,   112,   812,   812,  1453,    33,   103,   245,   696,  1370,
    1371,  1372,  1650,  1656,  1778,   636,  1777,   608,   263,   246,
    1491,   811,   812,   812,   812,   212,   258,   387,   811,   811,
    1364,  1445,  1672,   893,  1330,   811,   136,   368,   534,  1459,
     811,  1073,  1075,   573,  1510,   136,   136,  1510,  1510,  1510,
    1510,   811,  1079,  1084,   158,  1157,  1184,  1461,  1851,  1851,
    1454,   812,   816,   198,   399,   509,   377,  1161,  1326,   537,
     910,    54,    68,   182,   230,   257,   270,   380,   473,   917,
     968,   970,   971,   972,   974,   975,   976,   977,   978,   979,
     981,   989,   990,   993,  1004,  1007,  1009,  1010,  1669,  1680,
    1691,  1692,  1693,  1696,    53,    64,   282,   812,   816,  1669,
    1464,  1233,   909,   472,  1822,   931,  1115,   149,  1127,   245,
     696,  1371,  1373,  1650,  1656,   483,  1326,   691,   678,  1374,
     691,   691,   653,  1520,   387,   565,   700,  1410,  1411,  1678,
    1433,    48,    48,  1424,  1426,   812,  1066,  1510,   534,   811,
    1074,  1075,  1076,   326,  1072,  1075,  1672,  1510,  1510,  1464,
    1464,  1462,  1678,   554,  1080,  1081,  1510,  1678,   130,   608,
     812,  1326,   155,   911,   991,   994,  1678,   197,   362,   982,
     969,  1680,  1680,  1678,   973,   828,   292,   454,   635,  1013,
      32,  1011,   818,    64,   384,    64,   848,   914,  1115,   920,
    1148,   483,   812,  1326,   680,    19,   680,   680,  1429,   103,
     212,   368,   695,    13,   125,   364,  1754,  1667,   702,   812,
     816,   194,  1115,   812,   812,   553,  1067,   812,  1674,   812,
     816,   326,  1077,  1078,  1330,  1672,  1672,  1682,   812,   816,
    1682,    52,   368,   469,   500,  1162,  1162,   547,   628,  1114,
    1326,  1326,   633,   996,  1000,   197,  1678,   984,   985,  1326,
     934,   967,   968,   970,   972,   974,   976,   977,   978,   979,
     981,   989,  1004,  1007,  1009,   934,  1014,  1012,  1005,  1008,
     384,   384,   812,   143,  1148,   134,   921,   922,  1333,  1823,
     191,   412,  1809,  1810,  1429,  1373,   691,   483,   688,  1700,
    1400,  1648,  1411,   701,  1148,  1462,  1067,  1842,  1075,   812,
     816,  1082,  1081,     6,   125,   371,   377,   377,  1135,   992,
    1001,   150,  1000,  1003,   246,   154,  1326,   154,   967,   814,
     607,  1326,   935,  1013,  1011,   915,  1817,   134,   967,  1682,
    1812,   680,  1144,  1409,   171,  1412,  1078,   608,   130,   633,
     995,   997,  1326,   934,   154,   980,   230,   986,   292,   814,
    1016,  1015,   124,   933,   936,  1006,  1680,  1006,   920,   967,
     481,  1638,   702,  1162,  1162,   998,   997,  1003,  1002,    54,
     983,  1678,   574,  1326,   143,    95,   172,   939,   965,  1678,
     154,   967,   814,  1818,   228,  1632,  1648,  1326,   154,   574,
     816,   934,  1017,   934,   215,   816,  1115,    86,   105,   814,
     967,    48,  1635,  1413,  1414,  1416,   999,    54,   934,  1678,
     987,   154,   154,   194,  1678,  1148,   194,   194,  1649,   231,
    1639,  1415,  1417,   574,   150,   151,   988,   454,   635,   937,
     125,   966,   942,   943,  1461,   938,   372,   811,  1641,   377,
     934,   934,   984,   520,   522,   940,   941,   942,   945,  1333,
    1678,  1326,  1300,   278,   481,  1640,   812,   815,  1642,  1643,
    1665,   500,  1644,   816,   967,   196,  1682,   812,   816,  1645,
    1646,  1665,    12,  1647,   941,  1643,   816,  1509,   160,  1646,
    1515,   795
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD, parse_tree)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD, parse_tree)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}

/* Prevent warnings from -Wmissing-prototypes.  */
#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */





/*-------------------------.
| yyparse or yypush_parse.  |
`-------------------------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
int
yyparse (YYTHD, parse_tree)
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval;

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks thru separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[2];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yytoken = 0;
  yyss = yyssa;
  yyvs = yyvsa;
  yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */
  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;

#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 1;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:

/* Line 1455 of yacc.c  */
#line 2228 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].item);
          }
    break;

  case 4:

/* Line 1455 of yacc.c  */
#line 2233 "sql_yacc.yy"
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[(2) - (3)].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[(2) - (3)].partition_clause)->part_info;
          }
    break;

  case 5:

/* Line 1455 of yacc.c  */
#line 2243 "sql_yacc.yy"
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[(2) - (6)].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[(4) - (6)].item), &(yyvsp[(4) - (6)].item));
            gcol_info->expr_item= (yyvsp[(4) - (6)].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
    break;

  case 6:

/* Line 1455 of yacc.c  */
#line 2261 "sql_yacc.yy"
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].subquery);
          }
    break;

  case 7:

/* Line 1455 of yacc.c  */
#line 2265 "sql_yacc.yy"
    {
           ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].item);
         }
    break;

  case 8:

/* Line 1455 of yacc.c  */
#line 2273 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 9:

/* Line 1455 of yacc.c  */
#line 2285 "sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 11:

/* Line 1455 of yacc.c  */
#line 2310 "sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 14:

/* Line 1455 of yacc.c  */
#line 2322 "sql_yacc.yy"
    { *parse_tree= (yyvsp[(1) - (1)].top_level_node); }
    break;

  case 16:

/* Line 1455 of yacc.c  */
#line 2328 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 17:

/* Line 1455 of yacc.c  */
#line 2329 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 18:

/* Line 1455 of yacc.c  */
#line 2330 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 20:

/* Line 1455 of yacc.c  */
#line 2332 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 21:

/* Line 1455 of yacc.c  */
#line 2333 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 23:

/* Line 1455 of yacc.c  */
#line 2335 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 24:

/* Line 1455 of yacc.c  */
#line 2336 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 25:

/* Line 1455 of yacc.c  */
#line 2337 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 27:

/* Line 1455 of yacc.c  */
#line 2339 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 28:

/* Line 1455 of yacc.c  */
#line 2340 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 30:

/* Line 1455 of yacc.c  */
#line 2342 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 32:

/* Line 1455 of yacc.c  */
#line 2344 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 34:

/* Line 1455 of yacc.c  */
#line 2346 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 35:

/* Line 1455 of yacc.c  */
#line 2347 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 36:

/* Line 1455 of yacc.c  */
#line 2348 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 37:

/* Line 1455 of yacc.c  */
#line 2349 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 43:

/* Line 1455 of yacc.c  */
#line 2355 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 47:

/* Line 1455 of yacc.c  */
#line 2359 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 48:

/* Line 1455 of yacc.c  */
#line 2360 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 49:

/* Line 1455 of yacc.c  */
#line 2361 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 51:

/* Line 1455 of yacc.c  */
#line 2363 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 52:

/* Line 1455 of yacc.c  */
#line 2364 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 55:

/* Line 1455 of yacc.c  */
#line 2367 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 57:

/* Line 1455 of yacc.c  */
#line 2369 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 58:

/* Line 1455 of yacc.c  */
#line 2370 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 59:

/* Line 1455 of yacc.c  */
#line 2371 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 60:

/* Line 1455 of yacc.c  */
#line 2372 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 61:

/* Line 1455 of yacc.c  */
#line 2373 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 62:

/* Line 1455 of yacc.c  */
#line 2374 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 63:

/* Line 1455 of yacc.c  */
#line 2375 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 65:

/* Line 1455 of yacc.c  */
#line 2377 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 66:

/* Line 1455 of yacc.c  */
#line 2378 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 67:

/* Line 1455 of yacc.c  */
#line 2379 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 68:

/* Line 1455 of yacc.c  */
#line 2380 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 70:

/* Line 1455 of yacc.c  */
#line 2382 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 71:

/* Line 1455 of yacc.c  */
#line 2383 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 74:

/* Line 1455 of yacc.c  */
#line 2386 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 76:

/* Line 1455 of yacc.c  */
#line 2388 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 80:

/* Line 1455 of yacc.c  */
#line 2392 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 81:

/* Line 1455 of yacc.c  */
#line 2393 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 82:

/* Line 1455 of yacc.c  */
#line 2394 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 83:

/* Line 1455 of yacc.c  */
#line 2395 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 86:

/* Line 1455 of yacc.c  */
#line 2398 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 87:

/* Line 1455 of yacc.c  */
#line 2399 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 89:

/* Line 1455 of yacc.c  */
#line 2401 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 90:

/* Line 1455 of yacc.c  */
#line 2402 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 91:

/* Line 1455 of yacc.c  */
#line 2403 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 93:

/* Line 1455 of yacc.c  */
#line 2405 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 141:

/* Line 1455 of yacc.c  */
#line 2453 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 142:

/* Line 1455 of yacc.c  */
#line 2454 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 143:

/* Line 1455 of yacc.c  */
#line 2455 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 144:

/* Line 1455 of yacc.c  */
#line 2456 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 146:

/* Line 1455 of yacc.c  */
#line 2458 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 147:

/* Line 1455 of yacc.c  */
#line 2459 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 149:

/* Line 1455 of yacc.c  */
#line 2461 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 150:

/* Line 1455 of yacc.c  */
#line 2462 "sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 151:

/* Line 1455 of yacc.c  */
#line 2467 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 154:

/* Line 1455 of yacc.c  */
#line 2482 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 155:

/* Line 1455 of yacc.c  */
#line 2502 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
    break;

  case 156:

/* Line 1455 of yacc.c  */
#line 2509 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
    break;

  case 157:

/* Line 1455 of yacc.c  */
#line 2519 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 158:

/* Line 1455 of yacc.c  */
#line 2526 "sql_yacc.yy"
    {}
    break;

  case 163:

/* Line 1455 of yacc.c  */
#line 2541 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 164:

/* Line 1455 of yacc.c  */
#line 2553 "sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 165:

/* Line 1455 of yacc.c  */
#line 2561 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 166:

/* Line 1455 of yacc.c  */
#line 2572 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
    break;

  case 168:

/* Line 1455 of yacc.c  */
#line 2581 "sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 169:

/* Line 1455 of yacc.c  */
#line 2592 "sql_yacc.yy"
    {
            if (Lex->set_channel_name((yyvsp[(6) - (6)].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 170:

/* Line 1455 of yacc.c  */
#line 2597 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 171:

/* Line 1455 of yacc.c  */
#line 2607 "sql_yacc.yy"
    {
            if (Lex->set_channel_name((yyvsp[(6) - (6)].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 174:

/* Line 1455 of yacc.c  */
#line 2619 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 175:

/* Line 1455 of yacc.c  */
#line 2626 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 176:

/* Line 1455 of yacc.c  */
#line 2633 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 177:

/* Line 1455 of yacc.c  */
#line 2640 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 178:

/* Line 1455 of yacc.c  */
#line 2647 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 179:

/* Line 1455 of yacc.c  */
#line 2654 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 180:

/* Line 1455 of yacc.c  */
#line 2662 "sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 181:

/* Line 1455 of yacc.c  */
#line 2671 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 182:

/* Line 1455 of yacc.c  */
#line 2677 "sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 183:

/* Line 1455 of yacc.c  */
#line 2684 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 184:

/* Line 1455 of yacc.c  */
#line 2691 "sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 185:

/* Line 1455 of yacc.c  */
#line 2699 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 186:

/* Line 1455 of yacc.c  */
#line 2708 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 187:

/* Line 1455 of yacc.c  */
#line 2714 "sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 188:

/* Line 1455 of yacc.c  */
#line 2720 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 189:

/* Line 1455 of yacc.c  */
#line 2728 "sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 190:

/* Line 1455 of yacc.c  */
#line 2736 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 191:

/* Line 1455 of yacc.c  */
#line 2742 "sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 192:

/* Line 1455 of yacc.c  */
#line 2749 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 193:

/* Line 1455 of yacc.c  */
#line 2756 "sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 194:

/* Line 1455 of yacc.c  */
#line 2764 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[(1) - (3)].lexer.lex_str).str, (yyvsp[(1) - (3)].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 195:

/* Line 1455 of yacc.c  */
#line 2776 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 196:

/* Line 1455 of yacc.c  */
#line 2782 "sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 197:

/* Line 1455 of yacc.c  */
#line 2789 "sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 198:

/* Line 1455 of yacc.c  */
#line 2796 "sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 199:

/* Line 1455 of yacc.c  */
#line 2804 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 202:

/* Line 1455 of yacc.c  */
#line 2819 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
    break;

  case 204:

/* Line 1455 of yacc.c  */
#line 2829 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
    break;

  case 206:

/* Line 1455 of yacc.c  */
#line 2838 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
    break;

  case 208:

/* Line 1455 of yacc.c  */
#line 2848 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
    break;

  case 210:

/* Line 1455 of yacc.c  */
#line 2857 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
    break;

  case 212:

/* Line 1455 of yacc.c  */
#line 2866 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
    break;

  case 214:

/* Line 1455 of yacc.c  */
#line 2875 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
    break;

  case 216:

/* Line 1455 of yacc.c  */
#line 2884 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
    break;

  case 218:

/* Line 1455 of yacc.c  */
#line 2893 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
    break;

  case 220:

/* Line 1455 of yacc.c  */
#line 2902 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
    break;

  case 222:

/* Line 1455 of yacc.c  */
#line 2911 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
    break;

  case 224:

/* Line 1455 of yacc.c  */
#line 2920 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
    break;

  case 226:

/* Line 1455 of yacc.c  */
#line 2929 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
    break;

  case 228:

/* Line 1455 of yacc.c  */
#line 2938 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
    break;

  case 230:

/* Line 1455 of yacc.c  */
#line 2947 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
    break;

  case 232:

/* Line 1455 of yacc.c  */
#line 2956 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
    break;

  case 234:

/* Line 1455 of yacc.c  */
#line 2965 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
    break;

  case 236:

/* Line 1455 of yacc.c  */
#line 2974 "sql_yacc.yy"
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
    break;

  case 238:

/* Line 1455 of yacc.c  */
#line 2983 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
    break;

  case 240:

/* Line 1455 of yacc.c  */
#line 2992 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
    break;

  case 242:

/* Line 1455 of yacc.c  */
#line 3001 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
    break;

  case 244:

/* Line 1455 of yacc.c  */
#line 3010 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
    break;

  case 246:

/* Line 1455 of yacc.c  */
#line 3019 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
    break;

  case 248:

/* Line 1455 of yacc.c  */
#line 3028 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
    break;

  case 250:

/* Line 1455 of yacc.c  */
#line 3037 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
    break;

  case 252:

/* Line 1455 of yacc.c  */
#line 3046 "sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 253:

/* Line 1455 of yacc.c  */
#line 3050 "sql_yacc.yy"
    {
            Lex->mi.network_namespace = (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 254:

/* Line 1455 of yacc.c  */
#line 3054 "sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 255:

/* Line 1455 of yacc.c  */
#line 3058 "sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 256:

/* Line 1455 of yacc.c  */
#line 3062 "sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lexer.lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_SOURCE_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 257:

/* Line 1455 of yacc.c  */
#line 3072 "sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 258:

/* Line 1455 of yacc.c  */
#line 3076 "sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 259:

/* Line 1455 of yacc.c  */
#line 3080 "sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 260:

/* Line 1455 of yacc.c  */
#line 3085 "sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 261:

/* Line 1455 of yacc.c  */
#line 3096 "sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 262:

/* Line 1455 of yacc.c  */
#line 3101 "sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 263:

/* Line 1455 of yacc.c  */
#line 3105 "sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 264:

/* Line 1455 of yacc.c  */
#line 3109 "sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 266:

/* Line 1455 of yacc.c  */
#line 3114 "sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 267:

/* Line 1455 of yacc.c  */
#line 3118 "sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 268:

/* Line 1455 of yacc.c  */
#line 3122 "sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 269:

/* Line 1455 of yacc.c  */
#line 3126 "sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 270:

/* Line 1455 of yacc.c  */
#line 3131 "sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 271:

/* Line 1455 of yacc.c  */
#line 3135 "sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 272:

/* Line 1455 of yacc.c  */
#line 3139 "sql_yacc.yy"
    {
            Lex->mi.public_key_path= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 273:

/* Line 1455 of yacc.c  */
#line 3143 "sql_yacc.yy"
    {
            Lex->mi.get_public_key= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 274:

/* Line 1455 of yacc.c  */
#line 3149 "sql_yacc.yy"
    {
            Item *num= (yyvsp[(3) - (3)].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 275:

/* Line 1455 of yacc.c  */
#line 3183 "sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 276:

/* Line 1455 of yacc.c  */
#line 3187 "sql_yacc.yy"
    {
            Lex->mi.compression_algorithm = (yyvsp[(3) - (3)].lexer.lex_str).str;
           }
    break;

  case 277:

/* Line 1455 of yacc.c  */
#line 3191 "sql_yacc.yy"
    {
            Lex->mi.zstd_compression_level = (yyvsp[(3) - (3)].ulong_num);
           }
    break;

  case 278:

/* Line 1455 of yacc.c  */
#line 3195 "sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 280:

/* Line 1455 of yacc.c  */
#line 3202 "sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[(3) - (3)]).raw.start, (yylsp[(3) - (3)]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
    break;

  case 282:

/* Line 1455 of yacc.c  */
#line 3219 "sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[(3) - (3)]));
                MYSQL_YYABORT;
            }
          }
    break;

  case 284:

/* Line 1455 of yacc.c  */
#line 3236 "sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[(3) - (3)]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
    break;

  case 289:

/* Line 1455 of yacc.c  */
#line 3263 "sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 290:

/* Line 1455 of yacc.c  */
#line 3269 "sql_yacc.yy"
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[(1) - (1)].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[(1) - (1)].lex_user)->host.str;
          }
    break;

  case 291:

/* Line 1455 of yacc.c  */
#line 3275 "sql_yacc.yy"
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
    break;

  case 292:

/* Line 1455 of yacc.c  */
#line 3284 "sql_yacc.yy"
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
    break;

  case 293:

/* Line 1455 of yacc.c  */
#line 3288 "sql_yacc.yy"
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
    break;

  case 294:

/* Line 1455 of yacc.c  */
#line 3292 "sql_yacc.yy"
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
    break;

  case 295:

/* Line 1455 of yacc.c  */
#line 3296 "sql_yacc.yy"
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_GENERATE;
          }
    break;

  case 296:

/* Line 1455 of yacc.c  */
#line 3303 "sql_yacc.yy"
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
    break;

  case 297:

/* Line 1455 of yacc.c  */
#line 3307 "sql_yacc.yy"
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
    break;

  case 298:

/* Line 1455 of yacc.c  */
#line 3311 "sql_yacc.yy"
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[(1) - (1)].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[(1) - (1)].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 299:

/* Line 1455 of yacc.c  */
#line 3325 "sql_yacc.yy"
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[(1) - (1)].lexer.lex_str).str;
          }
    break;

  case 300:

/* Line 1455 of yacc.c  */
#line 3330 "sql_yacc.yy"
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
    break;

  case 301:

/* Line 1455 of yacc.c  */
#line 3338 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
    break;

  case 303:

/* Line 1455 of yacc.c  */
#line 3347 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
    break;

  case 305:

/* Line 1455 of yacc.c  */
#line 3356 "sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 306:

/* Line 1455 of yacc.c  */
#line 3360 "sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 307:

/* Line 1455 of yacc.c  */
#line 3376 "sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 308:

/* Line 1455 of yacc.c  */
#line 3380 "sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 309:

/* Line 1455 of yacc.c  */
#line 3390 "sql_yacc.yy"
    { (yyval.lex_cstr) = {}; }
    break;

  case 310:

/* Line 1455 of yacc.c  */
#line 3392 "sql_yacc.yy"
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)); }
    break;

  case 311:

/* Line 1455 of yacc.c  */
#line 3398 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table),
                                             (yyvsp[(7) - (9)].table_element_list),
                                             (yyvsp[(9) - (9)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_partitioning,
                                             (yyvsp[(9) - (9)].create_table_tail).on_duplicate,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_query_expression);
          }
    break;

  case 312:

/* Line 1455 of yacc.c  */
#line 3408 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (6)].is_not_empty), (yyvsp[(4) - (6)].is_not_empty), (yyvsp[(5) - (6)].table),
                                             NULL,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_partitioning,
                                             (yyvsp[(6) - (6)].create_table_tail).on_duplicate,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_query_expression);
          }
    break;

  case 313:

/* Line 1455 of yacc.c  */
#line 3418 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (7)].is_not_empty), (yyvsp[(4) - (7)].is_not_empty), (yyvsp[(5) - (7)].table), (yyvsp[(7) - (7)].table));
          }
    break;

  case 314:

/* Line 1455 of yacc.c  */
#line 3423 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(8) - (9)].table));
          }
    break;

  case 315:

/* Line 1455 of yacc.c  */
#line 3430 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[(3) - (4)].is_not_empty), (yyvsp[(4) - (4)].user_list));
          }
    break;

  case 316:

/* Line 1455 of yacc.c  */
#line 3440 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[(4) - (10)].lexer.lex_str)), (yyvsp[(7) - (10)].resource_group_type), (yyvsp[(8) - (10)].resource_group_vcpu_list_type), (yyvsp[(9) - (10)].resource_group_priority_type),
                                                 (yyvsp[(10) - (10)].resource_group_state_type).is_default ? true :
                                                 (yyvsp[(10) - (10)].resource_group_state_type).value);
          }
    break;

  case 317:

/* Line 1455 of yacc.c  */
#line 3449 "sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 318:

/* Line 1455 of yacc.c  */
#line 3457 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lexer.lex_str);
            lex->create_info->options= (yyvsp[(3) - (6)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 319:

/* Line 1455 of yacc.c  */
#line 3464 "sql_yacc.yy"
    {}
    break;

  case 320:

/* Line 1455 of yacc.c  */
#line 3469 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[(5) - (9)].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[(3) - (9)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 321:

/* Line 1455 of yacc.c  */
#line 3480 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[(4) - (7)].lexer.lex_str), pc, (yyvsp[(6) - (7)].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 322:

/* Line 1455 of yacc.c  */
#line 3500 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(6) - (6)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(6) - (6)].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(4) - (6)].lexer.lex_str), (yyvsp[(5) - (6)].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 323:

/* Line 1455 of yacc.c  */
#line 3519 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[(4) - (7)].lexer.lex_str), (yyvsp[(6) - (7)].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 324:

/* Line 1455 of yacc.c  */
#line 3539 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[(3) - (11)].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 325:

/* Line 1455 of yacc.c  */
#line 3556 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[(7) - (8)].ulonglong_number), *(yyvsp[(8) - (8)].sql_cmd_srs_attributes), true, false);
          }
    break;

  case 326:

/* Line 1455 of yacc.c  */
#line 3561 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[(6) - (7)].ulonglong_number), *(yyvsp[(7) - (7)].sql_cmd_srs_attributes), false, (yyvsp[(5) - (7)].is_not_empty));
          }
    break;

  case 327:

/* Line 1455 of yacc.c  */
#line 3568 "sql_yacc.yy"
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
    break;

  case 328:

/* Line 1455 of yacc.c  */
#line 3574 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[(1) - (3)].sql_cmd_srs_attributes)->srs_name= (yyvsp[(3) - (3)].lexer.lex_str);
            }
          }
    break;

  case 329:

/* Line 1455 of yacc.c  */
#line 3586 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[(1) - (3)].sql_cmd_srs_attributes)->definition= (yyvsp[(3) - (3)].lexer.lex_str);
            }
          }
    break;

  case 330:

/* Line 1455 of yacc.c  */
#line 3599 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (6)].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[(1) - (6)].sql_cmd_srs_attributes)->organization= (yyvsp[(3) - (6)].lexer.lex_str);
              (yyvsp[(1) - (6)].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[(6) - (6)].ulonglong_number);
            }
          }
    break;

  case 331:

/* Line 1455 of yacc.c  */
#line 3612 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[(1) - (3)].sql_cmd_srs_attributes)->description= (yyvsp[(3) - (3)].lexer.lex_str);
            }
          }
    break;

  case 332:

/* Line 1455 of yacc.c  */
#line 3627 "sql_yacc.yy"
    {
            (yyval.user_list)= 0;
          }
    break;

  case 333:

/* Line 1455 of yacc.c  */
#line 3632 "sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(3) - (3)].user_list);
          }
    break;

  case 334:

/* Line 1455 of yacc.c  */
#line 3641 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lexer.lex_str), (yyvsp[(5) - (12)].index_option),
                                             (yyvsp[(7) - (12)].table), (yyvsp[(9) - (12)].index_column_list), (yyvsp[(11) - (12)].index_options),
                                             (yyvsp[(12) - (12)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[(12) - (12)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 335:

/* Line 1455 of yacc.c  */
#line 3649 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[(4) - (11)].lexer.lex_str),
                                             NULL, (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 336:

/* Line 1455 of yacc.c  */
#line 3657 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[(4) - (11)].lexer.lex_str),
                                             NULL, (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 339:

/* Line 1455 of yacc.c  */
#line 3672 "sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 340:

/* Line 1455 of yacc.c  */
#line 3676 "sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 341:

/* Line 1455 of yacc.c  */
#line 3680 "sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 342:

/* Line 1455 of yacc.c  */
#line 3684 "sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 343:

/* Line 1455 of yacc.c  */
#line 3688 "sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 344:

/* Line 1455 of yacc.c  */
#line 3693 "sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 345:

/* Line 1455 of yacc.c  */
#line 3697 "sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 346:

/* Line 1455 of yacc.c  */
#line 3704 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info->options= (yyvsp[(2) - (3)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 347:

/* Line 1455 of yacc.c  */
#line 3724 "sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 348:

/* Line 1455 of yacc.c  */
#line 3735 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 350:

/* Line 1455 of yacc.c  */
#line 3744 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 351:

/* Line 1455 of yacc.c  */
#line 3752 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 352:

/* Line 1455 of yacc.c  */
#line 3754 "sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 353:

/* Line 1455 of yacc.c  */
#line 3760 "sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 354:

/* Line 1455 of yacc.c  */
#line 3766 "sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 355:

/* Line 1455 of yacc.c  */
#line 3775 "sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 356:

/* Line 1455 of yacc.c  */
#line 3782 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 358:

/* Line 1455 of yacc.c  */
#line 3792 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 359:

/* Line 1455 of yacc.c  */
#line 3800 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 361:

/* Line 1455 of yacc.c  */
#line 3806 "sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 362:

/* Line 1455 of yacc.c  */
#line 3812 "sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 363:

/* Line 1455 of yacc.c  */
#line 3820 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 364:

/* Line 1455 of yacc.c  */
#line 3822 "sql_yacc.yy"
    {
            Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lexer.lex_str);
            (yyval.num)= 1;
          }
    break;

  case 365:

/* Line 1455 of yacc.c  */
#line 3829 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 366:

/* Line 1455 of yacc.c  */
#line 3875 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
    break;

  case 380:

/* Line 1455 of yacc.c  */
#line 3904 "sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[(1) - (3)].lexer.lex_str)), (yyvsp[(3) - (3)].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 381:

/* Line 1455 of yacc.c  */
#line 3918 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[(1) - (1)].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 382:

/* Line 1455 of yacc.c  */
#line 3936 "sql_yacc.yy"
    {}
    break;

  case 383:

/* Line 1455 of yacc.c  */
#line 3937 "sql_yacc.yy"
    {}
    break;

  case 384:

/* Line 1455 of yacc.c  */
#line 3941 "sql_yacc.yy"
    {}
    break;

  case 385:

/* Line 1455 of yacc.c  */
#line 3942 "sql_yacc.yy"
    {}
    break;

  case 386:

/* Line 1455 of yacc.c  */
#line 3948 "sql_yacc.yy"
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str)); }
    break;

  case 387:

/* Line 1455 of yacc.c  */
#line 3950 "sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 388:

/* Line 1455 of yacc.c  */
#line 3952 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 389:

/* Line 1455 of yacc.c  */
#line 3954 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 390:

/* Line 1455 of yacc.c  */
#line 3956 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 391:

/* Line 1455 of yacc.c  */
#line 3958 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 392:

/* Line 1455 of yacc.c  */
#line 3960 "sql_yacc.yy"
    {}
    break;

  case 393:

/* Line 1455 of yacc.c  */
#line 3965 "sql_yacc.yy"
    { }
    break;

  case 394:

/* Line 1455 of yacc.c  */
#line 3966 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= true; }
    break;

  case 395:

/* Line 1455 of yacc.c  */
#line 3967 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= false; }
    break;

  case 396:

/* Line 1455 of yacc.c  */
#line 3972 "sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 397:

/* Line 1455 of yacc.c  */
#line 3976 "sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 398:

/* Line 1455 of yacc.c  */
#line 3983 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[(2) - (3)].spname), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 399:

/* Line 1455 of yacc.c  */
#line 3989 "sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 400:

/* Line 1455 of yacc.c  */
#line 3991 "sql_yacc.yy"
    {
              (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2);
            }
    break;

  case 405:

/* Line 1455 of yacc.c  */
#line 4009 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[(2) - (3)].type));
            enum_field_types field_type= (yyvsp[(2) - (3)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(2) - (3)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[(3) - (3)].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(1) - (3)].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(1) - (3)].lexer.lex_str).str, (yyvsp[(1) - (3)].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(2) - (3)].type)->get_length(), (yyvsp[(2) - (3)].type)->get_dec(),
                                      (yyvsp[(2) - (3)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[(2) - (3)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(3) - (3)].lexer.charset) != nullptr, (yyvsp[(2) - (3)].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
    break;

  case 410:

/* Line 1455 of yacc.c  */
#line 4071 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(2) - (4)].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(2) - (4)].lexer.lex_str).str, (yyvsp[(2) - (4)].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(2) - (4)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[(3) - (4)].type));
            enum_field_types field_type= (yyvsp[(3) - (4)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (4)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[(4) - (4)].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(2) - (4)].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(3) - (4)].type)->get_length(), (yyvsp[(3) - (4)].type)->get_dec(),
                                      (yyvsp[(3) - (4)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[(3) - (4)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(4) - (4)].lexer.charset) != nullptr, (yyvsp[(3) - (4)].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
    break;

  case 411:

/* Line 1455 of yacc.c  */
#line 4120 "sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 412:

/* Line 1455 of yacc.c  */
#line 4121 "sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 413:

/* Line 1455 of yacc.c  */
#line 4122 "sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 414:

/* Line 1455 of yacc.c  */
#line 4123 "sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 415:

/* Line 1455 of yacc.c  */
#line 4127 "sql_yacc.yy"
    {}
    break;

  case 417:

/* Line 1455 of yacc.c  */
#line 4132 "sql_yacc.yy"
    {}
    break;

  case 419:

/* Line 1455 of yacc.c  */
#line 4138 "sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 420:

/* Line 1455 of yacc.c  */
#line 4142 "sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 421:

/* Line 1455 of yacc.c  */
#line 4170 "sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[(2) - (5)].num));

            CONTEXTUALIZE((yyvsp[(3) - (5)].type));
            enum enum_field_types var_type= (yyvsp[(3) - (5)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (5)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[(4) - (5)].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[(5) - (5)].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[(5) - (5)].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[(3) - (5)].type)->get_length(), (yyvsp[(3) - (5)].type)->get_dec(),
                                        (yyvsp[(3) - (5)].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[(3) - (5)].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[(4) - (5)].lexer.charset) != nullptr, (yyvsp[(3) - (5)].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 422:

/* Line 1455 of yacc.c  */
#line 4265 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lexer.lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 423:

/* Line 1455 of yacc.c  */
#line 4282 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 424:

/* Line 1455 of yacc.c  */
#line 4323 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 425:

/* Line 1455 of yacc.c  */
#line 4360 "sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 426:

/* Line 1455 of yacc.c  */
#line 4369 "sql_yacc.yy"
    {             /*$7*/
            MAKE_CMD((yyvsp[(6) - (6)].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 427:

/* Line 1455 of yacc.c  */
#line 4433 "sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 428:

/* Line 1455 of yacc.c  */
#line 4434 "sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 429:

/* Line 1455 of yacc.c  */
#line 4440 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 430:

/* Line 1455 of yacc.c  */
#line 4442 "sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 431:

/* Line 1455 of yacc.c  */
#line 4447 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 432:

/* Line 1455 of yacc.c  */
#line 4470 "sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 434:

/* Line 1455 of yacc.c  */
#line 4485 "sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lexer.lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(3) - (3)].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 435:

/* Line 1455 of yacc.c  */
#line 4506 "sql_yacc.yy"
    {}
    break;

  case 436:

/* Line 1455 of yacc.c  */
#line 4507 "sql_yacc.yy"
    {}
    break;

  case 437:

/* Line 1455 of yacc.c  */
#line 4512 "sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 438:

/* Line 1455 of yacc.c  */
#line 4516 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 439:

/* Line 1455 of yacc.c  */
#line 4529 "sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 440:

/* Line 1455 of yacc.c  */
#line 4535 "sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 441:

/* Line 1455 of yacc.c  */
#line 4541 "sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 442:

/* Line 1455 of yacc.c  */
#line 4550 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 443:

/* Line 1455 of yacc.c  */
#line 4563 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 444:

/* Line 1455 of yacc.c  */
#line 4589 "sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 445:

/* Line 1455 of yacc.c  */
#line 4594 "sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 446:

/* Line 1455 of yacc.c  */
#line 4596 "sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 447:

/* Line 1455 of yacc.c  */
#line 4601 "sql_yacc.yy"
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
    break;

  case 448:

/* Line 1455 of yacc.c  */
#line 4603 "sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 449:

/* Line 1455 of yacc.c  */
#line 4608 "sql_yacc.yy"
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 450:

/* Line 1455 of yacc.c  */
#line 4615 "sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 451:

/* Line 1455 of yacc.c  */
#line 4627 "sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 452:

/* Line 1455 of yacc.c  */
#line 4629 "sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 453:

/* Line 1455 of yacc.c  */
#line 4631 "sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 454:

/* Line 1455 of yacc.c  */
#line 4637 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 455:

/* Line 1455 of yacc.c  */
#line 4639 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 456:

/* Line 1455 of yacc.c  */
#line 4641 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 457:

/* Line 1455 of yacc.c  */
#line 4643 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 458:

/* Line 1455 of yacc.c  */
#line 4645 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 459:

/* Line 1455 of yacc.c  */
#line 4647 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 460:

/* Line 1455 of yacc.c  */
#line 4649 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 461:

/* Line 1455 of yacc.c  */
#line 4651 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 462:

/* Line 1455 of yacc.c  */
#line 4653 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 463:

/* Line 1455 of yacc.c  */
#line 4655 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 464:

/* Line 1455 of yacc.c  */
#line 4657 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 465:

/* Line 1455 of yacc.c  */
#line 4659 "sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 466:

/* Line 1455 of yacc.c  */
#line 4664 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 467:

/* Line 1455 of yacc.c  */
#line 4678 "sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 468:

/* Line 1455 of yacc.c  */
#line 4694 "sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 469:

/* Line 1455 of yacc.c  */
#line 4696 "sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 470:

/* Line 1455 of yacc.c  */
#line 4698 "sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 471:

/* Line 1455 of yacc.c  */
#line 4703 "sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 472:

/* Line 1455 of yacc.c  */
#line 4709 "sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 473:

/* Line 1455 of yacc.c  */
#line 4718 "sql_yacc.yy"
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 474:

/* Line 1455 of yacc.c  */
#line 4724 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 475:

/* Line 1455 of yacc.c  */
#line 4733 "sql_yacc.yy"
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 476:

/* Line 1455 of yacc.c  */
#line 4741 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 477:

/* Line 1455 of yacc.c  */
#line 4769 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 478:

/* Line 1455 of yacc.c  */
#line 4777 "sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 479:

/* Line 1455 of yacc.c  */
#line 4779 "sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 480:

/* Line 1455 of yacc.c  */
#line 4788 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 481:

/* Line 1455 of yacc.c  */
#line 4793 "sql_yacc.yy"
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 482:

/* Line 1455 of yacc.c  */
#line 4799 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 483:

/* Line 1455 of yacc.c  */
#line 4808 "sql_yacc.yy"
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 484:

/* Line 1455 of yacc.c  */
#line 4816 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 485:

/* Line 1455 of yacc.c  */
#line 4818 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 486:

/* Line 1455 of yacc.c  */
#line 4820 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 487:

/* Line 1455 of yacc.c  */
#line 4822 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 488:

/* Line 1455 of yacc.c  */
#line 4824 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 489:

/* Line 1455 of yacc.c  */
#line 4826 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 490:

/* Line 1455 of yacc.c  */
#line 4828 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 491:

/* Line 1455 of yacc.c  */
#line 4830 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 492:

/* Line 1455 of yacc.c  */
#line 4832 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 493:

/* Line 1455 of yacc.c  */
#line 4834 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 494:

/* Line 1455 of yacc.c  */
#line 4836 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 495:

/* Line 1455 of yacc.c  */
#line 4838 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 496:

/* Line 1455 of yacc.c  */
#line 4840 "sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 497:

/* Line 1455 of yacc.c  */
#line 4845 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 498:

/* Line 1455 of yacc.c  */
#line 4865 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 499:

/* Line 1455 of yacc.c  */
#line 4888 "sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
    break;

  case 500:

/* Line 1455 of yacc.c  */
#line 4893 "sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= (yylsp[(1) - (2)]).raw.end;
            (yyval.sp_default).expr= (yyvsp[(2) - (2)].item);
          }
    break;

  case 514:

/* Line 1455 of yacc.c  */
#line 4917 "sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 515:

/* Line 1455 of yacc.c  */
#line 4919 "sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 516:

/* Line 1455 of yacc.c  */
#line 4927 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 517:

/* Line 1455 of yacc.c  */
#line 4936 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[(2) - (2)].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 518:

/* Line 1455 of yacc.c  */
#line 4992 "sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 519:

/* Line 1455 of yacc.c  */
#line 5000 "sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 520:

/* Line 1455 of yacc.c  */
#line 5048 "sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
    break;

  case 521:

/* Line 1455 of yacc.c  */
#line 5059 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 522:

/* Line 1455 of yacc.c  */
#line 5071 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 523:

/* Line 1455 of yacc.c  */
#line 5128 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 524:

/* Line 1455 of yacc.c  */
#line 5175 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 525:

/* Line 1455 of yacc.c  */
#line 5198 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 526:

/* Line 1455 of yacc.c  */
#line 5218 "sql_yacc.yy"
    {}
    break;

  case 527:

/* Line 1455 of yacc.c  */
#line 5223 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 531:

/* Line 1455 of yacc.c  */
#line 5252 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 532:

/* Line 1455 of yacc.c  */
#line 5270 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 533:

/* Line 1455 of yacc.c  */
#line 5290 "sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 534:

/* Line 1455 of yacc.c  */
#line 5298 "sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[(0) - (2)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 535:

/* Line 1455 of yacc.c  */
#line 5336 "sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
    break;

  case 536:

/* Line 1455 of yacc.c  */
#line 5354 "sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 542:

/* Line 1455 of yacc.c  */
#line 5377 "sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
    break;

  case 543:

/* Line 1455 of yacc.c  */
#line 5387 "sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 544:

/* Line 1455 of yacc.c  */
#line 5432 "sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 545:

/* Line 1455 of yacc.c  */
#line 5439 "sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 546:

/* Line 1455 of yacc.c  */
#line 5446 "sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 551:

/* Line 1455 of yacc.c  */
#line 5463 "sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 552:

/* Line 1455 of yacc.c  */
#line 5471 "sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 553:

/* Line 1455 of yacc.c  */
#line 5513 "sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 554:

/* Line 1455 of yacc.c  */
#line 5521 "sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 555:

/* Line 1455 of yacc.c  */
#line 5529 "sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 556:

/* Line 1455 of yacc.c  */
#line 5567 "sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 557:

/* Line 1455 of yacc.c  */
#line 5575 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 559:

/* Line 1455 of yacc.c  */
#line 5593 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 560:

/* Line 1455 of yacc.c  */
#line 5611 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 561:

/* Line 1455 of yacc.c  */
#line 5630 "sql_yacc.yy"
    { (yyval.lex_cstr)= NULL_CSTR; }
    break;

  case 562:

/* Line 1455 of yacc.c  */
#line 5631 "sql_yacc.yy"
    { (yyval.lex_cstr)= (yyvsp[(1) - (1)].lex_cstr); }
    break;

  case 563:

/* Line 1455 of yacc.c  */
#line 5636 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 564:

/* Line 1455 of yacc.c  */
#line 5652 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 565:

/* Line 1455 of yacc.c  */
#line 5669 "sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 566:

/* Line 1455 of yacc.c  */
#line 5680 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 567:

/* Line 1455 of yacc.c  */
#line 5688 "sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 568:

/* Line 1455 of yacc.c  */
#line 5703 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 569:

/* Line 1455 of yacc.c  */
#line 5737 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 570:

/* Line 1455 of yacc.c  */
#line 5750 "sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 571:

/* Line 1455 of yacc.c  */
#line 5758 "sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 572:

/* Line 1455 of yacc.c  */
#line 5799 "sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 573:

/* Line 1455 of yacc.c  */
#line 5816 "sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 574:

/* Line 1455 of yacc.c  */
#line 5824 "sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[(3) - (5)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 576:

/* Line 1455 of yacc.c  */
#line 5867 "sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 577:

/* Line 1455 of yacc.c  */
#line 5869 "sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 578:

/* Line 1455 of yacc.c  */
#line 5874 "sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 579:

/* Line 1455 of yacc.c  */
#line 5876 "sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 580:

/* Line 1455 of yacc.c  */
#line 5878 "sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 581:

/* Line 1455 of yacc.c  */
#line 5892 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
    break;

  case 582:

/* Line 1455 of yacc.c  */
#line 5894 "sql_yacc.yy"
    {
        (yyval.lexer.lex_str) = (yyvsp[(2) - (2)].lexer.lex_str);
      }
    break;

  case 583:

/* Line 1455 of yacc.c  */
#line 5900 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
    break;

  case 584:

/* Line 1455 of yacc.c  */
#line 5902 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str)= (yyvsp[(4) - (4)].lexer.lex_str);
          }
    break;

  case 585:

/* Line 1455 of yacc.c  */
#line 5908 "sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 587:

/* Line 1455 of yacc.c  */
#line 5914 "sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 588:

/* Line 1455 of yacc.c  */
#line 5920 "sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 600:

/* Line 1455 of yacc.c  */
#line 5942 "sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 602:

/* Line 1455 of yacc.c  */
#line 5948 "sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 603:

/* Line 1455 of yacc.c  */
#line 5954 "sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 611:

/* Line 1455 of yacc.c  */
#line 5972 "sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 613:

/* Line 1455 of yacc.c  */
#line 5978 "sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 614:

/* Line 1455 of yacc.c  */
#line 5984 "sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 616:

/* Line 1455 of yacc.c  */
#line 5996 "sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 618:

/* Line 1455 of yacc.c  */
#line 6002 "sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 619:

/* Line 1455 of yacc.c  */
#line 6008 "sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 627:

/* Line 1455 of yacc.c  */
#line 6026 "sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 629:

/* Line 1455 of yacc.c  */
#line 6032 "sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 630:

/* Line 1455 of yacc.c  */
#line 6038 "sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 634:

/* Line 1455 of yacc.c  */
#line 6052 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= (yyvsp[(2) - (2)].lexer.lex_str); }
    break;

  case 635:

/* Line 1455 of yacc.c  */
#line 6056 "sql_yacc.yy"
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
    break;

  case 636:

/* Line 1455 of yacc.c  */
#line 6057 "sql_yacc.yy"
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
    break;

  case 637:

/* Line 1455 of yacc.c  */
#line 6061 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= (yyvsp[(2) - (2)].lexer.lex_str); }
    break;

  case 638:

/* Line 1455 of yacc.c  */
#line 6066 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 639:

/* Line 1455 of yacc.c  */
#line 6073 "sql_yacc.yy"
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[(1) - (1)].ulonglong_number));
          }
    break;

  case 640:

/* Line 1455 of yacc.c  */
#line 6079 "sql_yacc.yy"
    { (yyval.ulonglong_number) = (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 641:

/* Line 1455 of yacc.c  */
#line 6084 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 642:

/* Line 1455 of yacc.c  */
#line 6091 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 643:

/* Line 1455 of yacc.c  */
#line 6098 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 644:

/* Line 1455 of yacc.c  */
#line 6105 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 645:

/* Line 1455 of yacc.c  */
#line 6112 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 646:

/* Line 1455 of yacc.c  */
#line 6119 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 647:

/* Line 1455 of yacc.c  */
#line 6126 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[(4) - (4)].lexer.lex_str)));
          }
    break;

  case 648:

/* Line 1455 of yacc.c  */
#line 6133 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 649:

/* Line 1455 of yacc.c  */
#line 6140 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
    break;

  case 650:

/* Line 1455 of yacc.c  */
#line 6144 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
    break;

  case 651:

/* Line 1455 of yacc.c  */
#line 6151 "sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 652:

/* Line 1455 of yacc.c  */
#line 6158 "sql_yacc.yy"
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 653:

/* Line 1455 of yacc.c  */
#line 6164 "sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 654:

/* Line 1455 of yacc.c  */
#line 6166 "sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[(1) - (1)].lexer.lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 655:

/* Line 1455 of yacc.c  */
#line 6242 "sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[(1) - (2)].create_table_options);
          }
    break;

  case 657:

/* Line 1455 of yacc.c  */
#line 6251 "sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[(1) - (2)].partition_clause);
          }
    break;

  case 659:

/* Line 1455 of yacc.c  */
#line 6260 "sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
    break;

  case 660:

/* Line 1455 of yacc.c  */
#line 6268 "sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[(1) - (2)].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(2) - (2)].query_expression_body);
          }
    break;

  case 661:

/* Line 1455 of yacc.c  */
#line 6275 "sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(1) - (1)].query_expression_body);
          }
    break;

  case 662:

/* Line 1455 of yacc.c  */
#line 6284 "sql_yacc.yy"
    { (yyval.query_expression_body) = (yyvsp[(2) - (2)].query_expression_body); }
    break;

  case 663:

/* Line 1455 of yacc.c  */
#line 6285 "sql_yacc.yy"
    { (yyval.query_expression_body) = (yyvsp[(1) - (1)].query_expression_body); }
    break;

  case 664:

/* Line 1455 of yacc.c  */
#line 6301 "sql_yacc.yy"
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[(3) - (6)].part_type_def), (yyvsp[(4) - (6)].ulong_num), (yyvsp[(5) - (6)].opt_sub_part), (yylsp[(6) - (6)]), (yyvsp[(6) - (6)].part_def_list));
          }
    break;

  case 665:

/* Line 1455 of yacc.c  */
#line 6308 "sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[(1) - (6)].is_not_empty), (yyvsp[(3) - (6)].opt_key_algo), (yyvsp[(5) - (6)].name_list));
          }
    break;

  case 666:

/* Line 1455 of yacc.c  */
#line 6312 "sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[(1) - (5)].is_not_empty), (yylsp[(4) - (5)]), (yyvsp[(4) - (5)].item));
          }
    break;

  case 667:

/* Line 1455 of yacc.c  */
#line 6316 "sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 668:

/* Line 1455 of yacc.c  */
#line 6320 "sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 669:

/* Line 1455 of yacc.c  */
#line 6324 "sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 670:

/* Line 1455 of yacc.c  */
#line 6328 "sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 671:

/* Line 1455 of yacc.c  */
#line 6334 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 672:

/* Line 1455 of yacc.c  */
#line 6335 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 673:

/* Line 1455 of yacc.c  */
#line 6340 "sql_yacc.yy"
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
    break;

  case 674:

/* Line 1455 of yacc.c  */
#line 6342 "sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
    break;

  case 675:

/* Line 1455 of yacc.c  */
#line 6359 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 676:

/* Line 1455 of yacc.c  */
#line 6361 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 677:

/* Line 1455 of yacc.c  */
#line 6372 "sql_yacc.yy"
    { (yyval.opt_sub_part)= NULL; }
    break;

  case 678:

/* Line 1455 of yacc.c  */
#line 6375 "sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[(3) - (8)].is_not_empty), (yylsp[(6) - (8)]), (yyvsp[(6) - (8)].item), (yyvsp[(8) - (8)].ulong_num));
          }
    break;

  case 679:

/* Line 1455 of yacc.c  */
#line 6380 "sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].opt_key_algo), (yyvsp[(7) - (9)].name_list), (yyvsp[(9) - (9)].ulong_num));
          }
    break;

  case 680:

/* Line 1455 of yacc.c  */
#line 6387 "sql_yacc.yy"
    { (yyval.name_list)= NULL; }
    break;

  case 682:

/* Line 1455 of yacc.c  */
#line 6394 "sql_yacc.yy"
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[(1) - (1)].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 683:

/* Line 1455 of yacc.c  */
#line 6400 "sql_yacc.yy"
    {
            (yyval.name_list)= (yyvsp[(1) - (3)].name_list);
            if ((yyval.name_list)->push_back((yyvsp[(3) - (3)].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 684:

/* Line 1455 of yacc.c  */
#line 6409 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 685:

/* Line 1455 of yacc.c  */
#line 6411 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 686:

/* Line 1455 of yacc.c  */
#line 6422 "sql_yacc.yy"
    { (yyval.part_def_list)= NULL; }
    break;

  case 687:

/* Line 1455 of yacc.c  */
#line 6423 "sql_yacc.yy"
    { (yyval.part_def_list)= (yyvsp[(2) - (3)].part_def_list); }
    break;

  case 688:

/* Line 1455 of yacc.c  */
#line 6428 "sql_yacc.yy"
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[(1) - (1)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 689:

/* Line 1455 of yacc.c  */
#line 6434 "sql_yacc.yy"
    {
            (yyval.part_def_list)= (yyvsp[(1) - (3)].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[(3) - (3)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 690:

/* Line 1455 of yacc.c  */
#line 6443 "sql_yacc.yy"
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[(0) - (5)]), (yyvsp[(2) - (5)].lexer.lex_str), (yyvsp[(3) - (5)].opt_part_values).type, (yyvsp[(3) - (5)].opt_part_values).values, (yylsp[(3) - (5)]),
                                           (yyvsp[(4) - (5)].partition_option_list), (yyvsp[(5) - (5)].sub_part_list), (yylsp[(5) - (5)]));
          }
    break;

  case 691:

/* Line 1455 of yacc.c  */
#line 6451 "sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
    break;

  case 692:

/* Line 1455 of yacc.c  */
#line 6455 "sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[(4) - (4)].part_value_item_list_paren);
          }
    break;

  case 693:

/* Line 1455 of yacc.c  */
#line 6460 "sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[(3) - (3)].part_values);
          }
    break;

  case 694:

/* Line 1455 of yacc.c  */
#line 6467 "sql_yacc.yy"
    { (yyval.part_value_item_list_paren)= NULL; }
    break;

  case 696:

/* Line 1455 of yacc.c  */
#line 6473 "sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].part_value_item_list_paren));
          }
    break;

  case 697:

/* Line 1455 of yacc.c  */
#line 6477 "sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[(3) - (3)]), (yyvsp[(2) - (3)].part_value_list));
          }
    break;

  case 698:

/* Line 1455 of yacc.c  */
#line 6484 "sql_yacc.yy"
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[(1) - (1)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 699:

/* Line 1455 of yacc.c  */
#line 6491 "sql_yacc.yy"
    {
            (yyval.part_value_list)= (yyvsp[(1) - (3)].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[(3) - (3)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 700:

/* Line 1455 of yacc.c  */
#line 6500 "sql_yacc.yy"
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
    break;

  case 701:

/* Line 1455 of yacc.c  */
#line 6511 "sql_yacc.yy"
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[(3) - (4)].part_value_item_list), (yylsp[(4) - (4)]));
          }
    break;

  case 702:

/* Line 1455 of yacc.c  */
#line 6518 "sql_yacc.yy"
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[(1) - (1)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 703:

/* Line 1455 of yacc.c  */
#line 6524 "sql_yacc.yy"
    {
            (yyval.part_value_item_list)= (yyvsp[(1) - (3)].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[(3) - (3)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 704:

/* Line 1455 of yacc.c  */
#line 6532 "sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[(1) - (1)])); }
    break;

  case 705:

/* Line 1455 of yacc.c  */
#line 6533 "sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].item)); }
    break;

  case 706:

/* Line 1455 of yacc.c  */
#line 6538 "sql_yacc.yy"
    { (yyval.sub_part_list)= NULL; }
    break;

  case 707:

/* Line 1455 of yacc.c  */
#line 6539 "sql_yacc.yy"
    { (yyval.sub_part_list)= (yyvsp[(2) - (3)].sub_part_list); }
    break;

  case 708:

/* Line 1455 of yacc.c  */
#line 6544 "sql_yacc.yy"
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[(1) - (1)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 709:

/* Line 1455 of yacc.c  */
#line 6550 "sql_yacc.yy"
    {
            (yyval.sub_part_list)= (yyvsp[(1) - (3)].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[(3) - (3)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 710:

/* Line 1455 of yacc.c  */
#line 6559 "sql_yacc.yy"
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[(1) - (3)]), (yyvsp[(2) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].partition_option_list));
          }
    break;

  case 711:

/* Line 1455 of yacc.c  */
#line 6565 "sql_yacc.yy"
    { (yyval.partition_option_list)= NULL; }
    break;

  case 713:

/* Line 1455 of yacc.c  */
#line 6571 "sql_yacc.yy"
    {
            (yyval.partition_option_list)= (yyvsp[(1) - (2)].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[(2) - (2)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 714:

/* Line 1455 of yacc.c  */
#line 6577 "sql_yacc.yy"
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[(1) - (1)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 715:

/* Line 1455 of yacc.c  */
#line 6586 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[(3) - (3)].lexer.lex_str).str); }
    break;

  case 716:

/* Line 1455 of yacc.c  */
#line 6588 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[(4) - (4)].lexer.lex_str))); }
    break;

  case 717:

/* Line 1455 of yacc.c  */
#line 6590 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 718:

/* Line 1455 of yacc.c  */
#line 6592 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 719:

/* Line 1455 of yacc.c  */
#line 6594 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 720:

/* Line 1455 of yacc.c  */
#line 6596 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[(4) - (4)].lexer.lex_str).str); }
    break;

  case 721:

/* Line 1455 of yacc.c  */
#line 6598 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[(4) - (4)].lexer.lex_str).str); }
    break;

  case 722:

/* Line 1455 of yacc.c  */
#line 6600 "sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[(3) - (3)].lexer.lex_str).str); }
    break;

  case 726:

/* Line 1455 of yacc.c  */
#line 6615 "sql_yacc.yy"
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[(4) - (4)].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[(4) - (4)].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
    break;

  case 727:

/* Line 1455 of yacc.c  */
#line 6635 "sql_yacc.yy"
    {}
    break;

  case 728:

/* Line 1455 of yacc.c  */
#line 6636 "sql_yacc.yy"
    {}
    break;

  case 729:

/* Line 1455 of yacc.c  */
#line 6640 "sql_yacc.yy"
    {}
    break;

  case 730:

/* Line 1455 of yacc.c  */
#line 6641 "sql_yacc.yy"
    {}
    break;

  case 731:

/* Line 1455 of yacc.c  */
#line 6646 "sql_yacc.yy"
    {
            if (set_default_collation(Lex->create_info, (yyvsp[(1) - (1)].lexer.charset)))
              MYSQL_YYABORT;
          }
    break;

  case 732:

/* Line 1455 of yacc.c  */
#line 6651 "sql_yacc.yy"
    {
            if (set_default_charset(Lex->create_info, (yyvsp[(1) - (1)].lexer.charset)))
              MYSQL_YYABORT;
          }
    break;

  case 733:

/* Line 1455 of yacc.c  */
#line 6656 "sql_yacc.yy"
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[(1) - (1)].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[(1) - (1)].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[(1) - (1)].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
    break;

  case 734:

/* Line 1455 of yacc.c  */
#line 6670 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 735:

/* Line 1455 of yacc.c  */
#line 6671 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 736:

/* Line 1455 of yacc.c  */
#line 6676 "sql_yacc.yy"
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 737:

/* Line 1455 of yacc.c  */
#line 6682 "sql_yacc.yy"
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[(1) - (2)].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[(2) - (2)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 738:

/* Line 1455 of yacc.c  */
#line 6691 "sql_yacc.yy"
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 739:

/* Line 1455 of yacc.c  */
#line 6697 "sql_yacc.yy"
    {
            (yyval.create_table_options)= (yyvsp[(1) - (3)].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[(3) - (3)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 742:

/* Line 1455 of yacc.c  */
#line 6711 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)));
          }
    break;

  case 743:

/* Line 1455 of yacc.c  */
#line 6715 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
    break;

  case 744:

/* Line 1455 of yacc.c  */
#line 6719 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)));
          }
    break;

  case 745:

/* Line 1455 of yacc.c  */
#line 6723 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 746:

/* Line 1455 of yacc.c  */
#line 6727 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 747:

/* Line 1455 of yacc.c  */
#line 6731 "sql_yacc.yy"
    {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[(3) - (3)].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[(3) - (3)]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 748:

/* Line 1455 of yacc.c  */
#line 6744 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[(3) - (3)].lexer.lex_str).str);
          }
    break;

  case 749:

/* Line 1455 of yacc.c  */
#line 6748 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 750:

/* Line 1455 of yacc.c  */
#line 6752 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 751:

/* Line 1455 of yacc.c  */
#line 6756 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 752:

/* Line 1455 of yacc.c  */
#line 6760 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 753:

/* Line 1455 of yacc.c  */
#line 6764 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 754:

/* Line 1455 of yacc.c  */
#line 6768 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 755:

/* Line 1455 of yacc.c  */
#line 6772 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 756:

/* Line 1455 of yacc.c  */
#line 6776 "sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[(3) - (3)]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 757:

/* Line 1455 of yacc.c  */
#line 6794 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
    break;

  case 758:

/* Line 1455 of yacc.c  */
#line 6798 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 759:

/* Line 1455 of yacc.c  */
#line 6802 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 760:

/* Line 1455 of yacc.c  */
#line 6806 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 761:

/* Line 1455 of yacc.c  */
#line 6810 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[(3) - (3)].row_type));
          }
    break;

  case 762:

/* Line 1455 of yacc.c  */
#line 6814 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[(4) - (5)].table_list));
          }
    break;

  case 763:

/* Line 1455 of yacc.c  */
#line 6818 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[(1) - (1)].lexer.charset));
          }
    break;

  case 764:

/* Line 1455 of yacc.c  */
#line 6822 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[(1) - (1)].lexer.charset));
          }
    break;

  case 765:

/* Line 1455 of yacc.c  */
#line 6826 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 766:

/* Line 1455 of yacc.c  */
#line 6830 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[(4) - (4)].lexer.lex_str).str);
          }
    break;

  case 767:

/* Line 1455 of yacc.c  */
#line 6834 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[(4) - (4)].lexer.lex_str).str);
          }
    break;

  case 768:

/* Line 1455 of yacc.c  */
#line 6838 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[(3) - (3)].lexer.lex_str).str);
          }
    break;

  case 769:

/* Line 1455 of yacc.c  */
#line 6842 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
    break;

  case 770:

/* Line 1455 of yacc.c  */
#line 6846 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
    break;

  case 771:

/* Line 1455 of yacc.c  */
#line 6850 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 772:

/* Line 1455 of yacc.c  */
#line 6854 "sql_yacc.yy"
    {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[(3) - (3)].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[(3) - (3)]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[(3) - (3)].ulonglong_number)));
          }
    break;

  case 773:

/* Line 1455 of yacc.c  */
#line 6868 "sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
    break;

  case 774:

/* Line 1455 of yacc.c  */
#line 6872 "sql_yacc.yy"
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 775:

/* Line 1455 of yacc.c  */
#line 6876 "sql_yacc.yy"
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 776:

/* Line 1455 of yacc.c  */
#line 6880 "sql_yacc.yy"
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[(1) - (1)].ulonglong_number));
          }
    break;

  case 777:

/* Line 1455 of yacc.c  */
#line 6887 "sql_yacc.yy"
    {
            switch((yyvsp[(1) - (1)].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
    break;

  case 778:

/* Line 1455 of yacc.c  */
#line 6900 "sql_yacc.yy"
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
    break;

  case 779:

/* Line 1455 of yacc.c  */
#line 6904 "sql_yacc.yy"
    { (yyval.lexer.charset) = (yyvsp[(4) - (4)].lexer.charset); }
    break;

  case 780:

/* Line 1455 of yacc.c  */
#line 6908 "sql_yacc.yy"
    { (yyval.lexer.charset) = (yyvsp[(4) - (4)].lexer.charset);}
    break;

  case 781:

/* Line 1455 of yacc.c  */
#line 6912 "sql_yacc.yy"
    { (yyval.lexer.lex_str) = (yyvsp[(4) - (4)].lexer.lex_str);}
    break;

  case 782:

/* Line 1455 of yacc.c  */
#line 6916 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 783:

/* Line 1455 of yacc.c  */
#line 6917 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 784:

/* Line 1455 of yacc.c  */
#line 6918 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 785:

/* Line 1455 of yacc.c  */
#line 6919 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 786:

/* Line 1455 of yacc.c  */
#line 6920 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 787:

/* Line 1455 of yacc.c  */
#line 6921 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 788:

/* Line 1455 of yacc.c  */
#line 6925 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 789:

/* Line 1455 of yacc.c  */
#line 6926 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 790:

/* Line 1455 of yacc.c  */
#line 6927 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 791:

/* Line 1455 of yacc.c  */
#line 6931 "sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 792:

/* Line 1455 of yacc.c  */
#line 6932 "sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 793:

/* Line 1455 of yacc.c  */
#line 6933 "sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 794:

/* Line 1455 of yacc.c  */
#line 6934 "sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 795:

/* Line 1455 of yacc.c  */
#line 6939 "sql_yacc.yy"
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[(1) - (1)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 796:

/* Line 1455 of yacc.c  */
#line 6945 "sql_yacc.yy"
    {
            (yyval.table_element_list)= (yyvsp[(1) - (3)].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[(3) - (3)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 797:

/* Line 1455 of yacc.c  */
#line 6953 "sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].column_def); }
    break;

  case 798:

/* Line 1455 of yacc.c  */
#line 6954 "sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].table_constraint_def); }
    break;

  case 799:

/* Line 1455 of yacc.c  */
#line 6959 "sql_yacc.yy"
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[(1) - (3)].lexer.lex_str), (yyvsp[(2) - (3)].field_def), (yyvsp[(3) - (3)].table_constraint_def));
          }
    break;

  case 800:

/* Line 1455 of yacc.c  */
#line 6965 "sql_yacc.yy"
    { (yyval.table_constraint_def)= NULL; }
    break;

  case 801:

/* Line 1455 of yacc.c  */
#line 6967 "sql_yacc.yy"
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
    break;

  case 802:

/* Line 1455 of yacc.c  */
#line 6976 "sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[(2) - (6)].index_name_and_type).name, (yyvsp[(2) - (6)].index_name_and_type).type, (yyvsp[(4) - (6)].index_column_list), (yyvsp[(6) - (6)].index_options));
          }
    break;

  case 803:

/* Line 1455 of yacc.c  */
#line 6982 "sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[(3) - (7)].lexer.lex_str), NULL,
                                                   (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 804:

/* Line 1455 of yacc.c  */
#line 6988 "sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[(3) - (7)].lexer.lex_str), NULL, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 805:

/* Line 1455 of yacc.c  */
#line 6993 "sql_yacc.yy"
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[(3) - (7)].index_name_and_type).name.str != NULL ? (yyvsp[(3) - (7)].index_name_and_type).name : (yyvsp[(1) - (7)].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(2) - (7)].key_type), name, (yyvsp[(3) - (7)].index_name_and_type).type, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 806:

/* Line 1455 of yacc.c  */
#line 7002 "sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[(1) - (8)].lexer.lex_str), (yyvsp[(4) - (8)].lexer.lex_str), (yyvsp[(6) - (8)].index_column_list), (yyvsp[(8) - (8)].fk_references).table_name,
                                                  (yyvsp[(8) - (8)].fk_references).reference_list,
                                                  (yyvsp[(8) - (8)].fk_references).fk_match_option,
                                                  (yyvsp[(8) - (8)].fk_references).fk_update_opt,
                                                  (yyvsp[(8) - (8)].fk_references).fk_delete_opt);
          }
    break;

  case 807:

/* Line 1455 of yacc.c  */
#line 7010 "sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[(1) - (3)].lexer.lex_str), (yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
    break;

  case 808:

/* Line 1455 of yacc.c  */
#line 7017 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(3) - (4)].item); }
    break;

  case 809:

/* Line 1455 of yacc.c  */
#line 7021 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= NULL_STR; }
    break;

  case 810:

/* Line 1455 of yacc.c  */
#line 7022 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= (yyvsp[(2) - (2)].lexer.lex_str); }
    break;

  case 811:

/* Line 1455 of yacc.c  */
#line 7026 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 812:

/* Line 1455 of yacc.c  */
#line 7027 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 813:

/* Line 1455 of yacc.c  */
#line 7031 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 814:

/* Line 1455 of yacc.c  */
#line 7032 "sql_yacc.yy"
    { (yyval.is_not_empty)= (yyvsp[(1) - (1)].is_not_empty); }
    break;

  case 815:

/* Line 1455 of yacc.c  */
#line 7036 "sql_yacc.yy"
    { (yyval.is_not_empty)= !((yyvsp[(1) - (2)].is_not_empty)); }
    break;

  case 816:

/* Line 1455 of yacc.c  */
#line 7041 "sql_yacc.yy"
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[(1) - (2)].type), (yyvsp[(2) - (2)].col_attr_list));
          }
    break;

  case 817:

/* Line 1455 of yacc.c  */
#line 7047 "sql_yacc.yy"
    {
            auto *opt_attrs= (yyvsp[(9) - (9)].col_attr_list);
            if ((yyvsp[(2) - (9)].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[(2) - (9)]), (yyvsp[(2) - (9)].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[(1) - (9)].type), (yyvsp[(6) - (9)].item), (yyvsp[(8) - (9)].virtual_or_stored), opt_attrs);
          }
    break;

  case 820:

/* Line 1455 of yacc.c  */
#line 7071 "sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 821:

/* Line 1455 of yacc.c  */
#line 7072 "sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 822:

/* Line 1455 of yacc.c  */
#line 7073 "sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
    break;

  case 823:

/* Line 1455 of yacc.c  */
#line 7078 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[(1) - (3)].int_type), (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 824:

/* Line 1455 of yacc.c  */
#line 7082 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 825:

/* Line 1455 of yacc.c  */
#line 7086 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 826:

/* Line 1455 of yacc.c  */
#line 7090 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
    break;

  case 827:

/* Line 1455 of yacc.c  */
#line 7094 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 828:

/* Line 1455 of yacc.c  */
#line 7098 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 829:

/* Line 1455 of yacc.c  */
#line 7102 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 830:

/* Line 1455 of yacc.c  */
#line 7106 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 831:

/* Line 1455 of yacc.c  */
#line 7111 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 832:

/* Line 1455 of yacc.c  */
#line 7116 "sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 833:

/* Line 1455 of yacc.c  */
#line 7125 "sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(2) - (2)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 834:

/* Line 1455 of yacc.c  */
#line 7134 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 835:

/* Line 1455 of yacc.c  */
#line 7138 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
    break;

  case 836:

/* Line 1455 of yacc.c  */
#line 7142 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 837:

/* Line 1455 of yacc.c  */
#line 7147 "sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 838:

/* Line 1455 of yacc.c  */
#line 7156 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 839:

/* Line 1455 of yacc.c  */
#line 7160 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[(2) - (3)].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[(3) - (3)].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
    break;

  case 840:

/* Line 1455 of yacc.c  */
#line 7183 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
    break;

  case 841:

/* Line 1455 of yacc.c  */
#line 7187 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 842:

/* Line 1455 of yacc.c  */
#line 7191 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 843:

/* Line 1455 of yacc.c  */
#line 7195 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 844:

/* Line 1455 of yacc.c  */
#line 7199 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
    break;

  case 845:

/* Line 1455 of yacc.c  */
#line 7203 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 847:

/* Line 1455 of yacc.c  */
#line 7208 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 848:

/* Line 1455 of yacc.c  */
#line 7212 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
    break;

  case 849:

/* Line 1455 of yacc.c  */
#line 7216 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 850:

/* Line 1455 of yacc.c  */
#line 7220 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 851:

/* Line 1455 of yacc.c  */
#line 7225 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 852:

/* Line 1455 of yacc.c  */
#line 7230 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 853:

/* Line 1455 of yacc.c  */
#line 7235 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 854:

/* Line 1455 of yacc.c  */
#line 7240 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 855:

/* Line 1455 of yacc.c  */
#line 7245 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 856:

/* Line 1455 of yacc.c  */
#line 7249 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 857:

/* Line 1455 of yacc.c  */
#line 7253 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 858:

/* Line 1455 of yacc.c  */
#line 7258 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
    break;

  case 859:

/* Line 1455 of yacc.c  */
#line 7262 "sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
    break;

  case 860:

/* Line 1455 of yacc.c  */
#line 7269 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
    break;

  case 861:

/* Line 1455 of yacc.c  */
#line 7271 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
    break;

  case 862:

/* Line 1455 of yacc.c  */
#line 7273 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
    break;

  case 863:

/* Line 1455 of yacc.c  */
#line 7275 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
    break;

  case 864:

/* Line 1455 of yacc.c  */
#line 7277 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
    break;

  case 865:

/* Line 1455 of yacc.c  */
#line 7279 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
    break;

  case 866:

/* Line 1455 of yacc.c  */
#line 7281 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
    break;

  case 867:

/* Line 1455 of yacc.c  */
#line 7283 "sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
    break;

  case 868:

/* Line 1455 of yacc.c  */
#line 7287 "sql_yacc.yy"
    {}
    break;

  case 869:

/* Line 1455 of yacc.c  */
#line 7288 "sql_yacc.yy"
    {}
    break;

  case 870:

/* Line 1455 of yacc.c  */
#line 7292 "sql_yacc.yy"
    {}
    break;

  case 871:

/* Line 1455 of yacc.c  */
#line 7293 "sql_yacc.yy"
    {}
    break;

  case 872:

/* Line 1455 of yacc.c  */
#line 7297 "sql_yacc.yy"
    {}
    break;

  case 873:

/* Line 1455 of yacc.c  */
#line 7298 "sql_yacc.yy"
    {}
    break;

  case 874:

/* Line 1455 of yacc.c  */
#line 7299 "sql_yacc.yy"
    {}
    break;

  case 875:

/* Line 1455 of yacc.c  */
#line 7300 "sql_yacc.yy"
    {}
    break;

  case 876:

/* Line 1455 of yacc.c  */
#line 7301 "sql_yacc.yy"
    {}
    break;

  case 877:

/* Line 1455 of yacc.c  */
#line 7305 "sql_yacc.yy"
    { (yyval.int_type)=Int_type::INT; }
    break;

  case 878:

/* Line 1455 of yacc.c  */
#line 7306 "sql_yacc.yy"
    { (yyval.int_type)=Int_type::TINYINT; }
    break;

  case 879:

/* Line 1455 of yacc.c  */
#line 7307 "sql_yacc.yy"
    { (yyval.int_type)=Int_type::SMALLINT; }
    break;

  case 880:

/* Line 1455 of yacc.c  */
#line 7308 "sql_yacc.yy"
    { (yyval.int_type)=Int_type::MEDIUMINT; }
    break;

  case 881:

/* Line 1455 of yacc.c  */
#line 7309 "sql_yacc.yy"
    { (yyval.int_type)=Int_type::BIGINT; }
    break;

  case 882:

/* Line 1455 of yacc.c  */
#line 7314 "sql_yacc.yy"
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
    break;

  case 883:

/* Line 1455 of yacc.c  */
#line 7319 "sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
    break;

  case 886:

/* Line 1455 of yacc.c  */
#line 7328 "sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
    break;

  case 887:

/* Line 1455 of yacc.c  */
#line 7329 "sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 888:

/* Line 1455 of yacc.c  */
#line 7330 "sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 889:

/* Line 1455 of yacc.c  */
#line 7331 "sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 890:

/* Line 1455 of yacc.c  */
#line 7336 "sql_yacc.yy"
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
    break;

  case 891:

/* Line 1455 of yacc.c  */
#line 7341 "sql_yacc.yy"
    {
            (yyval.precision).length = (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec = nullptr;
          }
    break;

  case 892:

/* Line 1455 of yacc.c  */
#line 7349 "sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 893:

/* Line 1455 of yacc.c  */
#line 7354 "sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 895:

/* Line 1455 of yacc.c  */
#line 7363 "sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lexer.lex_str).str;
          }
    break;

  case 896:

/* Line 1455 of yacc.c  */
#line 7371 "sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 897:

/* Line 1455 of yacc.c  */
#line 7372 "sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lexer.lex_str).str; }
    break;

  case 898:

/* Line 1455 of yacc.c  */
#line 7376 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 899:

/* Line 1455 of yacc.c  */
#line 7377 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 900:

/* Line 1455 of yacc.c  */
#line 7379 "sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lexer.lex_str).str, NULL, &error);
           }
    break;

  case 901:

/* Line 1455 of yacc.c  */
#line 7386 "sql_yacc.yy"
    { (yyval.field_option) = 0; }
    break;

  case 903:

/* Line 1455 of yacc.c  */
#line 7392 "sql_yacc.yy"
    {
            (yyval.field_option) = (yyvsp[(1) - (2)].field_option) | (yyvsp[(2) - (2)].field_option);
          }
    break;

  case 905:

/* Line 1455 of yacc.c  */
#line 7399 "sql_yacc.yy"
    { (yyval.field_option) = 0; }
    break;

  case 906:

/* Line 1455 of yacc.c  */
#line 7400 "sql_yacc.yy"
    { (yyval.field_option) = UNSIGNED_FLAG; }
    break;

  case 907:

/* Line 1455 of yacc.c  */
#line 7401 "sql_yacc.yy"
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
    break;

  case 908:

/* Line 1455 of yacc.c  */
#line 7410 "sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lexer.lex_str).str; }
    break;

  case 909:

/* Line 1455 of yacc.c  */
#line 7411 "sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lexer.lex_str).str; }
    break;

  case 910:

/* Line 1455 of yacc.c  */
#line 7412 "sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lexer.lex_str).str; }
    break;

  case 911:

/* Line 1455 of yacc.c  */
#line 7413 "sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lexer.lex_str).str; }
    break;

  case 912:

/* Line 1455 of yacc.c  */
#line 7416 "sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 914:

/* Line 1455 of yacc.c  */
#line 7422 "sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 916:

/* Line 1455 of yacc.c  */
#line 7430 "sql_yacc.yy"
    { (yyval.col_attr_list)= NULL; }
    break;

  case 918:

/* Line 1455 of yacc.c  */
#line 7436 "sql_yacc.yy"
    {
            (yyval.col_attr_list)= (yyvsp[(1) - (2)].col_attr_list);
            if ((yyvsp[(2) - (2)].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(2) - (2)].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[(1) - (2)].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[(2) - (2)].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[(2) - (2)]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[(2) - (2)].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
    break;

  case 919:

/* Line 1455 of yacc.c  */
#line 7455 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (1)].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[(1) - (1)]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[(1) - (1)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 920:

/* Line 1455 of yacc.c  */
#line 7474 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
    break;

  case 921:

/* Line 1455 of yacc.c  */
#line 7478 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
    break;

  case 922:

/* Line 1455 of yacc.c  */
#line 7482 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
    break;

  case 923:

/* Line 1455 of yacc.c  */
#line 7486 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[(2) - (2)].item));
          }
    break;

  case 924:

/* Line 1455 of yacc.c  */
#line 7490 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[(3) - (4)].item));
          }
    break;

  case 925:

/* Line 1455 of yacc.c  */
#line 7494 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
          }
    break;

  case 926:

/* Line 1455 of yacc.c  */
#line 7498 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
    break;

  case 927:

/* Line 1455 of yacc.c  */
#line 7502 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
    break;

  case 928:

/* Line 1455 of yacc.c  */
#line 7506 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
    break;

  case 929:

/* Line 1455 of yacc.c  */
#line 7510 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 930:

/* Line 1455 of yacc.c  */
#line 7514 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 931:

/* Line 1455 of yacc.c  */
#line 7518 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str)));
          }
    break;

  case 932:

/* Line 1455 of yacc.c  */
#line 7522 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[(2) - (2)]), (yyvsp[(2) - (2)].lexer.charset));
          }
    break;

  case 933:

/* Line 1455 of yacc.c  */
#line 7526 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[(2) - (2)].column_format));
          }
    break;

  case 934:

/* Line 1455 of yacc.c  */
#line 7530 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[(2) - (2)].storage_media));
          }
    break;

  case 935:

/* Line 1455 of yacc.c  */
#line 7534 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[(2) - (2)].ulonglong_number)));
          }
    break;

  case 936:

/* Line 1455 of yacc.c  */
#line 7544 "sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[(1) - (2)].lexer.lex_str), (yyvsp[(2) - (2)].item));
          }
    break;

  case 937:

/* Line 1455 of yacc.c  */
#line 7557 "sql_yacc.yy"
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[(1) - (1)].is_not_empty));
          }
    break;

  case 938:

/* Line 1455 of yacc.c  */
#line 7561 "sql_yacc.yy"
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 939:

/* Line 1455 of yacc.c  */
#line 7565 "sql_yacc.yy"
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 940:

/* Line 1455 of yacc.c  */
#line 7569 "sql_yacc.yy"
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[(1) - (1)].visibility));
          }
    break;

  case 941:

/* Line 1455 of yacc.c  */
#line 7575 "sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
    break;

  case 942:

/* Line 1455 of yacc.c  */
#line 7576 "sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
    break;

  case 943:

/* Line 1455 of yacc.c  */
#line 7577 "sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
    break;

  case 944:

/* Line 1455 of yacc.c  */
#line 7581 "sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DEFAULT; }
    break;

  case 945:

/* Line 1455 of yacc.c  */
#line 7582 "sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DISK; }
    break;

  case 946:

/* Line 1455 of yacc.c  */
#line 7583 "sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_MEMORY; }
    break;

  case 947:

/* Line 1455 of yacc.c  */
#line 7588 "sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 948:

/* Line 1455 of yacc.c  */
#line 7594 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 952:

/* Line 1455 of yacc.c  */
#line 7607 "sql_yacc.yy"
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[(1) - (1)].lexer.lex_str).str);
          }
    break;

  case 953:

/* Line 1455 of yacc.c  */
#line 7615 "sql_yacc.yy"
    { (yyval.lexer.charset)= &my_charset_bin; }
    break;

  case 954:

/* Line 1455 of yacc.c  */
#line 7619 "sql_yacc.yy"
    { (yyval.lexer.charset)= NULL; }
    break;

  case 955:

/* Line 1455 of yacc.c  */
#line 7620 "sql_yacc.yy"
    { (yyval.lexer.charset) = (yyvsp[(2) - (2)].lexer.charset); }
    break;

  case 956:

/* Line 1455 of yacc.c  */
#line 7625 "sql_yacc.yy"
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 957:

/* Line 1455 of yacc.c  */
#line 7633 "sql_yacc.yy"
    { (yyval.lexer.charset)= &my_charset_bin; }
    break;

  case 958:

/* Line 1455 of yacc.c  */
#line 7637 "sql_yacc.yy"
    { (yyval.lexer.charset)=(yyvsp[(1) - (1)].lexer.charset);   }
    break;

  case 959:

/* Line 1455 of yacc.c  */
#line 7638 "sql_yacc.yy"
    { (yyval.lexer.charset)=NULL; }
    break;

  case 960:

/* Line 1455 of yacc.c  */
#line 7643 "sql_yacc.yy"
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
    break;

  case 961:

/* Line 1455 of yacc.c  */
#line 7648 "sql_yacc.yy"
    { (yyval.lexer.charset)= &my_charset_bin; }
    break;

  case 962:

/* Line 1455 of yacc.c  */
#line 7652 "sql_yacc.yy"
    { (yyval.lexer.charset) = nullptr; }
    break;

  case 963:

/* Line 1455 of yacc.c  */
#line 7653 "sql_yacc.yy"
    { (yyval.lexer.charset) = (yyvsp[(2) - (2)].lexer.charset); }
    break;

  case 964:

/* Line 1455 of yacc.c  */
#line 7657 "sql_yacc.yy"
    {}
    break;

  case 965:

/* Line 1455 of yacc.c  */
#line 7658 "sql_yacc.yy"
    {}
    break;

  case 966:

/* Line 1455 of yacc.c  */
#line 7663 "sql_yacc.yy"
    {
          push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
          (yyval.lexer.charset)= &my_charset_latin1;
        }
    break;

  case 967:

/* Line 1455 of yacc.c  */
#line 7667 "sql_yacc.yy"
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
    break;

  case 968:

/* Line 1455 of yacc.c  */
#line 7672 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
    break;

  case 969:

/* Line 1455 of yacc.c  */
#line 7681 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 970:

/* Line 1455 of yacc.c  */
#line 7690 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 971:

/* Line 1455 of yacc.c  */
#line 7697 "sql_yacc.yy"
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 972:

/* Line 1455 of yacc.c  */
#line 7707 "sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 973:

/* Line 1455 of yacc.c  */
#line 7712 "sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 974:

/* Line 1455 of yacc.c  */
#line 7717 "sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 975:

/* Line 1455 of yacc.c  */
#line 7722 "sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 976:

/* Line 1455 of yacc.c  */
#line 7727 "sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(3) - (3)].is_not_empty) ? get_bin_collation((yyvsp[(2) - (3)].lexer.charset)) : (yyvsp[(2) - (3)].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 977:

/* Line 1455 of yacc.c  */
#line 7734 "sql_yacc.yy"
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
    break;

  case 978:

/* Line 1455 of yacc.c  */
#line 7740 "sql_yacc.yy"
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[(3) - (3)].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 979:

/* Line 1455 of yacc.c  */
#line 7750 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 980:

/* Line 1455 of yacc.c  */
#line 7751 "sql_yacc.yy"
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
    break;

  case 981:

/* Line 1455 of yacc.c  */
#line 7759 "sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
    break;

  case 982:

/* Line 1455 of yacc.c  */
#line 7767 "sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 985:

/* Line 1455 of yacc.c  */
#line 7781 "sql_yacc.yy"
    {
            (yyval.fk_references).table_name= (yyvsp[(2) - (5)].table);
            (yyval.fk_references).reference_list= (yyvsp[(3) - (5)].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[(4) - (5)].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[(5) - (5)].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[(5) - (5)].fk_options).fk_delete_opt;
          }
    break;

  case 986:

/* Line 1455 of yacc.c  */
#line 7791 "sql_yacc.yy"
    { (yyval.reference_list)= NULL; }
    break;

  case 987:

/* Line 1455 of yacc.c  */
#line 7792 "sql_yacc.yy"
    { (yyval.reference_list)= (yyvsp[(2) - (3)].reference_list); }
    break;

  case 988:

/* Line 1455 of yacc.c  */
#line 7797 "sql_yacc.yy"
    {
            (yyval.reference_list)= (yyvsp[(1) - (3)].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 989:

/* Line 1455 of yacc.c  */
#line 7804 "sql_yacc.yy"
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 990:

/* Line 1455 of yacc.c  */
#line 7813 "sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
    break;

  case 991:

/* Line 1455 of yacc.c  */
#line 7814 "sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
    break;

  case 992:

/* Line 1455 of yacc.c  */
#line 7815 "sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
    break;

  case 993:

/* Line 1455 of yacc.c  */
#line 7816 "sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
    break;

  case 994:

/* Line 1455 of yacc.c  */
#line 7821 "sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 995:

/* Line 1455 of yacc.c  */
#line 7826 "sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 996:

/* Line 1455 of yacc.c  */
#line 7831 "sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 997:

/* Line 1455 of yacc.c  */
#line 7837 "sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 998:

/* Line 1455 of yacc.c  */
#line 7843 "sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 999:

/* Line 1455 of yacc.c  */
#line 7850 "sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 1000:

/* Line 1455 of yacc.c  */
#line 7851 "sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 1001:

/* Line 1455 of yacc.c  */
#line 7852 "sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 1002:

/* Line 1455 of yacc.c  */
#line 7853 "sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 1003:

/* Line 1455 of yacc.c  */
#line 7854 "sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 1004:

/* Line 1455 of yacc.c  */
#line 7858 "sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 1005:

/* Line 1455 of yacc.c  */
#line 7859 "sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 1006:

/* Line 1455 of yacc.c  */
#line 7863 "sql_yacc.yy"
    {}
    break;

  case 1007:

/* Line 1455 of yacc.c  */
#line 7864 "sql_yacc.yy"
    {}
    break;

  case 1008:

/* Line 1455 of yacc.c  */
#line 7868 "sql_yacc.yy"
    {}
    break;

  case 1010:

/* Line 1455 of yacc.c  */
#line 7873 "sql_yacc.yy"
    {}
    break;

  case 1011:

/* Line 1455 of yacc.c  */
#line 7874 "sql_yacc.yy"
    {}
    break;

  case 1012:

/* Line 1455 of yacc.c  */
#line 7875 "sql_yacc.yy"
    {}
    break;

  case 1013:

/* Line 1455 of yacc.c  */
#line 7879 "sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 1014:

/* Line 1455 of yacc.c  */
#line 7880 "sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 1015:

/* Line 1455 of yacc.c  */
#line 7884 "sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 1017:

/* Line 1455 of yacc.c  */
#line 7890 "sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1018:

/* Line 1455 of yacc.c  */
#line 7896 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 1020:

/* Line 1455 of yacc.c  */
#line 7906 "sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)));
          }
    break;

  case 1021:

/* Line 1455 of yacc.c  */
#line 7919 "sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 1023:

/* Line 1455 of yacc.c  */
#line 7925 "sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1024:

/* Line 1455 of yacc.c  */
#line 7931 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 1026:

/* Line 1455 of yacc.c  */
#line 7943 "sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 1028:

/* Line 1455 of yacc.c  */
#line 7949 "sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1029:

/* Line 1455 of yacc.c  */
#line 7955 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 1030:

/* Line 1455 of yacc.c  */
#line 7963 "sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_option); }
    break;

  case 1031:

/* Line 1455 of yacc.c  */
#line 7964 "sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_option); }
    break;

  case 1032:

/* Line 1455 of yacc.c  */
#line 7969 "sql_yacc.yy"
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 1033:

/* Line 1455 of yacc.c  */
#line 7971 "sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str)));
          }
    break;

  case 1034:

/* Line 1455 of yacc.c  */
#line 7975 "sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[(1) - (1)].visibility));
          }
    break;

  case 1035:

/* Line 1455 of yacc.c  */
#line 7979 "sql_yacc.yy"
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 1036:

/* Line 1455 of yacc.c  */
#line 7983 "sql_yacc.yy"
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[(3) - (3)].lex_cstr));
          }
    break;

  case 1037:

/* Line 1455 of yacc.c  */
#line 8006 "sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (1)].lexer.lex_str), NULL}; }
    break;

  case 1038:

/* Line 1455 of yacc.c  */
#line 8007 "sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (3)].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg))}; }
    break;

  case 1039:

/* Line 1455 of yacc.c  */
#line 8008 "sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (3)].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg))}; }
    break;

  case 1040:

/* Line 1455 of yacc.c  */
#line 8012 "sql_yacc.yy"
    { (yyval.index_option) = nullptr; }
    break;

  case 1042:

/* Line 1455 of yacc.c  */
#line 8017 "sql_yacc.yy"
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 1043:

/* Line 1455 of yacc.c  */
#line 8018 "sql_yacc.yy"
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 1044:

/* Line 1455 of yacc.c  */
#line 8022 "sql_yacc.yy"
    { (yyval.visibility)= true; }
    break;

  case 1045:

/* Line 1455 of yacc.c  */
#line 8023 "sql_yacc.yy"
    { (yyval.visibility)= false; }
    break;

  case 1046:

/* Line 1455 of yacc.c  */
#line 8027 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 1047:

/* Line 1455 of yacc.c  */
#line 8028 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 1048:

/* Line 1455 of yacc.c  */
#line 8029 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 1049:

/* Line 1455 of yacc.c  */
#line 8034 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].index_column_list)->push_back((yyvsp[(3) - (3)].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[(1) - (3)].index_column_list);
          }
    break;

  case 1050:

/* Line 1455 of yacc.c  */
#line 8040 "sql_yacc.yy"
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[(1) - (1)].key_part)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1051:

/* Line 1455 of yacc.c  */
#line 8050 "sql_yacc.yy"
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[(1) - (2)].lexer.lex_str)), (yyvsp[(2) - (2)].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1052:

/* Line 1455 of yacc.c  */
#line 8056 "sql_yacc.yy"
    {
            int key_part_length= atoi((yyvsp[(3) - (5)].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (5)].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[(1) - (5)].lexer.lex_str)), (yyvsp[(5) - (5)].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
    break;

  case 1053:

/* Line 1455 of yacc.c  */
#line 8071 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].index_column_list)->push_back((yyvsp[(3) - (3)].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[(1) - (3)].index_column_list);
          }
    break;

  case 1054:

/* Line 1455 of yacc.c  */
#line 8077 "sql_yacc.yy"
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[(1) - (1)].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
    break;

  case 1056:

/* Line 1455 of yacc.c  */
#line 8088 "sql_yacc.yy"
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[(2) - (4)].item), (yyvsp[(4) - (4)].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1057:

/* Line 1455 of yacc.c  */
#line 8096 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= NULL_STR; }
    break;

  case 1059:

/* Line 1455 of yacc.c  */
#line 8102 "sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[(1) - (1)].string)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1060:

/* Line 1455 of yacc.c  */
#line 8108 "sql_yacc.yy"
    {
            if ((yyval.string_list)->push_back((yyvsp[(3) - (3)].string)))
              MYSQL_YYABORT;
          }
    break;

  case 1061:

/* Line 1455 of yacc.c  */
#line 8120 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[(3) - (4)].table),
                  (yyvsp[(4) - (4)].alter_list).actions,
                  (yyvsp[(4) - (4)].alter_list).flags.algo.get_or_default(),
                  (yyvsp[(4) - (4)].alter_list).flags.lock.get_or_default(),
                  (yyvsp[(4) - (4)].alter_list).flags.validation.get_or_default());
          }
    break;

  case 1062:

/* Line 1455 of yacc.c  */
#line 8130 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[(3) - (4)].table),
                  (yyvsp[(4) - (4)].standalone_alter_table_action).action,
                  (yyvsp[(4) - (4)].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[(4) - (4)].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[(4) - (4)].standalone_alter_table_action).flags.validation.get_or_default());
          }
    break;

  case 1063:

/* Line 1455 of yacc.c  */
#line 8143 "sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 1064:

/* Line 1455 of yacc.c  */
#line 8151 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 1065:

/* Line 1455 of yacc.c  */
#line 8163 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 1066:

/* Line 1455 of yacc.c  */
#line 8174 "sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 1067:

/* Line 1455 of yacc.c  */
#line 8184 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 1068:

/* Line 1455 of yacc.c  */
#line 8195 "sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 1069:

/* Line 1455 of yacc.c  */
#line 8205 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 1070:

/* Line 1455 of yacc.c  */
#line 8216 "sql_yacc.yy"
    {}
    break;

  case 1071:

/* Line 1455 of yacc.c  */
#line 8223 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 1072:

/* Line 1455 of yacc.c  */
#line 8235 "sql_yacc.yy"
    {}
    break;

  case 1073:

/* Line 1455 of yacc.c  */
#line 8240 "sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 1074:

/* Line 1455 of yacc.c  */
#line 8260 "sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 1075:

/* Line 1455 of yacc.c  */
#line 8277 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[(4) - (7)].lexer.lex_str), pc, (yyvsp[(6) - (7)].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1076:

/* Line 1455 of yacc.c  */
#line 8299 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(6) - (6)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(6) - (6)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(5) - (6)].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1077:

/* Line 1455 of yacc.c  */
#line 8318 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(6) - (6)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(6) - (6)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(5) - (6)].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1078:

/* Line 1455 of yacc.c  */
#line 8337 "sql_yacc.yy"
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(6) - (6)].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1079:

/* Line 1455 of yacc.c  */
#line 8345 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(4) - (4)].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[(3) - (4)].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1080:

/* Line 1455 of yacc.c  */
#line 8368 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[(4) - (7)].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[(6) - (7)].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1081:

/* Line 1455 of yacc.c  */
#line 8391 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 1083:

/* Line 1455 of yacc.c  */
#line 8406 "sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->first_factor_auth_info = *(yyvsp[(3) - (5)].lex_mfa);

            if ((yyvsp[(4) - (5)].lex_cstr).str != nullptr) {
              (yyvsp[(2) - (5)].lex_user)->current_auth = (yyvsp[(4) - (5)].lex_cstr);
              (yyvsp[(2) - (5)].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[(2) - (5)].lex_user)->discard_old_password = false;
            (yyvsp[(2) - (5)].lex_user)->retain_current_password = (yyvsp[(5) - (5)].is_not_empty);
          }
    break;

  case 1084:

/* Line 1455 of yacc.c  */
#line 8418 "sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->first_factor_auth_info = *(yyvsp[(3) - (5)].lex_mfa);

            if ((yyvsp[(4) - (5)].lex_cstr).str != nullptr) {
              (yyvsp[(2) - (5)].lex_user)->current_auth = (yyvsp[(4) - (5)].lex_cstr);
              (yyvsp[(2) - (5)].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[(2) - (5)].lex_user)->discard_old_password = false;
            (yyvsp[(2) - (5)].lex_user)->retain_current_password = (yyvsp[(5) - (5)].is_not_empty);
          }
    break;

  case 1085:

/* Line 1455 of yacc.c  */
#line 8429 "sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->discard_old_password = true;
            (yyvsp[(2) - (5)].lex_user)->retain_current_password = false;
          }
    break;

  case 1086:

/* Line 1455 of yacc.c  */
#line 8434 "sql_yacc.yy"
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
    break;

  case 1087:

/* Line 1455 of yacc.c  */
#line 8446 "sql_yacc.yy"
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
    break;

  case 1088:

/* Line 1455 of yacc.c  */
#line 8458 "sql_yacc.yy"
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[(5) - (5)].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
    break;

  case 1089:

/* Line 1455 of yacc.c  */
#line 8469 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].lex_user)->mfa_list.push_back((yyvsp[(3) - (3)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[(2) - (3)].lex_user));
          }
    break;

  case 1090:

/* Line 1455 of yacc.c  */
#line 8476 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].lex_user)->mfa_list.push_back((yyvsp[(3) - (3)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 1091:

/* Line 1455 of yacc.c  */
#line 8483 "sql_yacc.yy"
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
    break;

  case 1092:

/* Line 1455 of yacc.c  */
#line 8484 "sql_yacc.yy"
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str)); }
    break;

  case 1093:

/* Line 1455 of yacc.c  */
#line 8491 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[(4) - (8)].lexer.lex_str)),
                                                (yyvsp[(5) - (8)].resource_group_vcpu_list_type), (yyvsp[(6) - (8)].resource_group_priority_type), (yyvsp[(7) - (8)].resource_group_state_type), (yyvsp[(8) - (8)].resource_group_flag_type));
          }
    break;

  case 1094:

/* Line 1455 of yacc.c  */
#line 8499 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1095:

/* Line 1455 of yacc.c  */
#line 8508 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
    break;

  case 1096:

/* Line 1455 of yacc.c  */
#line 8514 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[(2) - (2)].lexer.lex_str);
          }
    break;

  case 1097:

/* Line 1455 of yacc.c  */
#line 8521 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[(2) - (2)].lexer.lex_str);
          }
    break;

  case 1098:

/* Line 1455 of yacc.c  */
#line 8529 "sql_yacc.yy"
    {}
    break;

  case 1102:

/* Line 1455 of yacc.c  */
#line 8540 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 1103:

/* Line 1455 of yacc.c  */
#line 8546 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 1104:

/* Line 1455 of yacc.c  */
#line 8552 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
    break;

  case 1105:

/* Line 1455 of yacc.c  */
#line 8560 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(4) - (5)].ulong_num) == 0 || (yyvsp[(4) - (5)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[(4) - (5)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[(4) - (5)].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 1106:

/* Line 1455 of yacc.c  */
#line 8575 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 1107:

/* Line 1455 of yacc.c  */
#line 8583 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
    break;

  case 1108:

/* Line 1455 of yacc.c  */
#line 8591 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[(3) - (3)].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
    break;

  case 1109:

/* Line 1455 of yacc.c  */
#line 8598 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
    break;

  case 1110:

/* Line 1455 of yacc.c  */
#line 8605 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[(4) - (5)].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
    break;

  case 1111:

/* Line 1455 of yacc.c  */
#line 8612 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
    break;

  case 1112:

/* Line 1455 of yacc.c  */
#line 8619 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
    break;

  case 1113:

/* Line 1455 of yacc.c  */
#line 8625 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
    break;

  case 1114:

/* Line 1455 of yacc.c  */
#line 8631 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
    break;

  case 1115:

/* Line 1455 of yacc.c  */
#line 8637 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(2) - (2)].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[(2) - (2)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1116:

/* Line 1455 of yacc.c  */
#line 8649 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(2) - (2)].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[(2) - (2)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1117:

/* Line 1455 of yacc.c  */
#line 8661 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
    break;

  case 1118:

/* Line 1455 of yacc.c  */
#line 8669 "sql_yacc.yy"
    {}
    break;

  case 1120:

/* Line 1455 of yacc.c  */
#line 8674 "sql_yacc.yy"
    {}
    break;

  case 1121:

/* Line 1455 of yacc.c  */
#line 8675 "sql_yacc.yy"
    {}
    break;

  case 1122:

/* Line 1455 of yacc.c  */
#line 8680 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 1123:

/* Line 1455 of yacc.c  */
#line 8686 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 1124:

/* Line 1455 of yacc.c  */
#line 8692 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 1125:

/* Line 1455 of yacc.c  */
#line 8698 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 1126:

/* Line 1455 of yacc.c  */
#line 8707 "sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 1127:

/* Line 1455 of yacc.c  */
#line 8719 "sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1128:

/* Line 1455 of yacc.c  */
#line 8720 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1129:

/* Line 1455 of yacc.c  */
#line 8721 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1130:

/* Line 1455 of yacc.c  */
#line 8722 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1131:

/* Line 1455 of yacc.c  */
#line 8726 "sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1132:

/* Line 1455 of yacc.c  */
#line 8728 "sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 1133:

/* Line 1455 of yacc.c  */
#line 8739 "sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1134:

/* Line 1455 of yacc.c  */
#line 8740 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1135:

/* Line 1455 of yacc.c  */
#line 8744 "sql_yacc.yy"
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
    break;

  case 1136:

/* Line 1455 of yacc.c  */
#line 8745 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str); }
    break;

  case 1138:

/* Line 1455 of yacc.c  */
#line 8751 "sql_yacc.yy"
    {
            (yyval.alter_list)= (yyvsp[(1) - (2)].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[(2) - (2)].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1139:

/* Line 1455 of yacc.c  */
#line 8766 "sql_yacc.yy"
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[(1) - (1)].alter_table_standalone_action);
          }
    break;

  case 1140:

/* Line 1455 of yacc.c  */
#line 8771 "sql_yacc.yy"
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[(1) - (3)].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[(3) - (3)].alter_table_standalone_action);
          }
    break;

  case 1141:

/* Line 1455 of yacc.c  */
#line 8779 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[(1) - (1)].partition_clause));
          }
    break;

  case 1142:

/* Line 1455 of yacc.c  */
#line 8783 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
    break;

  case 1143:

/* Line 1455 of yacc.c  */
#line 8790 "sql_yacc.yy"
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
    break;

  case 1144:

/* Line 1455 of yacc.c  */
#line 8795 "sql_yacc.yy"
    {
            (yyval.alter_list).flags= (yyvsp[(1) - (1)].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
    break;

  case 1146:

/* Line 1455 of yacc.c  */
#line 8801 "sql_yacc.yy"
    {
            (yyval.alter_list).flags= (yyvsp[(1) - (3)].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[(3) - (3)].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[(3) - (3)].alter_list).actions;
          }
    break;

  case 1147:

/* Line 1455 of yacc.c  */
#line 8810 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
    break;

  case 1148:

/* Line 1455 of yacc.c  */
#line 8814 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
    break;

  case 1149:

/* Line 1455 of yacc.c  */
#line 8825 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[(3) - (3)].num));
          }
    break;

  case 1150:

/* Line 1455 of yacc.c  */
#line 8829 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].part_def_list));
          }
    break;

  case 1151:

/* Line 1455 of yacc.c  */
#line 8833 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[(3) - (5)].num), (yyvsp[(5) - (5)].ulong_num));
          }
    break;

  case 1152:

/* Line 1455 of yacc.c  */
#line 8837 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[(3) - (3)].string_list));
          }
    break;

  case 1153:

/* Line 1455 of yacc.c  */
#line 8842 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].string_list));
          }
    break;

  case 1154:

/* Line 1455 of yacc.c  */
#line 8847 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].string_list));
          }
    break;

  case 1155:

/* Line 1455 of yacc.c  */
#line 8852 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].string_list));
          }
    break;

  case 1156:

/* Line 1455 of yacc.c  */
#line 8856 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[(3) - (4)].string_list),
                                                       (yyvsp[(4) - (4)].mi_type).flags, (yyvsp[(4) - (4)].mi_type).sql_flags);
          }
    break;

  case 1157:

/* Line 1455 of yacc.c  */
#line 8863 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[(3) - (5)].num), (yyvsp[(4) - (5)].string_list),
                                                        (yyvsp[(5) - (5)].mi_type).flags, (yyvsp[(5) - (5)].mi_type).sql_flags);
          }
    break;

  case 1158:

/* Line 1455 of yacc.c  */
#line 8868 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].ulong_num));
          }
    break;

  case 1159:

/* Line 1455 of yacc.c  */
#line 8872 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[(3) - (3)].string_list));
          }
    break;

  case 1160:

/* Line 1455 of yacc.c  */
#line 8876 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[(3) - (3)].num));
          }
    break;

  case 1161:

/* Line 1455 of yacc.c  */
#line 8881 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[(3) - (8)].num), *(yyvsp[(4) - (8)].string_list), (yyvsp[(7) - (8)].part_def_list));
          }
    break;

  case 1162:

/* Line 1455 of yacc.c  */
#line 8886 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[(3) - (7)].lexer.lex_str), (yyvsp[(6) - (7)].table), (yyvsp[(7) - (7)].with_validation));
          }
    break;

  case 1163:

/* Line 1455 of yacc.c  */
#line 8891 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[(3) - (4)].string_list));
          }
    break;

  case 1164:

/* Line 1455 of yacc.c  */
#line 8896 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[(3) - (4)].string_list));
          }
    break;

  case 1165:

/* Line 1455 of yacc.c  */
#line 8900 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
    break;

  case 1166:

/* Line 1455 of yacc.c  */
#line 8904 "sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
    break;

  case 1167:

/* Line 1455 of yacc.c  */
#line 8910 "sql_yacc.yy"
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
    break;

  case 1169:

/* Line 1455 of yacc.c  */
#line 8916 "sql_yacc.yy"
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 1170:

/* Line 1455 of yacc.c  */
#line 8920 "sql_yacc.yy"
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 1171:

/* Line 1455 of yacc.c  */
#line 8926 "sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1173:

/* Line 1455 of yacc.c  */
#line 8936 "sql_yacc.yy"
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[(1) - (1)].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1174:

/* Line 1455 of yacc.c  */
#line 8943 "sql_yacc.yy"
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[(3) - (3)].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1175:

/* Line 1455 of yacc.c  */
#line 8948 "sql_yacc.yy"
    {
            (yyval.alter_list).flags.merge((yyvsp[(3) - (3)].algo_and_lock_and_validation));
          }
    break;

  case 1176:

/* Line 1455 of yacc.c  */
#line 8952 "sql_yacc.yy"
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[(1) - (1)].space_separated_alter_table_opts);
          }
    break;

  case 1177:

/* Line 1455 of yacc.c  */
#line 8957 "sql_yacc.yy"
    {
            for (auto *option : *(yyvsp[(3) - (3)].space_separated_alter_table_opts))
            {
              if ((yyvsp[(1) - (3)].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
    break;

  case 1179:

/* Line 1455 of yacc.c  */
#line 8969 "sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[(1) - (3)].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[(3) - (3)].algo_and_lock_and_validation));
          }
    break;

  case 1180:

/* Line 1455 of yacc.c  */
#line 8977 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(4) - (6)].field_def), (yyvsp[(5) - (6)].table_constraint_def), (yyvsp[(6) - (6)].c_str));
          }
    break;

  case 1181:

/* Line 1455 of yacc.c  */
#line 8981 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[(4) - (5)].table_element_list));
          }
    break;

  case 1182:

/* Line 1455 of yacc.c  */
#line 8985 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[(2) - (2)].table_constraint_def));
          }
    break;

  case 1183:

/* Line 1455 of yacc.c  */
#line 8989 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(4) - (6)].lexer.lex_str), (yyvsp[(5) - (6)].field_def), (yyvsp[(6) - (6)].c_str));
          }
    break;

  case 1184:

/* Line 1455 of yacc.c  */
#line 8993 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[(3) - (5)].lexer.lex_str), (yyvsp[(4) - (5)].field_def), (yyvsp[(5) - (5)].c_str));
          }
    break;

  case 1185:

/* Line 1455 of yacc.c  */
#line 8997 "sql_yacc.yy"
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[(3) - (4)].lexer.lex_str).str);
          }
    break;

  case 1186:

/* Line 1455 of yacc.c  */
#line 9002 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[(4) - (4)].lexer.lex_str).str);
          }
    break;

  case 1187:

/* Line 1455 of yacc.c  */
#line 9006 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
    break;

  case 1188:

/* Line 1455 of yacc.c  */
#line 9010 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[(3) - (3)].lexer.lex_str).str);
          }
    break;

  case 1189:

/* Line 1455 of yacc.c  */
#line 9014 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[(3) - (3)].lexer.lex_str).str);
          }
    break;

  case 1190:

/* Line 1455 of yacc.c  */
#line 9018 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[(3) - (3)].lexer.lex_str).str);
          }
    break;

  case 1191:

/* Line 1455 of yacc.c  */
#line 9022 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
    break;

  case 1192:

/* Line 1455 of yacc.c  */
#line 9026 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
    break;

  case 1193:

/* Line 1455 of yacc.c  */
#line 9030 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[(3) - (6)].lexer.lex_str).str, (yyvsp[(6) - (6)].item));
          }
    break;

  case 1194:

/* Line 1455 of yacc.c  */
#line 9034 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[(3) - (8)].lexer.lex_str).str, (yyvsp[(7) - (8)].item));
          }
    break;

  case 1195:

/* Line 1455 of yacc.c  */
#line 9038 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[(3) - (5)].lexer.lex_str).str, NULL);
          }
    break;

  case 1196:

/* Line 1455 of yacc.c  */
#line 9043 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[(3) - (5)].lexer.lex_str).str, (yyvsp[(5) - (5)].visibility));
          }
    break;

  case 1197:

/* Line 1455 of yacc.c  */
#line 9047 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[(3) - (4)].lexer.lex_str).str, (yyvsp[(4) - (4)].visibility));
          }
    break;

  case 1198:

/* Line 1455 of yacc.c  */
#line 9051 "sql_yacc.yy"
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[(3) - (4)].lexer.lex_str).str, (yyvsp[(4) - (4)].is_not_empty));
          }
    break;

  case 1199:

/* Line 1455 of yacc.c  */
#line 9055 "sql_yacc.yy"
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[(3) - (4)].lexer.lex_str).str, (yyvsp[(4) - (4)].is_not_empty));
          }
    break;

  case 1200:

/* Line 1455 of yacc.c  */
#line 9059 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[(3) - (3)].table));
          }
    break;

  case 1201:

/* Line 1455 of yacc.c  */
#line 9063 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[(3) - (5)].lexer.lex_str).str, (yyvsp[(5) - (5)].lexer.lex_str).str);
          }
    break;

  case 1202:

/* Line 1455 of yacc.c  */
#line 9067 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[(3) - (5)].lexer.lex_str).str, (yyvsp[(5) - (5)].lexer.lex_str).str);
          }
    break;

  case 1203:

/* Line 1455 of yacc.c  */
#line 9071 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[(4) - (5)].lexer.charset), (yyvsp[(5) - (5)].lexer.charset));
          }
    break;

  case 1204:

/* Line 1455 of yacc.c  */
#line 9075 "sql_yacc.yy"
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[(5) - (5)].lexer.charset) ? (yyvsp[(5) - (5)].lexer.charset) : YYTHD->variables.collation_database);
          }
    break;

  case 1205:

/* Line 1455 of yacc.c  */
#line 9081 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
    break;

  case 1206:

/* Line 1455 of yacc.c  */
#line 9085 "sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1207:

/* Line 1455 of yacc.c  */
#line 9092 "sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[(1) - (1)].alter_table_algorithm));
          }
    break;

  case 1208:

/* Line 1455 of yacc.c  */
#line 9097 "sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[(1) - (1)].alter_table_lock));
          }
    break;

  case 1209:

/* Line 1455 of yacc.c  */
#line 9102 "sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[(1) - (1)].with_validation));
          }
    break;

  case 1210:

/* Line 1455 of yacc.c  */
#line 9109 "sql_yacc.yy"
    { (yyval.opt_index_lock_and_algorithm).init(); }
    break;

  case 1211:

/* Line 1455 of yacc.c  */
#line 9111 "sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[(1) - (1)].alter_table_lock));
          }
    break;

  case 1212:

/* Line 1455 of yacc.c  */
#line 9116 "sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[(1) - (1)].alter_table_algorithm));
          }
    break;

  case 1213:

/* Line 1455 of yacc.c  */
#line 9121 "sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[(1) - (2)].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[(2) - (2)].alter_table_algorithm));
          }
    break;

  case 1214:

/* Line 1455 of yacc.c  */
#line 9127 "sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[(1) - (2)].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[(2) - (2)].alter_table_lock));
          }
    break;

  case 1215:

/* Line 1455 of yacc.c  */
#line 9135 "sql_yacc.yy"
    { (yyval.alter_table_algorithm)= (yyvsp[(3) - (3)].alter_table_algorithm); }
    break;

  case 1216:

/* Line 1455 of yacc.c  */
#line 9140 "sql_yacc.yy"
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1217:

/* Line 1455 of yacc.c  */
#line 9144 "sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(1) - (1)].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[(1) - (1)].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[(1) - (1)].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1218:

/* Line 1455 of yacc.c  */
#line 9160 "sql_yacc.yy"
    { (yyval.alter_table_lock)= (yyvsp[(3) - (3)].alter_table_lock); }
    break;

  case 1219:

/* Line 1455 of yacc.c  */
#line 9165 "sql_yacc.yy"
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1220:

/* Line 1455 of yacc.c  */
#line 9169 "sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(1) - (1)].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[(1) - (1)].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[(1) - (1)].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1223:

/* Line 1455 of yacc.c  */
#line 9190 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1224:

/* Line 1455 of yacc.c  */
#line 9191 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1225:

/* Line 1455 of yacc.c  */
#line 9195 "sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_DEFAULT; }
    break;

  case 1226:

/* Line 1455 of yacc.c  */
#line 9196 "sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_RESTRICT; }
    break;

  case 1227:

/* Line 1455 of yacc.c  */
#line 9197 "sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_CASCADE; }
    break;

  case 1228:

/* Line 1455 of yacc.c  */
#line 9201 "sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 1229:

/* Line 1455 of yacc.c  */
#line 9202 "sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (2)].lexer.lex_str).str; }
    break;

  case 1230:

/* Line 1455 of yacc.c  */
#line 9203 "sql_yacc.yy"
    { (yyval.c_str)= first_keyword; }
    break;

  case 1231:

/* Line 1455 of yacc.c  */
#line 9207 "sql_yacc.yy"
    {}
    break;

  case 1232:

/* Line 1455 of yacc.c  */
#line 9208 "sql_yacc.yy"
    {}
    break;

  case 1233:

/* Line 1455 of yacc.c  */
#line 9209 "sql_yacc.yy"
    {}
    break;

  case 1234:

/* Line 1455 of yacc.c  */
#line 9210 "sql_yacc.yy"
    {}
    break;

  case 1236:

/* Line 1455 of yacc.c  */
#line 9216 "sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
    break;

  case 1237:

/* Line 1455 of yacc.c  */
#line 9224 "sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
    break;

  case 1245:

/* Line 1455 of yacc.c  */
#line 9249 "sql_yacc.yy"
    {
            Lex->slave_connection.user = (yyvsp[(3) - (3)].lexer.lex_str).str;
            if ((yyvsp[(3) - (3)].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1246:

/* Line 1455 of yacc.c  */
#line 9261 "sql_yacc.yy"
    {
            Lex->slave_connection.password = (yyvsp[(3) - (3)].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[(3) - (3)].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1247:

/* Line 1455 of yacc.c  */
#line 9274 "sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 1248:

/* Line 1455 of yacc.c  */
#line 9280 "sql_yacc.yy"
    { Lex->set_replication_deprecated_syntax_used(); }
    break;

  case 1250:

/* Line 1455 of yacc.c  */
#line 9286 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[(4) - (4)].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 1251:

/* Line 1455 of yacc.c  */
#line 9300 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
    break;

  case 1252:

/* Line 1455 of yacc.c  */
#line 9315 "sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_REPLICA, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1253:

/* Line 1455 of yacc.c  */
#line 9332 "sql_yacc.yy"
    {
            if (Lex->set_channel_name((yyvsp[(11) - (11)].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 1254:

/* Line 1455 of yacc.c  */
#line 9340 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1255:

/* Line 1455 of yacc.c  */
#line 9356 "sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1256:

/* Line 1455 of yacc.c  */
#line 9360 "sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1257:

/* Line 1455 of yacc.c  */
#line 9367 "sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1258:

/* Line 1455 of yacc.c  */
#line 9371 "sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1259:

/* Line 1455 of yacc.c  */
#line 9378 "sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1260:

/* Line 1455 of yacc.c  */
#line 9382 "sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1261:

/* Line 1455 of yacc.c  */
#line 9386 "sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1262:

/* Line 1455 of yacc.c  */
#line 9392 "sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1263:

/* Line 1455 of yacc.c  */
#line 9396 "sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 1264:

/* Line 1455 of yacc.c  */
#line 9402 "sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1265:

/* Line 1455 of yacc.c  */
#line 9406 "sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1266:

/* Line 1455 of yacc.c  */
#line 9412 "sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1267:

/* Line 1455 of yacc.c  */
#line 9416 "sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 1268:

/* Line 1455 of yacc.c  */
#line 9422 "sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1269:

/* Line 1455 of yacc.c  */
#line 9426 "sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lexer.lex_str).str;
          }
    break;

  case 1270:

/* Line 1455 of yacc.c  */
#line 9433 "sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1271:

/* Line 1455 of yacc.c  */
#line 9437 "sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1272:

/* Line 1455 of yacc.c  */
#line 9444 "sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1273:

/* Line 1455 of yacc.c  */
#line 9448 "sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1274:

/* Line 1455 of yacc.c  */
#line 9455 "sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1275:

/* Line 1455 of yacc.c  */
#line 9459 "sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1276:

/* Line 1455 of yacc.c  */
#line 9466 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1277:

/* Line 1455 of yacc.c  */
#line 9471 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_REPLICA_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1280:

/* Line 1455 of yacc.c  */
#line 9498 "sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1281:

/* Line 1455 of yacc.c  */
#line 9503 "sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1282:

/* Line 1455 of yacc.c  */
#line 9508 "sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1283:

/* Line 1455 of yacc.c  */
#line 9515 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[(3) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1284:

/* Line 1455 of yacc.c  */
#line 9528 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 1285:

/* Line 1455 of yacc.c  */
#line 9529 "sql_yacc.yy"
    { (yyval.ulong_num)= T_QUICK; }
    break;

  case 1286:

/* Line 1455 of yacc.c  */
#line 9530 "sql_yacc.yy"
    { (yyval.ulong_num)= T_EXTEND; }
    break;

  case 1287:

/* Line 1455 of yacc.c  */
#line 9536 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (5)].num), (yyvsp[(4) - (5)].table_list),
                                             (yyvsp[(5) - (5)].mi_type).flags, (yyvsp[(5) - (5)].mi_type).sql_flags);
          }
    break;

  case 1288:

/* Line 1455 of yacc.c  */
#line 9543 "sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1291:

/* Line 1455 of yacc.c  */
#line 9550 "sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1292:

/* Line 1455 of yacc.c  */
#line 9557 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
    break;

  case 1293:

/* Line 1455 of yacc.c  */
#line 9558 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1294:

/* Line 1455 of yacc.c  */
#line 9559 "sql_yacc.yy"
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
    break;

  case 1295:

/* Line 1455 of yacc.c  */
#line 9565 "sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].histogram).param) {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (5)].num), (yyvsp[(4) - (5)].table_list),
                                                (yyvsp[(5) - (5)].histogram).command, (yyvsp[(5) - (5)].histogram).param->num_buckets,
                                                (yyvsp[(5) - (5)].histogram).columns, (yyvsp[(5) - (5)].histogram).param->data);
            } else {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (5)].num), (yyvsp[(4) - (5)].table_list),
                                                (yyvsp[(5) - (5)].histogram).command, 0,
                                                (yyvsp[(5) - (5)].histogram).columns, {nullptr, 0});
            }
          }
    break;

  case 1296:

/* Line 1455 of yacc.c  */
#line 9580 "sql_yacc.yy"
    {
            (yyval.histogram_param).num_buckets= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS;
            (yyval.histogram_param).data= { nullptr, 0 };
          }
    break;

  case 1297:

/* Line 1455 of yacc.c  */
#line 9585 "sql_yacc.yy"
    {
            int error;
            longlong num= my_strtoll10((yyvsp[(2) - (3)].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.histogram_param).num_buckets= num;
            (yyval.histogram_param).data= { nullptr, 0 };
          }
    break;

  case 1298:

/* Line 1455 of yacc.c  */
#line 9601 "sql_yacc.yy"
    {
            (yyval.histogram_param).num_buckets= 0;
            (yyval.histogram_param).data= (yyvsp[(3) - (3)].lexer.lex_str);
          }
    break;

  case 1299:

/* Line 1455 of yacc.c  */
#line 9609 "sql_yacc.yy"
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).param= nullptr;
          }
    break;

  case 1300:

/* Line 1455 of yacc.c  */
#line 9615 "sql_yacc.yy"
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[(4) - (5)].string_list);
            (yyval.histogram).param= NEW_PTN YYSTYPE::Histogram_param((yyvsp[(5) - (5)].histogram_param));
            if ((yyval.histogram).param == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1301:

/* Line 1455 of yacc.c  */
#line 9624 "sql_yacc.yy"
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[(4) - (4)].string_list);
            (yyval.histogram).param = nullptr;
          }
    break;

  case 1302:

/* Line 1455 of yacc.c  */
#line 9634 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[(2) - (2)].lexer.lex_str);
          }
    break;

  case 1303:

/* Line 1455 of yacc.c  */
#line 9642 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[(3) - (4)].table_list),
                                            (yyvsp[(4) - (4)].mi_type).flags, (yyvsp[(4) - (4)].mi_type).sql_flags);
          }
    break;

  case 1304:

/* Line 1455 of yacc.c  */
#line 9649 "sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1307:

/* Line 1455 of yacc.c  */
#line 9656 "sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1308:

/* Line 1455 of yacc.c  */
#line 9664 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
    break;

  case 1309:

/* Line 1455 of yacc.c  */
#line 9666 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
    break;

  case 1310:

/* Line 1455 of yacc.c  */
#line 9668 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1311:

/* Line 1455 of yacc.c  */
#line 9670 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1312:

/* Line 1455 of yacc.c  */
#line 9672 "sql_yacc.yy"
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1313:

/* Line 1455 of yacc.c  */
#line 9674 "sql_yacc.yy"
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
    break;

  case 1314:

/* Line 1455 of yacc.c  */
#line 9679 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (4)].num), (yyvsp[(4) - (4)].table_list));
          }
    break;

  case 1315:

/* Line 1455 of yacc.c  */
#line 9685 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1316:

/* Line 1455 of yacc.c  */
#line 9686 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1317:

/* Line 1455 of yacc.c  */
#line 9687 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1318:

/* Line 1455 of yacc.c  */
#line 9692 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1319:

/* Line 1455 of yacc.c  */
#line 9696 "sql_yacc.yy"
    {}
    break;

  case 1320:

/* Line 1455 of yacc.c  */
#line 9698 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1321:

/* Line 1455 of yacc.c  */
#line 9705 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1322:

/* Line 1455 of yacc.c  */
#line 9710 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1325:

/* Line 1455 of yacc.c  */
#line 9723 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1326:

/* Line 1455 of yacc.c  */
#line 9736 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[(3) - (5)].keycache_list), (yyvsp[(5) - (5)].lex_cstr));
          }
    break;

  case 1327:

/* Line 1455 of yacc.c  */
#line 9741 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[(3) - (7)].table), (yyvsp[(4) - (7)].adm_partition), (yyvsp[(5) - (7)].key_usage_list), (yyvsp[(7) - (7)].lex_cstr));
          }
    break;

  case 1328:

/* Line 1455 of yacc.c  */
#line 9749 "sql_yacc.yy"
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[(1) - (1)].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1329:

/* Line 1455 of yacc.c  */
#line 9755 "sql_yacc.yy"
    {
            (yyval.keycache_list)= (yyvsp[(1) - (3)].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[(3) - (3)].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1330:

/* Line 1455 of yacc.c  */
#line 9764 "sql_yacc.yy"
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[(1) - (2)].table), (yyvsp[(2) - (2)].key_usage_list));
          }
    break;

  case 1331:

/* Line 1455 of yacc.c  */
#line 9770 "sql_yacc.yy"
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)); }
    break;

  case 1332:

/* Line 1455 of yacc.c  */
#line 9771 "sql_yacc.yy"
    { (yyval.lex_cstr) = default_key_cache_base; }
    break;

  case 1333:

/* Line 1455 of yacc.c  */
#line 9777 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[(5) - (8)].table),(yyvsp[(6) - (8)].adm_partition), (yyvsp[(7) - (8)].key_usage_list), (yyvsp[(8) - (8)].is_not_empty));
          }
    break;

  case 1334:

/* Line 1455 of yacc.c  */
#line 9781 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[(5) - (5)].preload_list));
          }
    break;

  case 1335:

/* Line 1455 of yacc.c  */
#line 9788 "sql_yacc.yy"
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[(1) - (1)].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1336:

/* Line 1455 of yacc.c  */
#line 9794 "sql_yacc.yy"
    {
            (yyval.preload_list)= (yyvsp[(1) - (3)].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[(3) - (3)].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1337:

/* Line 1455 of yacc.c  */
#line 9803 "sql_yacc.yy"
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].key_usage_list), (yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 1338:

/* Line 1455 of yacc.c  */
#line 9810 "sql_yacc.yy"
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[(3) - (4)].string_list));
          }
    break;

  case 1339:

/* Line 1455 of yacc.c  */
#line 9816 "sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1340:

/* Line 1455 of yacc.c  */
#line 9818 "sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1341:

/* Line 1455 of yacc.c  */
#line 9827 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1342:

/* Line 1455 of yacc.c  */
#line 9828 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1343:

/* Line 1455 of yacc.c  */
#line 9833 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1344:

/* Line 1455 of yacc.c  */
#line 9837 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[(1) - (2)].query_expression), (yyvsp[(2) - (2)].locking_clause_list)),
                                        nullptr, true);
          }
    break;

  case 1346:

/* Line 1455 of yacc.c  */
#line 9878 "sql_yacc.yy"
    {
            (yyval.top_level_node) = (yyvsp[(2) - (3)].top_level_node);
          }
    break;

  case 1347:

/* Line 1455 of yacc.c  */
#line 9882 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[(1) - (2)].query_expression), (yyvsp[(2) - (2)].into_destination));
          }
    break;

  case 1348:

/* Line 1455 of yacc.c  */
#line 9886 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[(1) - (3)].query_expression), (yyvsp[(3) - (3)].locking_clause_list)), (yyvsp[(2) - (3)].into_destination), true);
          }
    break;

  case 1349:

/* Line 1455 of yacc.c  */
#line 9890 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[(1) - (3)].query_expression), (yyvsp[(2) - (3)].locking_clause_list)), (yyvsp[(3) - (3)].into_destination));
          }
    break;

  case 1350:

/* Line 1455 of yacc.c  */
#line 9931 "sql_yacc.yy"
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[(1) - (3)].query_expression_body_opt_parens).body, (yyvsp[(2) - (3)].order), (yyvsp[(3) - (3)].limit_clause));
          }
    break;

  case 1351:

/* Line 1455 of yacc.c  */
#line 9938 "sql_yacc.yy"
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].with_clause), (yyvsp[(2) - (4)].query_expression_body_opt_parens).body, (yyvsp[(3) - (4)].order), (yyvsp[(4) - (4)].limit_clause));
          }
    break;

  case 1352:

/* Line 1455 of yacc.c  */
#line 9945 "sql_yacc.yy"
    {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[(1) - (1)].query_primary), false};
          }
    break;

  case 1353:

/* Line 1455 of yacc.c  */
#line 9949 "sql_yacc.yy"
    {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[(1) - (1)].query_expression_body), true};
          }
    break;

  case 1354:

/* Line 1455 of yacc.c  */
#line 9953 "sql_yacc.yy"
    {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression_body_opt_parens).body, (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_expression_body_opt_parens).body, (yyvsp[(4) - (4)].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
    break;

  case 1355:

/* Line 1455 of yacc.c  */
#line 9958 "sql_yacc.yy"
    {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_except((yyvsp[(1) - (4)].query_expression_body_opt_parens).body, (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_expression_body_opt_parens).body, (yyvsp[(4) - (4)].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
    break;

  case 1356:

/* Line 1455 of yacc.c  */
#line 9963 "sql_yacc.yy"
    {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_intersect((yyvsp[(1) - (4)].query_expression_body_opt_parens).body, (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_expression_body_opt_parens).body, (yyvsp[(4) - (4)].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
    break;

  case 1357:

/* Line 1455 of yacc.c  */
#line 9970 "sql_yacc.yy"
    { (yyval.query_expression_body) = (yyvsp[(2) - (3)].query_expression_body); }
    break;

  case 1358:

/* Line 1455 of yacc.c  */
#line 9971 "sql_yacc.yy"
    { (yyval.query_expression_body) = (yyvsp[(2) - (3)].query_expression_body); }
    break;

  case 1359:

/* Line 1455 of yacc.c  */
#line 9976 "sql_yacc.yy"
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[(1) - (1)].query_primary);
          }
    break;

  case 1360:

/* Line 1455 of yacc.c  */
#line 9981 "sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[(1) - (1)].values_list));
          }
    break;

  case 1361:

/* Line 1455 of yacc.c  */
#line 9985 "sql_yacc.yy"
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[(1) - (1)].table_reference_list));
          }
    break;

  case 1362:

/* Line 1455 of yacc.c  */
#line 10005 "sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (9)].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (9)].select_options),  // select_options
                                      (yyvsp[(3) - (9)].item_list2),  // select_item_list
                                      (yyvsp[(4) - (9)].into_destination),  // into_clause
                                      (yyvsp[(5) - (9)].table_reference_list),  // from
                                      (yyvsp[(6) - (9)].item),  // where
                                      (yyvsp[(7) - (9)].group),  // group
                                      (yyvsp[(8) - (9)].item),  // having
                                      (yyvsp[(9) - (9)].windows),  // windows
                                      (yylsp[(5) - (9)]).raw.is_empty()); // implicit FROM
          }
    break;

  case 1363:

/* Line 1455 of yacc.c  */
#line 10026 "sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (8)].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (8)].select_options),  // select_options
                                      (yyvsp[(3) - (8)].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[(4) - (8)].table_reference_list),  // from
                                      (yyvsp[(5) - (8)].item),  // where
                                      (yyvsp[(6) - (8)].group),  // group
                                      (yyvsp[(7) - (8)].item),  // having
                                      (yyvsp[(8) - (8)].windows),  // windows
                                      (yylsp[(4) - (8)]).raw.is_empty()); // implicit FROM
          }
    break;

  case 1364:

/* Line 1455 of yacc.c  */
#line 10042 "sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1366:

/* Line 1455 of yacc.c  */
#line 10047 "sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1367:

/* Line 1455 of yacc.c  */
#line 10051 "sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1369:

/* Line 1455 of yacc.c  */
#line 10057 "sql_yacc.yy"
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[(1) - (1)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1370:

/* Line 1455 of yacc.c  */
#line 10063 "sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(1) - (3)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(3) - (3)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1371:

/* Line 1455 of yacc.c  */
#line 10072 "sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1372:

/* Line 1455 of yacc.c  */
#line 10079 "sql_yacc.yy"
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[(2) - (2)].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1373:

/* Line 1455 of yacc.c  */
#line 10090 "sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
          }
    break;

  case 1375:

/* Line 1455 of yacc.c  */
#line 10098 "sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1377:

/* Line 1455 of yacc.c  */
#line 10107 "sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
          }
    break;

  case 1378:

/* Line 1455 of yacc.c  */
#line 10111 "sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
    break;

  case 1379:

/* Line 1455 of yacc.c  */
#line 10120 "sql_yacc.yy"
    {
            (yyval.locking_clause_list)= (yyvsp[(1) - (2)].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[(2) - (2)].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1380:

/* Line 1455 of yacc.c  */
#line 10126 "sql_yacc.yy"
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[(1) - (1)].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1381:

/* Line 1455 of yacc.c  */
#line 10135 "sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[(2) - (3)].lock_strength), (yyvsp[(3) - (3)].locked_row_action));
          }
    break;

  case 1382:

/* Line 1455 of yacc.c  */
#line 10139 "sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[(2) - (4)].lock_strength), (yyvsp[(3) - (4)].table_ident_list), (yyvsp[(4) - (4)].locked_row_action));
          }
    break;

  case 1383:

/* Line 1455 of yacc.c  */
#line 10143 "sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
    break;

  case 1384:

/* Line 1455 of yacc.c  */
#line 10149 "sql_yacc.yy"
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
    break;

  case 1385:

/* Line 1455 of yacc.c  */
#line 10150 "sql_yacc.yy"
    { (yyval.lock_strength)= Lock_strength::SHARE; }
    break;

  case 1386:

/* Line 1455 of yacc.c  */
#line 10154 "sql_yacc.yy"
    { (yyval.table_ident_list)= (yyvsp[(2) - (2)].table_ident_list); }
    break;

  case 1387:

/* Line 1455 of yacc.c  */
#line 10158 "sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
    break;

  case 1389:

/* Line 1455 of yacc.c  */
#line 10163 "sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
    break;

  case 1390:

/* Line 1455 of yacc.c  */
#line 10164 "sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
    break;

  case 1391:

/* Line 1455 of yacc.c  */
#line 10169 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1392:

/* Line 1455 of yacc.c  */
#line 10175 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1393:

/* Line 1455 of yacc.c  */
#line 10181 "sql_yacc.yy"
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1394:

/* Line 1455 of yacc.c  */
#line 10190 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1395:

/* Line 1455 of yacc.c  */
#line 10192 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str)));
          }
    break;

  case 1396:

/* Line 1455 of yacc.c  */
#line 10199 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=null_lex_str;}
    break;

  case 1397:

/* Line 1455 of yacc.c  */
#line 10200 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(2) - (2)].lexer.lex_str); }
    break;

  case 1398:

/* Line 1455 of yacc.c  */
#line 10201 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(2) - (2)].lexer.lex_str); }
    break;

  case 1399:

/* Line 1455 of yacc.c  */
#line 10202 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(1) - (1)].lexer.lex_str); }
    break;

  case 1400:

/* Line 1455 of yacc.c  */
#line 10203 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(1) - (1)].lexer.lex_str); }
    break;

  case 1401:

/* Line 1455 of yacc.c  */
#line 10207 "sql_yacc.yy"
    {}
    break;

  case 1402:

/* Line 1455 of yacc.c  */
#line 10208 "sql_yacc.yy"
    {}
    break;

  case 1403:

/* Line 1455 of yacc.c  */
#line 10214 "sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1404:

/* Line 1455 of yacc.c  */
#line 10220 "sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1405:

/* Line 1455 of yacc.c  */
#line 10225 "sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1406:

/* Line 1455 of yacc.c  */
#line 10231 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[(2) - (2)].item), Item::BOOL_NEGATED);
          }
    break;

  case 1407:

/* Line 1455 of yacc.c  */
#line 10235 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[(1) - (3)].item), Item::BOOL_IS_TRUE);
          }
    break;

  case 1408:

/* Line 1455 of yacc.c  */
#line 10239 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[(1) - (4)].item), Item::BOOL_NOT_TRUE);
          }
    break;

  case 1409:

/* Line 1455 of yacc.c  */
#line 10243 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[(1) - (3)].item), Item::BOOL_IS_FALSE);
          }
    break;

  case 1410:

/* Line 1455 of yacc.c  */
#line 10247 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[(1) - (4)].item), Item::BOOL_NOT_FALSE);
          }
    break;

  case 1411:

/* Line 1455 of yacc.c  */
#line 10251 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1412:

/* Line 1455 of yacc.c  */
#line 10255 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1414:

/* Line 1455 of yacc.c  */
#line 10263 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1415:

/* Line 1455 of yacc.c  */
#line 10267 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1416:

/* Line 1455 of yacc.c  */
#line 10271 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1417:

/* Line 1455 of yacc.c  */
#line 10275 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (4)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[(2) - (4)]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(2) - (4)].boolfunc2creator), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].subquery));
          }
    break;

  case 1419:

/* Line 1455 of yacc.c  */
#line 10292 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].subquery));
          }
    break;

  case 1420:

/* Line 1455 of yacc.c  */
#line 10296 "sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
    break;

  case 1421:

/* Line 1455 of yacc.c  */
#line 10301 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1422:

/* Line 1455 of yacc.c  */
#line 10305 "sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1423:

/* Line 1455 of yacc.c  */
#line 10312 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1424:

/* Line 1455 of yacc.c  */
#line 10316 "sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1425:

/* Line 1455 of yacc.c  */
#line 10325 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1426:

/* Line 1455 of yacc.c  */
#line 10329 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1427:

/* Line 1455 of yacc.c  */
#line 10333 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1428:

/* Line 1455 of yacc.c  */
#line 10337 "sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1429:

/* Line 1455 of yacc.c  */
#line 10345 "sql_yacc.yy"
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1430:

/* Line 1455 of yacc.c  */
#line 10349 "sql_yacc.yy"
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1431:

/* Line 1455 of yacc.c  */
#line 10353 "sql_yacc.yy"
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1432:

/* Line 1455 of yacc.c  */
#line 10358 "sql_yacc.yy"
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1433:

/* Line 1455 of yacc.c  */
#line 10363 "sql_yacc.yy"
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[(1) - (3)].item));
            args->push_back((yyvsp[(3) - (3)].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[(1) - (3)]), args);
          }
    break;

  case 1434:

/* Line 1455 of yacc.c  */
#line 10371 "sql_yacc.yy"
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[(1) - (4)].item));
            args->push_back((yyvsp[(4) - (4)].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
    break;

  case 1438:

/* Line 1455 of yacc.c  */
#line 10388 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1439:

/* Line 1455 of yacc.c  */
#line 10392 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1440:

/* Line 1455 of yacc.c  */
#line 10396 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1441:

/* Line 1455 of yacc.c  */
#line 10400 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1442:

/* Line 1455 of yacc.c  */
#line 10404 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1443:

/* Line 1455 of yacc.c  */
#line 10408 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1444:

/* Line 1455 of yacc.c  */
#line 10412 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1445:

/* Line 1455 of yacc.c  */
#line 10416 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1446:

/* Line 1455 of yacc.c  */
#line 10420 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1447:

/* Line 1455 of yacc.c  */
#line 10424 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1448:

/* Line 1455 of yacc.c  */
#line 10428 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1449:

/* Line 1455 of yacc.c  */
#line 10432 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1450:

/* Line 1455 of yacc.c  */
#line 10436 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1451:

/* Line 1455 of yacc.c  */
#line 10440 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1456:

/* Line 1455 of yacc.c  */
#line 10454 "sql_yacc.yy"
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
    break;

  case 1459:

/* Line 1455 of yacc.c  */
#line 10465 "sql_yacc.yy"
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
    break;

  case 1461:

/* Line 1455 of yacc.c  */
#line 10470 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1462:

/* Line 1455 of yacc.c  */
#line 10471 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1463:

/* Line 1455 of yacc.c  */
#line 10472 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1464:

/* Line 1455 of yacc.c  */
#line 10473 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1465:

/* Line 1455 of yacc.c  */
#line 10474 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1466:

/* Line 1455 of yacc.c  */
#line 10475 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1467:

/* Line 1455 of yacc.c  */
#line 10476 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1468:

/* Line 1455 of yacc.c  */
#line 10480 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1469:

/* Line 1455 of yacc.c  */
#line 10481 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1475:

/* Line 1455 of yacc.c  */
#line 10491 "sql_yacc.yy"
    {
            warn_on_deprecated_user_defined_collation(YYTHD, (yyvsp[(3) - (3)].lexer.lex_str));
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 1477:

/* Line 1455 of yacc.c  */
#line 10496 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1482:

/* Line 1455 of yacc.c  */
#line 10502 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1483:

/* Line 1455 of yacc.c  */
#line 10506 "sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1484:

/* Line 1455 of yacc.c  */
#line 10510 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1485:

/* Line 1455 of yacc.c  */
#line 10514 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1486:

/* Line 1455 of yacc.c  */
#line 10518 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[(2) - (2)].item), Item::BOOL_NEGATED);
          }
    break;

  case 1487:

/* Line 1455 of yacc.c  */
#line 10522 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(1) - (1)].subquery));
          }
    break;

  case 1488:

/* Line 1455 of yacc.c  */
#line 10525 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1489:

/* Line 1455 of yacc.c  */
#line 10527 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1490:

/* Line 1455 of yacc.c  */
#line 10531 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1491:

/* Line 1455 of yacc.c  */
#line 10535 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(2) - (2)].subquery));
          }
    break;

  case 1492:

/* Line 1455 of yacc.c  */
#line 10539 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lexer.lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1493:

/* Line 1455 of yacc.c  */
#line 10543 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1494:

/* Line 1455 of yacc.c  */
#line 10547 "sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1495:

/* Line 1455 of yacc.c  */
#line 10552 "sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (7)]), (yyvsp[(3) - (7)].item), (yyvsp[(5) - (7)].cast_type), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1496:

/* Line 1455 of yacc.c  */
#line 10556 "sql_yacc.yy"
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
    break;

  case 1497:

/* Line 1455 of yacc.c  */
#line 10561 "sql_yacc.yy"
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[(11) - (12)].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[(3) - (12)]), (yyvsp[(3) - (12)].item), (yyvsp[(8) - (12)].lexer.lex_str).str, (yyvsp[(7) - (12)].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[(3) - (12)]), datetime_factor, cast_type, false);
          }
    break;

  case 1498:

/* Line 1455 of yacc.c  */
#line 10568 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1499:

/* Line 1455 of yacc.c  */
#line 10572 "sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), false);
          }
    break;

  case 1500:

/* Line 1455 of yacc.c  */
#line 10576 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].lexer.charset));
          }
    break;

  case 1501:

/* Line 1455 of yacc.c  */
#line 10580 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1502:

/* Line 1455 of yacc.c  */
#line 10584 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1503:

/* Line 1455 of yacc.c  */
#line 10589 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1504:

/* Line 1455 of yacc.c  */
#line 10593 "sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1505:

/* Line 1455 of yacc.c  */
#line 10600 "sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
    break;

  case 1506:

/* Line 1455 of yacc.c  */
#line 10610 "sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 1507:

/* Line 1455 of yacc.c  */
#line 10611 "sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 1508:

/* Line 1455 of yacc.c  */
#line 10622 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1509:

/* Line 1455 of yacc.c  */
#line 10626 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].lexer.charset));
          }
    break;

  case 1510:

/* Line 1455 of yacc.c  */
#line 10630 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1511:

/* Line 1455 of yacc.c  */
#line 10634 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1512:

/* Line 1455 of yacc.c  */
#line 10638 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1513:

/* Line 1455 of yacc.c  */
#line 10642 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1514:

/* Line 1455 of yacc.c  */
#line 10646 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1515:

/* Line 1455 of yacc.c  */
#line 10650 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1516:

/* Line 1455 of yacc.c  */
#line 10654 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1517:

/* Line 1455 of yacc.c  */
#line 10659 "sql_yacc.yy"
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[(3) - (8)]), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].text_literal), (yyvsp[(6) - (8)].cast_type),
                                       (yyvsp[(7) - (8)].json_on_error_or_empty).empty.type, (yyvsp[(7) - (8)].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[(7) - (8)].json_on_error_or_empty).error.type, (yyvsp[(7) - (8)].json_on_error_or_empty).error.default_string);
          }
    break;

  case 1518:

/* Line 1455 of yacc.c  */
#line 10665 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1519:

/* Line 1455 of yacc.c  */
#line 10669 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1520:

/* Line 1455 of yacc.c  */
#line 10673 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1521:

/* Line 1455 of yacc.c  */
#line 10677 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1522:

/* Line 1455 of yacc.c  */
#line 10681 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1523:

/* Line 1455 of yacc.c  */
#line 10685 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1524:

/* Line 1455 of yacc.c  */
#line 10689 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1525:

/* Line 1455 of yacc.c  */
#line 10693 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1526:

/* Line 1455 of yacc.c  */
#line 10697 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1527:

/* Line 1455 of yacc.c  */
#line 10702 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1528:

/* Line 1455 of yacc.c  */
#line 10707 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1529:

/* Line 1455 of yacc.c  */
#line 10712 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1530:

/* Line 1455 of yacc.c  */
#line 10716 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1531:

/* Line 1455 of yacc.c  */
#line 10720 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1532:

/* Line 1455 of yacc.c  */
#line 10724 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1533:

/* Line 1455 of yacc.c  */
#line 10728 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1534:

/* Line 1455 of yacc.c  */
#line 10733 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1535:

/* Line 1455 of yacc.c  */
#line 10737 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1536:

/* Line 1455 of yacc.c  */
#line 10756 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1537:

/* Line 1455 of yacc.c  */
#line 10760 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1538:

/* Line 1455 of yacc.c  */
#line 10764 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1539:

/* Line 1455 of yacc.c  */
#line 10768 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1540:

/* Line 1455 of yacc.c  */
#line 10773 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1541:

/* Line 1455 of yacc.c  */
#line 10778 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1542:

/* Line 1455 of yacc.c  */
#line 10782 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1543:

/* Line 1455 of yacc.c  */
#line 10786 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1544:

/* Line 1455 of yacc.c  */
#line 10790 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1545:

/* Line 1455 of yacc.c  */
#line 10795 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1546:

/* Line 1455 of yacc.c  */
#line 10799 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1547:

/* Line 1455 of yacc.c  */
#line 10803 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1548:

/* Line 1455 of yacc.c  */
#line 10807 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1549:

/* Line 1455 of yacc.c  */
#line 10811 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1550:

/* Line 1455 of yacc.c  */
#line 10815 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1551:

/* Line 1455 of yacc.c  */
#line 10819 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1552:

/* Line 1455 of yacc.c  */
#line 10823 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1553:

/* Line 1455 of yacc.c  */
#line 10828 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1554:

/* Line 1455 of yacc.c  */
#line 10832 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1555:

/* Line 1455 of yacc.c  */
#line 10836 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1556:

/* Line 1455 of yacc.c  */
#line 10840 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1557:

/* Line 1455 of yacc.c  */
#line 10844 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1558:

/* Line 1455 of yacc.c  */
#line 10854 "sql_yacc.yy"
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
    break;

  case 1559:

/* Line 1455 of yacc.c  */
#line 10858 "sql_yacc.yy"
    {
            (yyval.cast_type)= (yyvsp[(2) - (2)].cast_type);
          }
    break;

  case 1560:

/* Line 1455 of yacc.c  */
#line 10869 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1561:

/* Line 1455 of yacc.c  */
#line 10873 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1562:

/* Line 1455 of yacc.c  */
#line 10877 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1563:

/* Line 1455 of yacc.c  */
#line 10881 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1564:

/* Line 1455 of yacc.c  */
#line 10885 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1565:

/* Line 1455 of yacc.c  */
#line 10889 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1566:

/* Line 1455 of yacc.c  */
#line 10893 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1567:

/* Line 1455 of yacc.c  */
#line 10897 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1568:

/* Line 1455 of yacc.c  */
#line 10901 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1569:

/* Line 1455 of yacc.c  */
#line 10905 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1570:

/* Line 1455 of yacc.c  */
#line 10909 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1571:

/* Line 1455 of yacc.c  */
#line 10913 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1572:

/* Line 1455 of yacc.c  */
#line 10917 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1573:

/* Line 1455 of yacc.c  */
#line 10921 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1574:

/* Line 1455 of yacc.c  */
#line 10925 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1575:

/* Line 1455 of yacc.c  */
#line 10929 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1576:

/* Line 1455 of yacc.c  */
#line 10933 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1577:

/* Line 1455 of yacc.c  */
#line 10937 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1578:

/* Line 1455 of yacc.c  */
#line 10941 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (4)].item), 0, 0, 0);
          }
    break;

  case 1579:

/* Line 1455 of yacc.c  */
#line 10945 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), 0);
          }
    break;

  case 1580:

/* Line 1455 of yacc.c  */
#line 10949 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), 0, true);
          }
    break;

  case 1581:

/* Line 1455 of yacc.c  */
#line 10953 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1583:

/* Line 1455 of yacc.c  */
#line 10961 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1584:

/* Line 1455 of yacc.c  */
#line 10967 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1585:

/* Line 1455 of yacc.c  */
#line 10973 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1586:

/* Line 1455 of yacc.c  */
#line 10979 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1587:

/* Line 1455 of yacc.c  */
#line 10985 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1588:

/* Line 1455 of yacc.c  */
#line 10991 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1589:

/* Line 1455 of yacc.c  */
#line 10995 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1590:

/* Line 1455 of yacc.c  */
#line 11013 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lexer.lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1591:

/* Line 1455 of yacc.c  */
#line 11017 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lexer.lex_str), (yyvsp[(3) - (6)].lexer.lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1592:

/* Line 1455 of yacc.c  */
#line 11024 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1593:

/* Line 1455 of yacc.c  */
#line 11026 "sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
    break;

  case 1594:

/* Line 1455 of yacc.c  */
#line 11038 "sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1595:

/* Line 1455 of yacc.c  */
#line 11039 "sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1596:

/* Line 1455 of yacc.c  */
#line 11043 "sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1597:

/* Line 1455 of yacc.c  */
#line 11044 "sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1598:

/* Line 1455 of yacc.c  */
#line 11048 "sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1599:

/* Line 1455 of yacc.c  */
#line 11049 "sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1600:

/* Line 1455 of yacc.c  */
#line 11054 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1601:

/* Line 1455 of yacc.c  */
#line 11060 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1602:

/* Line 1455 of yacc.c  */
#line 11069 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lexer.lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1605:

/* Line 1455 of yacc.c  */
#line 11081 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (5)].item), false, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1606:

/* Line 1455 of yacc.c  */
#line 11085 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (6)].item), true, (yyvsp[(6) - (6)].window));
          }
    break;

  case 1607:

/* Line 1455 of yacc.c  */
#line 11089 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1608:

/* Line 1455 of yacc.c  */
#line 11093 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1609:

/* Line 1455 of yacc.c  */
#line 11097 "sql_yacc.yy"
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window), std::move(wrapper),
                                             std::move(array));
          }
    break;

  case 1610:

/* Line 1455 of yacc.c  */
#line 11107 "sql_yacc.yy"
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[(3) - (7)].item), (yyvsp[(5) - (7)].item), (yyvsp[(7) - (7)].window), std::move(wrapper), std::move(object));
          }
    break;

  case 1611:

/* Line 1455 of yacc.c  */
#line 11117 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window), false);
          }
    break;

  case 1612:

/* Line 1455 of yacc.c  */
#line 11121 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].window), true );
          }
    break;

  case 1613:

/* Line 1455 of yacc.c  */
#line 11125 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1614:

/* Line 1455 of yacc.c  */
#line 11129 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1615:

/* Line 1455 of yacc.c  */
#line 11133 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1616:

/* Line 1455 of yacc.c  */
#line 11137 "sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (6)].item_list2), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1617:

/* Line 1455 of yacc.c  */
#line 11141 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1618:

/* Line 1455 of yacc.c  */
#line 11150 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1619:

/* Line 1455 of yacc.c  */
#line 11154 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1620:

/* Line 1455 of yacc.c  */
#line 11158 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1621:

/* Line 1455 of yacc.c  */
#line 11162 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (5)].item), 0, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1622:

/* Line 1455 of yacc.c  */
#line 11166 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (5)].item), 0, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1623:

/* Line 1455 of yacc.c  */
#line 11170 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (5)].item), 1, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1624:

/* Line 1455 of yacc.c  */
#line 11174 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (5)].item), 1, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1625:

/* Line 1455 of yacc.c  */
#line 11178 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (5)].item), false, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1626:

/* Line 1455 of yacc.c  */
#line 11182 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (6)].item), true, (yyvsp[(6) - (6)].window));
          }
    break;

  case 1627:

/* Line 1455 of yacc.c  */
#line 11189 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (8)].num), (yyvsp[(4) - (8)].item_list2), (yyvsp[(5) - (8)].order_list), (yyvsp[(6) - (8)].string), (yyvsp[(8) - (8)].window));
          }
    break;

  case 1628:

/* Line 1455 of yacc.c  */
#line 11196 "sql_yacc.yy"
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[(4) - (4)].window));
          }
    break;

  case 1629:

/* Line 1455 of yacc.c  */
#line 11200 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[(4) - (4)].window));
          }
    break;

  case 1630:

/* Line 1455 of yacc.c  */
#line 11204 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[(4) - (4)].window));
          }
    break;

  case 1631:

/* Line 1455 of yacc.c  */
#line 11208 "sql_yacc.yy"
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[(4) - (4)].window));
          }
    break;

  case 1632:

/* Line 1455 of yacc.c  */
#line 11212 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[(4) - (4)].window));
          }
    break;

  case 1633:

/* Line 1455 of yacc.c  */
#line 11216 "sql_yacc.yy"
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1634:

/* Line 1455 of yacc.c  */
#line 11220 "sql_yacc.yy"
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[(3) - (7)].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).offset != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).default_value != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[(6) - (7)].null_treatment), (yyvsp[(7) - (7)].window));
          }
    break;

  case 1635:

/* Line 1455 of yacc.c  */
#line 11231 "sql_yacc.yy"
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[(3) - (7)].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).offset != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).default_value != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[(6) - (7)].null_treatment), (yyvsp[(7) - (7)].window));
          }
    break;

  case 1636:

/* Line 1455 of yacc.c  */
#line 11242 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].null_treatment), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1637:

/* Line 1455 of yacc.c  */
#line 11246 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].null_treatment), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1638:

/* Line 1455 of yacc.c  */
#line 11250 "sql_yacc.yy"
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[(3) - (9)].item)) ||
                args->push_back((yyvsp[(5) - (9)].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[(7) - (9)].from_first_last) == NFL_FROM_LAST, (yyvsp[(8) - (9)].null_treatment), (yyvsp[(9) - (9)].window));
          }
    break;

  case 1639:

/* Line 1455 of yacc.c  */
#line 11262 "sql_yacc.yy"
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
    break;

  case 1640:

/* Line 1455 of yacc.c  */
#line 11267 "sql_yacc.yy"
    {
            (yyval.lead_lag_info).offset= (yyvsp[(2) - (3)].item);
            (yyval.lead_lag_info).default_value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1641:

/* Line 1455 of yacc.c  */
#line 11278 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1643:

/* Line 1455 of yacc.c  */
#line 11283 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1644:

/* Line 1455 of yacc.c  */
#line 11284 "sql_yacc.yy"
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str))); }
    break;

  case 1645:

/* Line 1455 of yacc.c  */
#line 11285 "sql_yacc.yy"
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[(2) - (2)].lexer.lex_str)); }
    break;

  case 1646:

/* Line 1455 of yacc.c  */
#line 11290 "sql_yacc.yy"
    {
            (yyval.item)= NULL;
          }
    break;

  case 1647:

/* Line 1455 of yacc.c  */
#line 11294 "sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1648:

/* Line 1455 of yacc.c  */
#line 11301 "sql_yacc.yy"
    {
            (yyval.null_treatment)= NT_NONE;
          }
    break;

  case 1649:

/* Line 1455 of yacc.c  */
#line 11305 "sql_yacc.yy"
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
    break;

  case 1650:

/* Line 1455 of yacc.c  */
#line 11309 "sql_yacc.yy"
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
    break;

  case 1651:

/* Line 1455 of yacc.c  */
#line 11317 "sql_yacc.yy"
    {
            (yyval.from_first_last)= NFL_NONE;
          }
    break;

  case 1652:

/* Line 1455 of yacc.c  */
#line 11321 "sql_yacc.yy"
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
    break;

  case 1653:

/* Line 1455 of yacc.c  */
#line 11325 "sql_yacc.yy"
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
    break;

  case 1654:

/* Line 1455 of yacc.c  */
#line 11332 "sql_yacc.yy"
    {
            (yyval.window)= NULL;
          }
    break;

  case 1655:

/* Line 1455 of yacc.c  */
#line 11336 "sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(1) - (1)].window);
          }
    break;

  case 1656:

/* Line 1455 of yacc.c  */
#line 11343 "sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(2) - (2)].window);
          }
    break;

  case 1657:

/* Line 1455 of yacc.c  */
#line 11350 "sql_yacc.yy"
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[(1) - (1)].item_string));
          }
    break;

  case 1658:

/* Line 1455 of yacc.c  */
#line 11354 "sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(1) - (1)].window);
          }
    break;

  case 1659:

/* Line 1455 of yacc.c  */
#line 11361 "sql_yacc.yy"
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, YYTHD->charset());
          }
    break;

  case 1660:

/* Line 1455 of yacc.c  */
#line 11368 "sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(2) - (3)].window);
          }
    break;

  case 1661:

/* Line 1455 of yacc.c  */
#line 11378 "sql_yacc.yy"
    {
             auto frame= (yyvsp[(4) - (4)].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[(3) - (4)].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[(2) - (4)].order_list), (yyvsp[(3) - (4)].order_list), frame, (yyvsp[(1) - (4)].item_string));
           }
    break;

  case 1662:

/* Line 1455 of yacc.c  */
#line 11395 "sql_yacc.yy"
    {
            (yyval.item_string)= NULL;
          }
    break;

  case 1663:

/* Line 1455 of yacc.c  */
#line 11399 "sql_yacc.yy"
    {
            (yyval.item_string)= (yyvsp[(1) - (1)].item_string);
          }
    break;

  case 1664:

/* Line 1455 of yacc.c  */
#line 11406 "sql_yacc.yy"
    {
            (yyval.order_list)= NULL;
          }
    break;

  case 1665:

/* Line 1455 of yacc.c  */
#line 11410 "sql_yacc.yy"
    {
            (yyval.order_list)= (yyvsp[(3) - (3)].order_list);
          }
    break;

  case 1666:

/* Line 1455 of yacc.c  */
#line 11417 "sql_yacc.yy"
    {
            (yyval.order_list)= NULL;
          }
    break;

  case 1667:

/* Line 1455 of yacc.c  */
#line 11421 "sql_yacc.yy"
    {
            (yyval.order_list)= (yyvsp[(3) - (3)].order_list);
          }
    break;

  case 1668:

/* Line 1455 of yacc.c  */
#line 11428 "sql_yacc.yy"
    {
            (yyval.window_frame)= NULL;
          }
    break;

  case 1669:

/* Line 1455 of yacc.c  */
#line 11434 "sql_yacc.yy"
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[(1) - (3)].frame_units), (yyvsp[(2) - (3)].frame_extent), (yyvsp[(3) - (3)].frame_exclusion));
          }
    break;

  case 1670:

/* Line 1455 of yacc.c  */
#line 11441 "sql_yacc.yy"
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[(1) - (1)].bound), end_bound);
          }
    break;

  case 1671:

/* Line 1455 of yacc.c  */
#line 11446 "sql_yacc.yy"
    {
            (yyval.frame_extent)= (yyvsp[(1) - (1)].frame_extent);
          }
    break;

  case 1672:

/* Line 1455 of yacc.c  */
#line 11453 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
    break;

  case 1673:

/* Line 1455 of yacc.c  */
#line 11457 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[(1) - (2)].item_num));
          }
    break;

  case 1674:

/* Line 1455 of yacc.c  */
#line 11461 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[(1) - (2)].param_marker));
          }
    break;

  case 1675:

/* Line 1455 of yacc.c  */
#line 11465 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[(2) - (4)].item), (yyvsp[(3) - (4)].interval));
          }
    break;

  case 1676:

/* Line 1455 of yacc.c  */
#line 11469 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
    break;

  case 1677:

/* Line 1455 of yacc.c  */
#line 11476 "sql_yacc.yy"
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[(2) - (4)].bound), (yyvsp[(4) - (4)].bound));
          }
    break;

  case 1678:

/* Line 1455 of yacc.c  */
#line 11483 "sql_yacc.yy"
    {
            (yyval.bound)= (yyvsp[(1) - (1)].bound);
          }
    break;

  case 1679:

/* Line 1455 of yacc.c  */
#line 11487 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
    break;

  case 1680:

/* Line 1455 of yacc.c  */
#line 11491 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[(1) - (2)].item_num));
          }
    break;

  case 1681:

/* Line 1455 of yacc.c  */
#line 11495 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[(1) - (2)].param_marker));
          }
    break;

  case 1682:

/* Line 1455 of yacc.c  */
#line 11499 "sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[(2) - (4)].item), (yyvsp[(3) - (4)].interval));
          }
    break;

  case 1683:

/* Line 1455 of yacc.c  */
#line 11506 "sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NULL;
          }
    break;

  case 1684:

/* Line 1455 of yacc.c  */
#line 11510 "sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
    break;

  case 1685:

/* Line 1455 of yacc.c  */
#line 11514 "sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
    break;

  case 1686:

/* Line 1455 of yacc.c  */
#line 11518 "sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
    break;

  case 1687:

/* Line 1455 of yacc.c  */
#line 11522 "sql_yacc.yy"
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
    break;

  case 1688:

/* Line 1455 of yacc.c  */
#line 11527 "sql_yacc.yy"
    { (yyval.frame_units)= WFU_ROWS; }
    break;

  case 1689:

/* Line 1455 of yacc.c  */
#line 11528 "sql_yacc.yy"
    { (yyval.frame_units)= WFU_RANGE; }
    break;

  case 1690:

/* Line 1455 of yacc.c  */
#line 11529 "sql_yacc.yy"
    { (yyval.frame_units)= WFU_GROUPS; }
    break;

  case 1691:

/* Line 1455 of yacc.c  */
#line 11534 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1692:

/* Line 1455 of yacc.c  */
#line 11541 "sql_yacc.yy"
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item) = NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(2) - (4)].lexer.lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1693:

/* Line 1455 of yacc.c  */
#line 11551 "sql_yacc.yy"
    {
            (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 1694:

/* Line 1455 of yacc.c  */
#line 11555 "sql_yacc.yy"
    {
            (yyval.item) = NEW_PTN PTI_get_system_variable((yyloc), (yyvsp[(3) - (4)].var_type),
                                                 (yylsp[(4) - (4)]), (yyvsp[(4) - (4)].bipartite_name).prefix, (yyvsp[(4) - (4)].bipartite_name).name);
          }
    break;

  case 1695:

/* Line 1455 of yacc.c  */
#line 11562 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1696:

/* Line 1455 of yacc.c  */
#line 11563 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1697:

/* Line 1455 of yacc.c  */
#line 11568 "sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1698:

/* Line 1455 of yacc.c  */
#line 11573 "sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1699:

/* Line 1455 of yacc.c  */
#line 11577 "sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1700:

/* Line 1455 of yacc.c  */
#line 11578 "sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1701:

/* Line 1455 of yacc.c  */
#line 11583 "sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1702:

/* Line 1455 of yacc.c  */
#line 11588 "sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1703:

/* Line 1455 of yacc.c  */
#line 11598 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1704:

/* Line 1455 of yacc.c  */
#line 11605 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1705:

/* Line 1455 of yacc.c  */
#line 11612 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[(3) - (3)].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[(3) - (3)].charset_with_opt_binary).charset ? (yyvsp[(3) - (3)].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_opt_binary).charset;
          }
    break;

  case 1706:

/* Line 1455 of yacc.c  */
#line 11631 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 1707:

/* Line 1455 of yacc.c  */
#line 11639 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1708:

/* Line 1455 of yacc.c  */
#line 11646 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1709:

/* Line 1455 of yacc.c  */
#line 11653 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1710:

/* Line 1455 of yacc.c  */
#line 11660 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1711:

/* Line 1455 of yacc.c  */
#line 11667 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1712:

/* Line 1455 of yacc.c  */
#line 11674 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1713:

/* Line 1455 of yacc.c  */
#line 11681 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1714:

/* Line 1455 of yacc.c  */
#line 11688 "sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1715:

/* Line 1455 of yacc.c  */
#line 11695 "sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1716:

/* Line 1455 of yacc.c  */
#line 11702 "sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1717:

/* Line 1455 of yacc.c  */
#line 11709 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ((yyvsp[(1) - (1)].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1718:

/* Line 1455 of yacc.c  */
#line 11717 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1719:

/* Line 1455 of yacc.c  */
#line 11724 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1720:

/* Line 1455 of yacc.c  */
#line 11731 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1721:

/* Line 1455 of yacc.c  */
#line 11738 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1722:

/* Line 1455 of yacc.c  */
#line 11745 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1723:

/* Line 1455 of yacc.c  */
#line 11752 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1724:

/* Line 1455 of yacc.c  */
#line 11759 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1725:

/* Line 1455 of yacc.c  */
#line 11766 "sql_yacc.yy"
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
    break;

  case 1726:

/* Line 1455 of yacc.c  */
#line 11775 "sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1728:

/* Line 1455 of yacc.c  */
#line 11781 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1729:

/* Line 1455 of yacc.c  */
#line 11787 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1730:

/* Line 1455 of yacc.c  */
#line 11795 "sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1731:

/* Line 1455 of yacc.c  */
#line 11796 "sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1732:

/* Line 1455 of yacc.c  */
#line 11801 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1733:

/* Line 1455 of yacc.c  */
#line 11807 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1734:

/* Line 1455 of yacc.c  */
#line 11815 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1735:

/* Line 1455 of yacc.c  */
#line 11816 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1736:

/* Line 1455 of yacc.c  */
#line 11820 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1737:

/* Line 1455 of yacc.c  */
#line 11821 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1738:

/* Line 1455 of yacc.c  */
#line 11826 "sql_yacc.yy"
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1739:

/* Line 1455 of yacc.c  */
#line 11834 "sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1740:

/* Line 1455 of yacc.c  */
#line 11842 "sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1741:

/* Line 1455 of yacc.c  */
#line 11843 "sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1742:

/* Line 1455 of yacc.c  */
#line 11845 "sql_yacc.yy"
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[(3) - (4)].table_reference);
          }
    break;

  case 1743:

/* Line 1455 of yacc.c  */
#line 11857 "sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1744:

/* Line 1455 of yacc.c  */
#line 11858 "sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1745:

/* Line 1455 of yacc.c  */
#line 11940 "sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1746:

/* Line 1455 of yacc.c  */
#line 11945 "sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1747:

/* Line 1455 of yacc.c  */
#line 11949 "sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1748:

/* Line 1455 of yacc.c  */
#line 11953 "sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1749:

/* Line 1455 of yacc.c  */
#line 11958 "sql_yacc.yy"
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), NULL);

            if ((yyvsp[(3) - (3)].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[(3) - (3)].table_reference)->add_cross_join(this_cross_join);
          }
    break;

  case 1750:

/* Line 1455 of yacc.c  */
#line 11967 "sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), (yyvsp[(3) - (3)].table_reference));
          }
    break;

  case 1751:

/* Line 1455 of yacc.c  */
#line 11973 "sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_INNER; }
    break;

  case 1752:

/* Line 1455 of yacc.c  */
#line 11974 "sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
    break;

  case 1753:

/* Line 1455 of yacc.c  */
#line 11975 "sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
    break;

  case 1754:

/* Line 1455 of yacc.c  */
#line 11979 "sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1755:

/* Line 1455 of yacc.c  */
#line 11980 "sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1756:

/* Line 1455 of yacc.c  */
#line 11981 "sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1757:

/* Line 1455 of yacc.c  */
#line 11982 "sql_yacc.yy"
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
    break;

  case 1758:

/* Line 1455 of yacc.c  */
#line 11985 "sql_yacc.yy"
    { (yyval.join_type)= JTT_LEFT; }
    break;

  case 1759:

/* Line 1455 of yacc.c  */
#line 11986 "sql_yacc.yy"
    { (yyval.join_type)= JTT_RIGHT; }
    break;

  case 1764:

/* Line 1455 of yacc.c  */
#line 12004 "sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1766:

/* Line 1455 of yacc.c  */
#line 12010 "sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1769:

/* Line 1455 of yacc.c  */
#line 12040 "sql_yacc.yy"
    { (yyval.table_reference) = (yyvsp[(1) - (1)].derived_table); }
    break;

  case 1770:

/* Line 1455 of yacc.c  */
#line 12042 "sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[(1) - (1)].join_table)); }
    break;

  case 1771:

/* Line 1455 of yacc.c  */
#line 12044 "sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[(1) - (1)].table_reference_list)); }
    break;

  case 1772:

/* Line 1455 of yacc.c  */
#line 12045 "sql_yacc.yy"
    { (yyval.table_reference) = (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1773:

/* Line 1455 of yacc.c  */
#line 12049 "sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (3)].table_reference_list); }
    break;

  case 1774:

/* Line 1455 of yacc.c  */
#line 12051 "sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(2) - (5)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(4) - (5)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1775:

/* Line 1455 of yacc.c  */
#line 12059 "sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1776:

/* Line 1455 of yacc.c  */
#line 12060 "sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1777:

/* Line 1455 of yacc.c  */
#line 12065 "sql_yacc.yy"
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_cstr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1778:

/* Line 1455 of yacc.c  */
#line 12071 "sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1779:

/* Line 1455 of yacc.c  */
#line 12072 "sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1780:

/* Line 1455 of yacc.c  */
#line 12077 "sql_yacc.yy"
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[(2) - (3)].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[(1) - (3)].subquery), (yyvsp[(2) - (3)].lex_cstr), &(yyvsp[(3) - (3)].simple_ident_list));
          }
    break;

  case 1781:

/* Line 1455 of yacc.c  */
#line 12090 "sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[(2) - (4)].subquery), (yyvsp[(3) - (4)].lex_cstr), &(yyvsp[(4) - (4)].simple_ident_list));
          }
    break;

  case 1782:

/* Line 1455 of yacc.c  */
#line 12102 "sql_yacc.yy"
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[(8) - (8)].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].text_literal), (yyvsp[(6) - (8)].jtc_list), to_lex_string((yyvsp[(8) - (8)].lex_cstr)));
          }
    break;

  case 1783:

/* Line 1455 of yacc.c  */
#line 12117 "sql_yacc.yy"
    {
            (yyval.jtc_list)= (yyvsp[(3) - (4)].jtc_list);
          }
    break;

  case 1784:

/* Line 1455 of yacc.c  */
#line 12124 "sql_yacc.yy"
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[(1) - (1)].jt_column)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1785:

/* Line 1455 of yacc.c  */
#line 12130 "sql_yacc.yy"
    {
            (yyval.jtc_list)= (yyvsp[(1) - (3)].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[(3) - (3)].jt_column)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1786:

/* Line 1455 of yacc.c  */
#line 12139 "sql_yacc.yy"
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[(1) - (3)].lexer.lex_str));
          }
    break;

  case 1787:

/* Line 1455 of yacc.c  */
#line 12144 "sql_yacc.yy"
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[(4) - (7)].jt_column_type), (yyvsp[(6) - (7)].text_literal), (yyvsp[(7) - (7)].json_on_error_or_empty).error.type, (yyvsp[(7) - (7)].json_on_error_or_empty).error.default_string,
                (yyvsp[(7) - (7)].json_on_error_or_empty).empty.type, (yyvsp[(7) - (7)].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[(1) - (7)].lexer.lex_str),
                                                        (yyvsp[(2) - (7)].type), (yyvsp[(3) - (7)].lexer.charset));
          }
    break;

  case 1788:

/* Line 1455 of yacc.c  */
#line 12153 "sql_yacc.yy"
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[(3) - (4)].text_literal), (yyvsp[(4) - (4)].jtc_list));
          }
    break;

  case 1789:

/* Line 1455 of yacc.c  */
#line 12159 "sql_yacc.yy"
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
    break;

  case 1790:

/* Line 1455 of yacc.c  */
#line 12163 "sql_yacc.yy"
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
    break;

  case 1791:

/* Line 1455 of yacc.c  */
#line 12173 "sql_yacc.yy"
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
    break;

  case 1792:

/* Line 1455 of yacc.c  */
#line 12178 "sql_yacc.yy"
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[(1) - (1)].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
    break;

  case 1793:

/* Line 1455 of yacc.c  */
#line 12183 "sql_yacc.yy"
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[(1) - (1)].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
    break;

  case 1794:

/* Line 1455 of yacc.c  */
#line 12188 "sql_yacc.yy"
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[(1) - (2)].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[(2) - (2)].json_on_response);
          }
    break;

  case 1795:

/* Line 1455 of yacc.c  */
#line 12196 "sql_yacc.yy"
    { (yyval.json_on_error_or_empty) = (yyvsp[(1) - (1)].json_on_error_or_empty); }
    break;

  case 1796:

/* Line 1455 of yacc.c  */
#line 12198 "sql_yacc.yy"
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[(1) - (2)].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[(2) - (2)].json_on_response);
          }
    break;

  case 1797:

/* Line 1455 of yacc.c  */
#line 12208 "sql_yacc.yy"
    { (yyval.json_on_response)= (yyvsp[(1) - (3)].json_on_response); }
    break;

  case 1798:

/* Line 1455 of yacc.c  */
#line 12211 "sql_yacc.yy"
    { (yyval.json_on_response)= (yyvsp[(1) - (3)].json_on_response); }
    break;

  case 1799:

/* Line 1455 of yacc.c  */
#line 12215 "sql_yacc.yy"
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
    break;

  case 1800:

/* Line 1455 of yacc.c  */
#line 12219 "sql_yacc.yy"
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
    break;

  case 1801:

/* Line 1455 of yacc.c  */
#line 12223 "sql_yacc.yy"
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[(2) - (2)].item)};
          }
    break;

  case 1802:

/* Line 1455 of yacc.c  */
#line 12230 "sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1803:

/* Line 1455 of yacc.c  */
#line 12233 "sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1804:

/* Line 1455 of yacc.c  */
#line 12234 "sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1805:

/* Line 1455 of yacc.c  */
#line 12235 "sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1806:

/* Line 1455 of yacc.c  */
#line 12239 "sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1807:

/* Line 1455 of yacc.c  */
#line 12240 "sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1808:

/* Line 1455 of yacc.c  */
#line 12246 "sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1809:

/* Line 1455 of yacc.c  */
#line 12252 "sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1811:

/* Line 1455 of yacc.c  */
#line 12261 "sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1812:

/* Line 1455 of yacc.c  */
#line 12268 "sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1815:

/* Line 1455 of yacc.c  */
#line 12278 "sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1817:

/* Line 1455 of yacc.c  */
#line 12289 "sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1818:

/* Line 1455 of yacc.c  */
#line 12295 "sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1819:

/* Line 1455 of yacc.c  */
#line 12304 "sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1820:

/* Line 1455 of yacc.c  */
#line 12310 "sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1822:

/* Line 1455 of yacc.c  */
#line 12322 "sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(1) - (1)].lexer.lex_str).str),
                                               (yyvsp[(1) - (1)].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
    break;

  case 1823:

/* Line 1455 of yacc.c  */
#line 12331 "sql_yacc.yy"
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(3) - (3)].lexer.lex_str).str),
                                               (yyvsp[(3) - (3)].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[(1) - (3)].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1824:

/* Line 1455 of yacc.c  */
#line 12342 "sql_yacc.yy"
    {}
    break;

  case 1825:

/* Line 1455 of yacc.c  */
#line 12343 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1826:

/* Line 1455 of yacc.c  */
#line 12344 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1827:

/* Line 1455 of yacc.c  */
#line 12345 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1828:

/* Line 1455 of yacc.c  */
#line 12346 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1829:

/* Line 1455 of yacc.c  */
#line 12347 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1830:

/* Line 1455 of yacc.c  */
#line 12348 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1831:

/* Line 1455 of yacc.c  */
#line 12349 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1832:

/* Line 1455 of yacc.c  */
#line 12350 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1833:

/* Line 1455 of yacc.c  */
#line 12351 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1834:

/* Line 1455 of yacc.c  */
#line 12352 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1835:

/* Line 1455 of yacc.c  */
#line 12353 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1836:

/* Line 1455 of yacc.c  */
#line 12357 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1837:

/* Line 1455 of yacc.c  */
#line 12358 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1838:

/* Line 1455 of yacc.c  */
#line 12359 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1839:

/* Line 1455 of yacc.c  */
#line 12360 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1840:

/* Line 1455 of yacc.c  */
#line 12361 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1841:

/* Line 1455 of yacc.c  */
#line 12362 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1842:

/* Line 1455 of yacc.c  */
#line 12363 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1843:

/* Line 1455 of yacc.c  */
#line 12364 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1844:

/* Line 1455 of yacc.c  */
#line 12365 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1845:

/* Line 1455 of yacc.c  */
#line 12369 "sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1846:

/* Line 1455 of yacc.c  */
#line 12370 "sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1847:

/* Line 1455 of yacc.c  */
#line 12371 "sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1848:

/* Line 1455 of yacc.c  */
#line 12372 "sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1851:

/* Line 1455 of yacc.c  */
#line 12381 "sql_yacc.yy"
    { (yyval.lex_cstr) = NULL_CSTR; }
    break;

  case 1852:

/* Line 1455 of yacc.c  */
#line 12382 "sql_yacc.yy"
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[(2) - (2)].lexer.lex_str)); }
    break;

  case 1855:

/* Line 1455 of yacc.c  */
#line 12391 "sql_yacc.yy"
    { (yyval.item) = nullptr; }
    break;

  case 1857:

/* Line 1455 of yacc.c  */
#line 12396 "sql_yacc.yy"
    { (yyval.item) = NEW_PTN PTI_where((yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item)); }
    break;

  case 1858:

/* Line 1455 of yacc.c  */
#line 12400 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1859:

/* Line 1455 of yacc.c  */
#line 12402 "sql_yacc.yy"
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1860:

/* Line 1455 of yacc.c  */
#line 12409 "sql_yacc.yy"
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[(2) - (2)].with_list), false);
          }
    break;

  case 1861:

/* Line 1455 of yacc.c  */
#line 12413 "sql_yacc.yy"
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[(3) - (3)].with_list), true);
          }
    break;

  case 1862:

/* Line 1455 of yacc.c  */
#line 12420 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].with_list)->push_back((yyvsp[(3) - (3)].common_table_expr)))
              MYSQL_YYABORT;
          }
    break;

  case 1863:

/* Line 1455 of yacc.c  */
#line 12425 "sql_yacc.yy"
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[(1) - (1)].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
    break;

  case 1864:

/* Line 1455 of yacc.c  */
#line 12434 "sql_yacc.yy"
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[(4) - (4)]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[(4) - (4)]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[(4) - (4)]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[(1) - (4)].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[(4) - (4)].subquery), &(yyvsp[(2) - (4)].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
    break;

  case 1865:

/* Line 1455 of yacc.c  */
#line 12450 "sql_yacc.yy"
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
    break;

  case 1866:

/* Line 1455 of yacc.c  */
#line 12459 "sql_yacc.yy"
    {
            (yyval.simple_ident_list)= (yyvsp[(2) - (3)].simple_ident_list);
          }
    break;

  case 1867:

/* Line 1455 of yacc.c  */
#line 12466 "sql_yacc.yy"
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
    break;

  case 1868:

/* Line 1455 of yacc.c  */
#line 12472 "sql_yacc.yy"
    {
            (yyval.simple_ident_list)= (yyvsp[(1) - (3)].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
    break;

  case 1869:

/* Line 1455 of yacc.c  */
#line 12481 "sql_yacc.yy"
    {
            (yyval.windows)= NULL;
          }
    break;

  case 1870:

/* Line 1455 of yacc.c  */
#line 12485 "sql_yacc.yy"
    {
            (yyval.windows)= (yyvsp[(2) - (2)].windows);
          }
    break;

  case 1871:

/* Line 1455 of yacc.c  */
#line 12492 "sql_yacc.yy"
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[(1) - (1)].window)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1872:

/* Line 1455 of yacc.c  */
#line 12498 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].windows)->push_back((yyvsp[(3) - (3)].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[(1) - (3)].windows);
          }
    break;

  case 1873:

/* Line 1455 of yacc.c  */
#line 12507 "sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(3) - (3)].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[(1) - (3)].item_string));
          }
    break;

  case 1874:

/* Line 1455 of yacc.c  */
#line 12520 "sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1875:

/* Line 1455 of yacc.c  */
#line 12522 "sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1876:

/* Line 1455 of yacc.c  */
#line 12529 "sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1877:

/* Line 1455 of yacc.c  */
#line 12534 "sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1878:

/* Line 1455 of yacc.c  */
#line 12544 "sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1879:

/* Line 1455 of yacc.c  */
#line 12545 "sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1880:

/* Line 1455 of yacc.c  */
#line 12561 "sql_yacc.yy"
    {
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
            (yyval.order_list)->push_back((yyvsp[(3) - (3)].order_expr));
          }
    break;

  case 1881:

/* Line 1455 of yacc.c  */
#line 12566 "sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1882:

/* Line 1455 of yacc.c  */
#line 12576 "sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].order_direction));
          }
    break;

  case 1883:

/* Line 1455 of yacc.c  */
#line 12582 "sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1885:

/* Line 1455 of yacc.c  */
#line 12588 "sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1886:

/* Line 1455 of yacc.c  */
#line 12595 "sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1887:

/* Line 1455 of yacc.c  */
#line 12600 "sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1888:

/* Line 1455 of yacc.c  */
#line 12609 "sql_yacc.yy"
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
    break;

  case 1890:

/* Line 1455 of yacc.c  */
#line 12614 "sql_yacc.yy"
    { (yyval.order_direction)= ORDER_ASC; }
    break;

  case 1891:

/* Line 1455 of yacc.c  */
#line 12615 "sql_yacc.yy"
    { (yyval.order_direction)= ORDER_DESC; }
    break;

  case 1892:

/* Line 1455 of yacc.c  */
#line 12619 "sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1894:

/* Line 1455 of yacc.c  */
#line 12625 "sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1895:

/* Line 1455 of yacc.c  */
#line 12632 "sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1896:

/* Line 1455 of yacc.c  */
#line 12638 "sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1897:

/* Line 1455 of yacc.c  */
#line 12644 "sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1898:

/* Line 1455 of yacc.c  */
#line 12653 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)));
          }
    break;

  case 1899:

/* Line 1455 of yacc.c  */
#line 12657 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1900:

/* Line 1455 of yacc.c  */
#line 12661 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
          }
    break;

  case 1901:

/* Line 1455 of yacc.c  */
#line 12665 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
          }
    break;

  case 1902:

/* Line 1455 of yacc.c  */
#line 12669 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
          }
    break;

  case 1903:

/* Line 1455 of yacc.c  */
#line 12675 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1904:

/* Line 1455 of yacc.c  */
#line 12676 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1905:

/* Line 1455 of yacc.c  */
#line 12680 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1906:

/* Line 1455 of yacc.c  */
#line 12681 "sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lexer.lex_str).str, (char**) 0, 16); }
    break;

  case 1907:

/* Line 1455 of yacc.c  */
#line 12682 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1908:

/* Line 1455 of yacc.c  */
#line 12683 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1909:

/* Line 1455 of yacc.c  */
#line 12684 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1910:

/* Line 1455 of yacc.c  */
#line 12685 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1911:

/* Line 1455 of yacc.c  */
#line 12689 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1912:

/* Line 1455 of yacc.c  */
#line 12690 "sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lexer.lex_str).str, (char**) 0, 16); }
    break;

  case 1913:

/* Line 1455 of yacc.c  */
#line 12691 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1914:

/* Line 1455 of yacc.c  */
#line 12692 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1915:

/* Line 1455 of yacc.c  */
#line 12693 "sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1916:

/* Line 1455 of yacc.c  */
#line 12697 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1917:

/* Line 1455 of yacc.c  */
#line 12698 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1918:

/* Line 1455 of yacc.c  */
#line 12699 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1919:

/* Line 1455 of yacc.c  */
#line 12700 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1920:

/* Line 1455 of yacc.c  */
#line 12701 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1921:

/* Line 1455 of yacc.c  */
#line 12705 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1922:

/* Line 1455 of yacc.c  */
#line 12706 "sql_yacc.yy"
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[(1) - (1)].lexer.lex_str).str, (char**) 0, 16); }
    break;

  case 1923:

/* Line 1455 of yacc.c  */
#line 12707 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1924:

/* Line 1455 of yacc.c  */
#line 12708 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, &error); }
    break;

  case 1925:

/* Line 1455 of yacc.c  */
#line 12709 "sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1926:

/* Line 1455 of yacc.c  */
#line 12714 "sql_yacc.yy"
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
    break;

  case 1929:

/* Line 1455 of yacc.c  */
#line 12724 "sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1930:

/* Line 1455 of yacc.c  */
#line 12730 "sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1931:

/* Line 1455 of yacc.c  */
#line 12739 "sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 1932:

/* Line 1455 of yacc.c  */
#line 12743 "sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lexer.lex_str));
          }
    break;

  case 1933:

/* Line 1455 of yacc.c  */
#line 12750 "sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1934:

/* Line 1455 of yacc.c  */
#line 12759 "sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[(2) - (5)].lexer.lex_str), (yyvsp[(3) - (5)].lexer.charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1935:

/* Line 1455 of yacc.c  */
#line 12763 "sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 1936:

/* Line 1455 of yacc.c  */
#line 12766 "sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1937:

/* Line 1455 of yacc.c  */
#line 12775 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[(2) - (2)].item_list2))));
          }
    break;

  case 1938:

/* Line 1455 of yacc.c  */
#line 12788 "sql_yacc.yy"
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (6)].is_not_empty);
            lex->drop_if_exists= (yyvsp[(4) - (6)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(5) - (6)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1939:

/* Line 1455 of yacc.c  */
#line 12804 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[(3) - (6)].lexer.lex_str).str, (yyvsp[(5) - (6)].table),
                                           (yyvsp[(6) - (6)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[(6) - (6)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 1940:

/* Line 1455 of yacc.c  */
#line 12813 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lexer.lex_str);
          }
    break;

  case 1941:

/* Line 1455 of yacc.c  */
#line 12823 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[(4) - (6)].lexer.lex_str)), (yyvsp[(6) - (6)].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1942:

/* Line 1455 of yacc.c  */
#line 12846 "sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1943:

/* Line 1455 of yacc.c  */
#line 12881 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[(4) - (5)].lexer.lex_str)), (yyvsp[(5) - (5)].resource_group_flag_type));
          }
    break;

  case 1944:

/* Line 1455 of yacc.c  */
#line 12888 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1945:

/* Line 1455 of yacc.c  */
#line 12903 "sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (4)].num);
             lex->users_list= *(yyvsp[(4) - (4)].user_list);
          }
    break;

  case 1946:

/* Line 1455 of yacc.c  */
#line 12913 "sql_yacc.yy"
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (5)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(4) - (5)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1947:

/* Line 1455 of yacc.c  */
#line 12928 "sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1948:

/* Line 1455 of yacc.c  */
#line 12937 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
    break;

  case 1949:

/* Line 1455 of yacc.c  */
#line 12948 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(4) - (4)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(4) - (4)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[(3) - (4)].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1950:

/* Line 1455 of yacc.c  */
#line 12968 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(5) - (5)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(5) - (5)].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[(4) - (5)].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1951:

/* Line 1455 of yacc.c  */
#line 12990 "sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(5) - (5)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(5) - (5)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[(4) - (5)].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1952:

/* Line 1455 of yacc.c  */
#line 13013 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[(4) - (4)].lexer.lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1953:

/* Line 1455 of yacc.c  */
#line 13021 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[(6) - (6)].ulonglong_number), (yyvsp[(5) - (6)].num));
          }
    break;

  case 1954:

/* Line 1455 of yacc.c  */
#line 13028 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].user_list));
          }
    break;

  case 1955:

/* Line 1455 of yacc.c  */
#line 13035 "sql_yacc.yy"
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[(1) - (1)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1956:

/* Line 1455 of yacc.c  */
#line 13041 "sql_yacc.yy"
    {
            (yyval.table_list)= (yyvsp[(1) - (3)].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[(3) - (3)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1957:

/* Line 1455 of yacc.c  */
#line 13050 "sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1958:

/* Line 1455 of yacc.c  */
#line 13056 "sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1959:

/* Line 1455 of yacc.c  */
#line 13064 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1960:

/* Line 1455 of yacc.c  */
#line 13065 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1961:

/* Line 1455 of yacc.c  */
#line 13069 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1962:

/* Line 1455 of yacc.c  */
#line 13070 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1963:

/* Line 1455 of yacc.c  */
#line 13074 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1964:

/* Line 1455 of yacc.c  */
#line 13075 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1965:

/* Line 1455 of yacc.c  */
#line 13079 "sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 1967:

/* Line 1455 of yacc.c  */
#line 13085 "sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 1968:

/* Line 1455 of yacc.c  */
#line 13091 "sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 1971:

/* Line 1455 of yacc.c  */
#line 13116 "sql_yacc.yy"
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].lexer.optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(7) - (9)].column_row_value_list_pair).column_list, (yyvsp[(7) - (9)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (9)].insert_update_values_reference).table_alias, (yyvsp[(8) - (9)].insert_update_values_reference).column_list,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
    break;

  case 1972:

/* Line 1455 of yacc.c  */
#line 13137 "sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (10)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[(1) - (10)].lexer.optimizer_hints), (yyvsp[(2) - (10)].lock_type), (yyvsp[(3) - (10)].is_not_empty), (yyvsp[(5) - (10)].table), (yyvsp[(6) - (10)].string_list),
                                  (yyvsp[(8) - (10)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (10)].insert_update_values_reference).table_alias, (yyvsp[(9) - (10)].insert_update_values_reference).column_list,
                                  (yyvsp[(10) - (10)].column_value_list_pair).column_list, (yyvsp[(10) - (10)].column_value_list_pair).value_list);
          }
    break;

  case 1973:

/* Line 1455 of yacc.c  */
#line 13155 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].lexer.optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1974:

/* Line 1455 of yacc.c  */
#line 13171 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].lexer.optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
    break;

  case 1975:

/* Line 1455 of yacc.c  */
#line 13185 "sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].lexer.optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
    break;

  case 1976:

/* Line 1455 of yacc.c  */
#line 13201 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].lexer.optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
    break;

  case 1977:

/* Line 1455 of yacc.c  */
#line 13211 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1978:

/* Line 1455 of yacc.c  */
#line 13212 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1979:

/* Line 1455 of yacc.c  */
#line 13214 "sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1980:

/* Line 1455 of yacc.c  */
#line 13222 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1981:

/* Line 1455 of yacc.c  */
#line 13226 "sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1982:

/* Line 1455 of yacc.c  */
#line 13228 "sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1985:

/* Line 1455 of yacc.c  */
#line 13245 "sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1986:

/* Line 1455 of yacc.c  */
#line 13250 "sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1987:

/* Line 1455 of yacc.c  */
#line 13255 "sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1988:

/* Line 1455 of yacc.c  */
#line 13263 "sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(1) - (1)].query_expression_body);
          }
    break;

  case 1989:

/* Line 1455 of yacc.c  */
#line 13268 "sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(3) - (3)].query_expression_body);
          }
    break;

  case 1990:

/* Line 1455 of yacc.c  */
#line 13273 "sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(4) - (4)].query_expression_body);
          }
    break;

  case 1991:

/* Line 1455 of yacc.c  */
#line 13281 "sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1992:

/* Line 1455 of yacc.c  */
#line 13287 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1993:

/* Line 1455 of yacc.c  */
#line 13296 "sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1994:

/* Line 1455 of yacc.c  */
#line 13302 "sql_yacc.yy"
    { (yyval.query_expression_body) = (yyvsp[(1) - (1)].query_expression); }
    break;

  case 1995:

/* Line 1455 of yacc.c  */
#line 13304 "sql_yacc.yy"
    {
            (yyval.query_expression_body) = NEW_PTN PT_locking((yyvsp[(1) - (2)].query_expression), (yyvsp[(2) - (2)].locking_clause_list));
          }
    break;

  case 1998:

/* Line 1455 of yacc.c  */
#line 13316 "sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1999:

/* Line 1455 of yacc.c  */
#line 13321 "sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 2000:

/* Line 1455 of yacc.c  */
#line 13331 "sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 2001:

/* Line 1455 of yacc.c  */
#line 13336 "sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 2006:

/* Line 1455 of yacc.c  */
#line 13354 "sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 2007:

/* Line 1455 of yacc.c  */
#line 13358 "sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(3) - (4)].item_list2); }
    break;

  case 2008:

/* Line 1455 of yacc.c  */
#line 13363 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2010:

/* Line 1455 of yacc.c  */
#line 13373 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 2011:

/* Line 1455 of yacc.c  */
#line 13379 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2013:

/* Line 1455 of yacc.c  */
#line 13389 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 2014:

/* Line 1455 of yacc.c  */
#line 13396 "sql_yacc.yy"
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
    break;

  case 2015:

/* Line 1455 of yacc.c  */
#line 13401 "sql_yacc.yy"
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[(2) - (3)].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[(3) - (3)].simple_ident_list)), sizeof((yyvsp[(3) - (3)].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
    break;

  case 2016:

/* Line 1455 of yacc.c  */
#line 13414 "sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 2017:

/* Line 1455 of yacc.c  */
#line 13419 "sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 2018:

/* Line 1455 of yacc.c  */
#line 13437 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[(1) - (10)].with_clause), (yyvsp[(2) - (10)].lexer.optimizer_hints), (yyvsp[(3) - (10)].lock_type), (yyvsp[(4) - (10)].is_not_empty), (yyvsp[(5) - (10)].table_reference_list), (yyvsp[(7) - (10)].column_value_list_pair).column_list, (yyvsp[(7) - (10)].column_value_list_pair).value_list,
                                  (yyvsp[(8) - (10)].item), (yyvsp[(9) - (10)].order), (yyvsp[(10) - (10)].item));
          }
    break;

  case 2019:

/* Line 1455 of yacc.c  */
#line 13444 "sql_yacc.yy"
    { (yyval.with_clause)= NULL; }
    break;

  case 2020:

/* Line 1455 of yacc.c  */
#line 13445 "sql_yacc.yy"
    { (yyval.with_clause)= (yyvsp[(1) - (1)].with_clause); }
    break;

  case 2021:

/* Line 1455 of yacc.c  */
#line 13450 "sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2022:

/* Line 1455 of yacc.c  */
#line 13457 "sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2023:

/* Line 1455 of yacc.c  */
#line 13469 "sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 2024:

/* Line 1455 of yacc.c  */
#line 13476 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 2025:

/* Line 1455 of yacc.c  */
#line 13477 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 2026:

/* Line 1455 of yacc.c  */
#line 13493 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[(1) - (10)].with_clause), (yyvsp[(2) - (10)].lexer.optimizer_hints), (yyvsp[(3) - (10)].num), (yyvsp[(5) - (10)].table), (yyvsp[(6) - (10)].lex_cstr), (yyvsp[(7) - (10)].string_list), (yyvsp[(8) - (10)].item), (yyvsp[(9) - (10)].order), (yyvsp[(10) - (10)].item));
          }
    break;

  case 2027:

/* Line 1455 of yacc.c  */
#line 13503 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[(1) - (7)].with_clause), (yyvsp[(2) - (7)].lexer.optimizer_hints), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].table_reference_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 2028:

/* Line 1455 of yacc.c  */
#line 13514 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[(1) - (8)].with_clause), (yyvsp[(2) - (8)].lexer.optimizer_hints), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].table_ident_list), (yyvsp[(7) - (8)].table_reference_list), (yyvsp[(8) - (8)].item));
          }
    break;

  case 2031:

/* Line 1455 of yacc.c  */
#line 13525 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2032:

/* Line 1455 of yacc.c  */
#line 13526 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 2033:

/* Line 1455 of yacc.c  */
#line 13530 "sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 2034:

/* Line 1455 of yacc.c  */
#line 13531 "sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 2035:

/* Line 1455 of yacc.c  */
#line 13532 "sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 2036:

/* Line 1455 of yacc.c  */
#line 13537 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[(3) - (3)].table));
          }
    break;

  case 2039:

/* Line 1455 of yacc.c  */
#line 13548 "sql_yacc.yy"
    { (yyval.ulong_num) = 0; }
    break;

  case 2042:

/* Line 1455 of yacc.c  */
#line 13554 "sql_yacc.yy"
    { (yyval.ulong_num) = (yyvsp[(1) - (3)].ulong_num) | (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 2043:

/* Line 1455 of yacc.c  */
#line 13558 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_CPU; }
    break;

  case 2044:

/* Line 1455 of yacc.c  */
#line 13559 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_MEMORY; }
    break;

  case 2045:

/* Line 1455 of yacc.c  */
#line 13560 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
    break;

  case 2046:

/* Line 1455 of yacc.c  */
#line 13561 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
    break;

  case 2047:

/* Line 1455 of yacc.c  */
#line 13562 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
    break;

  case 2048:

/* Line 1455 of yacc.c  */
#line 13563 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_IPC; }
    break;

  case 2049:

/* Line 1455 of yacc.c  */
#line 13564 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_SWAPS; }
    break;

  case 2050:

/* Line 1455 of yacc.c  */
#line 13565 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_SOURCE; }
    break;

  case 2051:

/* Line 1455 of yacc.c  */
#line 13566 "sql_yacc.yy"
    { (yyval.ulong_num) = PROFILE_ALL; }
    break;

  case 2052:

/* Line 1455 of yacc.c  */
#line 13570 "sql_yacc.yy"
    { (yyval.query_id) = 0; }
    break;

  case 2053:

/* Line 1455 of yacc.c  */
#line 13572 "sql_yacc.yy"
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
    break;

  case 2054:

/* Line 1455 of yacc.c  */
#line 13584 "sql_yacc.yy"
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[(3) - (3)].wild_or_where).wild, (yyvsp[(3) - (3)].wild_or_where).where);
           }
    break;

  case 2055:

/* Line 1455 of yacc.c  */
#line 13590 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[(2) - (5)].show_cmd_type), (yyvsp[(4) - (5)].simple_string), (yyvsp[(5) - (5)].wild_or_where).wild, (yyvsp[(5) - (5)].wild_or_where).where);
          }
    break;

  case 2056:

/* Line 1455 of yacc.c  */
#line 13597 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[(2) - (5)].is_not_empty), (yyvsp[(4) - (5)].simple_string), (yyvsp[(5) - (5)].wild_or_where).wild, (yyvsp[(5) - (5)].wild_or_where).where);
          }
    break;

  case 2057:

/* Line 1455 of yacc.c  */
#line 13604 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[(3) - (4)].simple_string), (yyvsp[(4) - (4)].wild_or_where).wild, (yyvsp[(4) - (4)].wild_or_where).where);
          }
    break;

  case 2058:

/* Line 1455 of yacc.c  */
#line 13611 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[(4) - (5)].simple_string), (yyvsp[(5) - (5)].wild_or_where).wild, (yyvsp[(5) - (5)].wild_or_where).where);
          }
    break;

  case 2059:

/* Line 1455 of yacc.c  */
#line 13618 "sql_yacc.yy"
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[(4) - (5)].simple_string), (yyvsp[(5) - (5)].wild_or_where).wild, (yyvsp[(5) - (5)].wild_or_where).where);
          }
    break;

  case 2060:

/* Line 1455 of yacc.c  */
#line 13625 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
    break;

  case 2061:

/* Line 1455 of yacc.c  */
#line 13632 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[(3) - (4)].lexer.lex_str));
          }
    break;

  case 2062:

/* Line 1455 of yacc.c  */
#line 13639 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[(3) - (4)].lexer.lex_str));
          }
    break;

  case 2063:

/* Line 1455 of yacc.c  */
#line 13646 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[(3) - (4)].lexer.lex_str));
          }
    break;

  case 2064:

/* Line 1455 of yacc.c  */
#line 13659 "sql_yacc.yy"
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[(6) - (7)].simple_string))
              (yyvsp[(5) - (7)].table)->change_db((yyvsp[(6) - (7)].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[(2) - (7)].show_cmd_type), (yyvsp[(5) - (7)].table), (yyvsp[(7) - (7)].wild_or_where).wild, (yyvsp[(7) - (7)].wild_or_where).where);
          }
    break;

  case 2065:

/* Line 1455 of yacc.c  */
#line 13670 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
    break;

  case 2066:

/* Line 1455 of yacc.c  */
#line 13677 "sql_yacc.yy"
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
    break;

  case 2067:

/* Line 1455 of yacc.c  */
#line 13684 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
    break;

  case 2068:

/* Line 1455 of yacc.c  */
#line 13691 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[(4) - (6)].lexer.lex_str), (yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 2069:

/* Line 1455 of yacc.c  */
#line 13699 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[(4) - (7)].lexer.lex_str), (yyvsp[(6) - (7)].limit_clause), (yyvsp[(7) - (7)].lex_cstr));
          }
    break;

  case 2070:

/* Line 1455 of yacc.c  */
#line 13712 "sql_yacc.yy"
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[(6) - (7)].simple_string))
              (yyvsp[(5) - (7)].table)->change_db((yyvsp[(6) - (7)].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[(2) - (7)].is_not_empty), (yyvsp[(5) - (7)].table), (yyvsp[(7) - (7)].item));
          }
    break;

  case 2071:

/* Line 1455 of yacc.c  */
#line 13723 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
    break;

  case 2072:

/* Line 1455 of yacc.c  */
#line 13730 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
    break;

  case 2073:

/* Line 1455 of yacc.c  */
#line 13737 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
    break;

  case 2074:

/* Line 1455 of yacc.c  */
#line 13744 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[(3) - (3)].limit_clause));
          }
    break;

  case 2075:

/* Line 1455 of yacc.c  */
#line 13751 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[(3) - (3)].limit_clause));
          }
    break;

  case 2076:

/* Line 1455 of yacc.c  */
#line 13758 "sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
    break;

  case 2077:

/* Line 1455 of yacc.c  */
#line 13769 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[(3) - (5)].ulong_num), (yyvsp[(4) - (5)].query_id), (yyvsp[(5) - (5)].limit_clause));
          }
    break;

  case 2078:

/* Line 1455 of yacc.c  */
#line 13776 "sql_yacc.yy"
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(4) - (4)].wild_or_where).wild, (yyvsp[(4) - (4)].wild_or_where).where);
          }
    break;

  case 2079:

/* Line 1455 of yacc.c  */
#line 13783 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[(2) - (3)].is_not_empty));
          }
    break;

  case 2080:

/* Line 1455 of yacc.c  */
#line 13790 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(4) - (4)].wild_or_where).wild, (yyvsp[(4) - (4)].wild_or_where).where);
          }
    break;

  case 2081:

/* Line 1455 of yacc.c  */
#line 13797 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[(3) - (3)].wild_or_where).wild, (yyvsp[(3) - (3)].wild_or_where).where);
          }
    break;

  case 2082:

/* Line 1455 of yacc.c  */
#line 13804 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[(3) - (3)].wild_or_where).wild, (yyvsp[(3) - (3)].wild_or_where).where);
          }
    break;

  case 2083:

/* Line 1455 of yacc.c  */
#line 13811 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
    break;

  case 2084:

/* Line 1455 of yacc.c  */
#line 13818 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
    break;

  case 2085:

/* Line 1455 of yacc.c  */
#line 13822 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[(4) - (4)].lex_user), nullptr);
          }
    break;

  case 2086:

/* Line 1455 of yacc.c  */
#line 13826 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[(4) - (6)].lex_user), (yyvsp[(6) - (6)].user_list));
          }
    break;

  case 2087:

/* Line 1455 of yacc.c  */
#line 13833 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[(4) - (5)].is_not_empty), (yyvsp[(5) - (5)].lexer.lex_str));
          }
    break;

  case 2088:

/* Line 1455 of yacc.c  */
#line 13840 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[(4) - (4)].table));
          }
    break;

  case 2089:

/* Line 1455 of yacc.c  */
#line 13847 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[(4) - (4)].table));
          }
    break;

  case 2090:

/* Line 1455 of yacc.c  */
#line 13854 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
    break;

  case 2091:

/* Line 1455 of yacc.c  */
#line 13861 "sql_yacc.yy"
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[(4) - (4)].lex_cstr));
          }
    break;

  case 2092:

/* Line 1455 of yacc.c  */
#line 13870 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[(4) - (4)].spname));
          }
    break;

  case 2093:

/* Line 1455 of yacc.c  */
#line 13877 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[(4) - (4)].spname));
          }
    break;

  case 2094:

/* Line 1455 of yacc.c  */
#line 13884 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[(4) - (4)].spname));
          }
    break;

  case 2095:

/* Line 1455 of yacc.c  */
#line 13891 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[(4) - (4)].wild_or_where).wild, (yyvsp[(4) - (4)].wild_or_where).where);
          }
    break;

  case 2096:

/* Line 1455 of yacc.c  */
#line 13898 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[(4) - (4)].wild_or_where).wild, (yyvsp[(4) - (4)].wild_or_where).where);
          }
    break;

  case 2097:

/* Line 1455 of yacc.c  */
#line 13905 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[(4) - (4)].spname));
          }
    break;

  case 2098:

/* Line 1455 of yacc.c  */
#line 13912 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[(4) - (4)].spname));
          }
    break;

  case 2099:

/* Line 1455 of yacc.c  */
#line 13919 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[(4) - (4)].spname));
          }
    break;

  case 2100:

/* Line 1455 of yacc.c  */
#line 13926 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[(4) - (4)].lex_user));
          }
    break;

  case 2102:

/* Line 1455 of yacc.c  */
#line 13933 "sql_yacc.yy"
    { (yyval.lexer.lex_str) = {}; }
    break;

  case 2107:

/* Line 1455 of yacc.c  */
#line 13947 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 2108:

/* Line 1455 of yacc.c  */
#line 13948 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lexer.lex_str).str; }
    break;

  case 2109:

/* Line 1455 of yacc.c  */
#line 13952 "sql_yacc.yy"
    { (yyval.is_not_empty)= 0; }
    break;

  case 2110:

/* Line 1455 of yacc.c  */
#line 13953 "sql_yacc.yy"
    { (yyval.is_not_empty)= 1; }
    break;

  case 2111:

/* Line 1455 of yacc.c  */
#line 13957 "sql_yacc.yy"
    { (yyval.is_not_empty)= 0; }
    break;

  case 2112:

/* Line 1455 of yacc.c  */
#line 13958 "sql_yacc.yy"
    { (yyval.is_not_empty)= 1; }
    break;

  case 2113:

/* Line 1455 of yacc.c  */
#line 13962 "sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
    break;

  case 2114:

/* Line 1455 of yacc.c  */
#line 13963 "sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
    break;

  case 2115:

/* Line 1455 of yacc.c  */
#line 13964 "sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
    break;

  case 2116:

/* Line 1455 of yacc.c  */
#line 13965 "sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
    break;

  case 2119:

/* Line 1455 of yacc.c  */
#line 13974 "sql_yacc.yy"
    { (yyval.lexer.lex_str) = {}; }
    break;

  case 2120:

/* Line 1455 of yacc.c  */
#line 13975 "sql_yacc.yy"
    { (yyval.lexer.lex_str) = (yyvsp[(2) - (2)].lexer.lex_str); }
    break;

  case 2121:

/* Line 1455 of yacc.c  */
#line 13979 "sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 2122:

/* Line 1455 of yacc.c  */
#line 13980 "sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 2123:

/* Line 1455 of yacc.c  */
#line 13984 "sql_yacc.yy"
    { (yyval.wild_or_where) = {}; }
    break;

  case 2124:

/* Line 1455 of yacc.c  */
#line 13985 "sql_yacc.yy"
    { (yyval.wild_or_where) = { (yyvsp[(2) - (2)].lexer.lex_str), {} }; }
    break;

  case 2125:

/* Line 1455 of yacc.c  */
#line 13986 "sql_yacc.yy"
    { (yyval.wild_or_where) = { {}, (yyvsp[(1) - (1)].item) }; }
    break;

  case 2126:

/* Line 1455 of yacc.c  */
#line 13992 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[(2) - (3)].table), (yyvsp[(3) - (3)].lexer.lex_str));
          }
    break;

  case 2127:

/* Line 1455 of yacc.c  */
#line 13999 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[(2) - (3)].explain_options_type).explain_format_type, (yyvsp[(2) - (3)].explain_options_type).is_analyze,
                                   (yyvsp[(2) - (3)].explain_options_type).is_explicit, (yyvsp[(3) - (3)].top_level_node));
          }
    break;

  case 2133:

/* Line 1455 of yacc.c  */
#line 14012 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[(3) - (3)].ulong_num)));
          }
    break;

  case 2136:

/* Line 1455 of yacc.c  */
#line 14024 "sql_yacc.yy"
    {
            (yyval.explain_options_type).is_explicit = false;
            (yyval.explain_options_type).explain_format_type = YYTHD->variables.explain_format;
          }
    break;

  case 2137:

/* Line 1455 of yacc.c  */
#line 14029 "sql_yacc.yy"
    {
            (yyval.explain_options_type).is_explicit = true;
            if (is_identifier((yyvsp[(3) - (3)].lexer.lex_str), "JSON"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::JSON;
            else if (is_identifier((yyvsp[(3) - (3)].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[(3) - (3)].lexer.lex_str), "TREE"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::TREE;
            else {
              // This includes even TRADITIONAL_STRICT. Since this value is
              // only meant for mtr infrastructure temporarily, we don't want
              // the user to explicitly use this value in EXPLAIN statements.
              // This results in having one less place to deprecate from.
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2138:

/* Line 1455 of yacc.c  */
#line 14049 "sql_yacc.yy"
    {
            (yyval.explain_options_type) = (yyvsp[(2) - (2)].explain_options_type);
            (yyval.explain_options_type).is_analyze = true;
          }
    break;

  case 2139:

/* Line 1455 of yacc.c  */
#line 14054 "sql_yacc.yy"
    {
            (yyval.explain_options_type) = (yyvsp[(1) - (1)].explain_options_type);
            (yyval.explain_options_type).is_analyze = false;
          }
    break;

  case 2140:

/* Line 1455 of yacc.c  */
#line 14061 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
    break;

  case 2141:

/* Line 1455 of yacc.c  */
#line 14063 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].string)->lex_string();
          }
    break;

  case 2143:

/* Line 1455 of yacc.c  */
#line 14075 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 2144:

/* Line 1455 of yacc.c  */
#line 14082 "sql_yacc.yy"
    {}
    break;

  case 2145:

/* Line 1455 of yacc.c  */
#line 14087 "sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[(2) - (2)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 2146:

/* Line 1455 of yacc.c  */
#line 14099 "sql_yacc.yy"
    {}
    break;

  case 2148:

/* Line 1455 of yacc.c  */
#line 14104 "sql_yacc.yy"
    {}
    break;

  case 2149:

/* Line 1455 of yacc.c  */
#line 14106 "sql_yacc.yy"
    {
            Table_ref *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 2150:

/* Line 1455 of yacc.c  */
#line 14118 "sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2151:

/* Line 1455 of yacc.c  */
#line 14126 "sql_yacc.yy"
    {
            Table_ref *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 2153:

/* Line 1455 of yacc.c  */
#line 14142 "sql_yacc.yy"
    {}
    break;

  case 2154:

/* Line 1455 of yacc.c  */
#line 14147 "sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 2155:

/* Line 1455 of yacc.c  */
#line 14149 "sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 2156:

/* Line 1455 of yacc.c  */
#line 14151 "sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 2157:

/* Line 1455 of yacc.c  */
#line 14153 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 2158:

/* Line 1455 of yacc.c  */
#line 14155 "sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 2159:

/* Line 1455 of yacc.c  */
#line 14157 "sql_yacc.yy"
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[(3) - (3)].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 2160:

/* Line 1455 of yacc.c  */
#line 14163 "sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 2161:

/* Line 1455 of yacc.c  */
#line 14165 "sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 2162:

/* Line 1455 of yacc.c  */
#line 14167 "sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 2163:

/* Line 1455 of yacc.c  */
#line 14169 "sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 2164:

/* Line 1455 of yacc.c  */
#line 14171 "sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 2165:

/* Line 1455 of yacc.c  */
#line 14173 "sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 2166:

/* Line 1455 of yacc.c  */
#line 14177 "sql_yacc.yy"
    { (yyval.table_list)= NULL; }
    break;

  case 2168:

/* Line 1455 of yacc.c  */
#line 14183 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 2169:

/* Line 1455 of yacc.c  */
#line 14188 "sql_yacc.yy"
    {}
    break;

  case 2170:

/* Line 1455 of yacc.c  */
#line 14190 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
    break;

  case 2173:

/* Line 1455 of yacc.c  */
#line 14205 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
    break;

  case 2174:

/* Line 1455 of yacc.c  */
#line 14211 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[(1) - (2)].num);
            lex->name= (yyvsp[(2) - (2)].lexer.lex_str);
          }
    break;

  case 2176:

/* Line 1455 of yacc.c  */
#line 14221 "sql_yacc.yy"
    {
            const LEX_STRING prefix = (yyvsp[(1) - (3)].lexer.lex_str);
            const LEX_STRING suffix = (yyvsp[(3) - (3)].lexer.lex_str);
            (yyval.lexer.lex_str).length = prefix.length + 1 + suffix.length + 1;
            (yyval.lexer.lex_str).str = static_cast<char *>(YYTHD->alloc((yyval.lexer.lex_str).length));
            if ((yyval.lexer.lex_str).str == nullptr) YYABORT;  // OOM
            strxnmov((yyval.lexer.lex_str).str, (yyval.lexer.lex_str).length, prefix.str, ".", suffix.str, nullptr);
          }
    break;

  case 2177:

/* Line 1455 of yacc.c  */
#line 14230 "sql_yacc.yy"
    {
            const LEX_CSTRING prefix{STRING_WITH_LEN("default")};
            const LEX_STRING suffix = (yyvsp[(3) - (3)].lexer.lex_str);
            (yyval.lexer.lex_str).length = prefix.length + 1 + suffix.length + 1;
            (yyval.lexer.lex_str).str = static_cast<char *>(YYTHD->alloc((yyval.lexer.lex_str).length));
            if ((yyval.lexer.lex_str).str == nullptr) YYABORT;  // OOM
            strxnmov((yyval.lexer.lex_str).str, (yyval.lexer.lex_str).length, prefix.str, ".", suffix.str, nullptr);
          }
    break;

  case 2178:

/* Line 1455 of yacc.c  */
#line 14242 "sql_yacc.yy"
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
    break;

  case 2179:

/* Line 1455 of yacc.c  */
#line 14248 "sql_yacc.yy"
    {
            if (Lex->set_channel_name((yyvsp[(4) - (4)].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 2180:

/* Line 1455 of yacc.c  */
#line 14253 "sql_yacc.yy"
    { Lex->type|= REFRESH_REPLICA; }
    break;

  case 2181:

/* Line 1455 of yacc.c  */
#line 14255 "sql_yacc.yy"
    {
          if (Lex->set_channel_name((yyvsp[(4) - (4)].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
    break;

  case 2182:

/* Line 1455 of yacc.c  */
#line 14260 "sql_yacc.yy"
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
    break;

  case 2184:

/* Line 1455 of yacc.c  */
#line 14279 "sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 2185:

/* Line 1455 of yacc.c  */
#line 14280 "sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 2186:

/* Line 1455 of yacc.c  */
#line 14284 "sql_yacc.yy"
    {}
    break;

  case 2187:

/* Line 1455 of yacc.c  */
#line 14286 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulonglong_number) == 0 || (yyvsp[(2) - (2)].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[(2) - (2)].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[(2) - (2)].ulonglong_number);
          }
    break;

  case 2188:

/* Line 1455 of yacc.c  */
#line 14300 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 2189:

/* Line 1455 of yacc.c  */
#line 14306 "sql_yacc.yy"
    {}
    break;

  case 2191:

/* Line 1455 of yacc.c  */
#line 14315 "sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lexer.lex_str).str;
          }
    break;

  case 2192:

/* Line 1455 of yacc.c  */
#line 14319 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 2193:

/* Line 1455 of yacc.c  */
#line 14333 "sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 2194:

/* Line 1455 of yacc.c  */
#line 14344 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 2195:

/* Line 1455 of yacc.c  */
#line 14345 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 2196:

/* Line 1455 of yacc.c  */
#line 14346 "sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 2197:

/* Line 1455 of yacc.c  */
#line 14353 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[(2) - (2)].lexer.lex_str).str;
          }
    break;

  case 2198:

/* Line 1455 of yacc.c  */
#line 14385 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[(2) - (22)].filetype),  // data_or_xml
                                      (yyvsp[(3) - (22)].lock_type),  // load_data_lock
                                      (yyvsp[(5) - (22)].is_not_empty),  // opt_local
                                      (yyvsp[(6) - (22)].source_type),  // source type
                                      (yyvsp[(7) - (22)].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[(8) - (22)].ulong_num),  // opt_source_count
                                      (yyvsp[(9) - (22)].is_not_empty),  // opt_source_order
                                      (yyvsp[(10) - (22)].on_duplicate), // opt_duplicate
                                      (yyvsp[(13) - (22)].table), // table_ident
                                      (yyvsp[(14) - (22)].string_list), // opt_use_partition
                                      (yyvsp[(15) - (22)].lexer.charset), // opt_load_data_charset
                                      (yyvsp[(16) - (22)].string), // opt_xml_rows_identified_by
                                      (yyvsp[(17) - (22)].field_separators), // opt_field_term
                                      (yyvsp[(18) - (22)].line_separators), // opt_line_term
                                      (yyvsp[(19) - (22)].ulong_num), // opt_ignore_lines
                                      (yyvsp[(20) - (22)].item_list2), // opt_field_or_var_spec
                                      (yyvsp[(21) - (22)].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[(21) - (22)].load_set_list).set_expr_list,
                                      (yyvsp[(21) - (22)].load_set_list).set_expr_str_list,
                                      (yyvsp[(22) - (22)].is_not_empty)); // opt_load_algorithm
          }
    break;

  case 2199:

/* Line 1455 of yacc.c  */
#line 14410 "sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 2200:

/* Line 1455 of yacc.c  */
#line 14411 "sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 2201:

/* Line 1455 of yacc.c  */
#line 14415 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2202:

/* Line 1455 of yacc.c  */
#line 14416 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2203:

/* Line 1455 of yacc.c  */
#line 14420 "sql_yacc.yy"
    {}
    break;

  case 2204:

/* Line 1455 of yacc.c  */
#line 14421 "sql_yacc.yy"
    {}
    break;

  case 2205:

/* Line 1455 of yacc.c  */
#line 14425 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 2206:

/* Line 1455 of yacc.c  */
#line 14426 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 2207:

/* Line 1455 of yacc.c  */
#line 14427 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 2208:

/* Line 1455 of yacc.c  */
#line 14431 "sql_yacc.yy"
    { (yyval.source_type) = LOAD_SOURCE_FILE; }
    break;

  case 2209:

/* Line 1455 of yacc.c  */
#line 14432 "sql_yacc.yy"
    { (yyval.source_type) = LOAD_SOURCE_URL; }
    break;

  case 2210:

/* Line 1455 of yacc.c  */
#line 14437 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 2211:

/* Line 1455 of yacc.c  */
#line 14438 "sql_yacc.yy"
    { (yyval.ulong_num)= atol((yyvsp[(2) - (2)].lexer.lex_str).str); }
    break;

  case 2212:

/* Line 1455 of yacc.c  */
#line 14440 "sql_yacc.yy"
    {
            // COUNT can be key word or identifier based on SQL mode
            if (my_strcasecmp(system_charset_info, (yyvsp[(1) - (2)].lexer.lex_str).str, "count") != 0) {
              YYTHD->syntax_error_at((yylsp[(1) - (2)]), "COUNT expected");
              YYABORT;
            }
            (yyval.ulong_num)= atol((yyvsp[(2) - (2)].lexer.lex_str).str);
          }
    break;

  case 2213:

/* Line 1455 of yacc.c  */
#line 14451 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2214:

/* Line 1455 of yacc.c  */
#line 14452 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2215:

/* Line 1455 of yacc.c  */
#line 14456 "sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
    break;

  case 2217:

/* Line 1455 of yacc.c  */
#line 14461 "sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
    break;

  case 2218:

/* Line 1455 of yacc.c  */
#line 14462 "sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
    break;

  case 2219:

/* Line 1455 of yacc.c  */
#line 14466 "sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 2220:

/* Line 1455 of yacc.c  */
#line 14467 "sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 2221:

/* Line 1455 of yacc.c  */
#line 14472 "sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 2223:

/* Line 1455 of yacc.c  */
#line 14481 "sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 2224:

/* Line 1455 of yacc.c  */
#line 14486 "sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 2225:

/* Line 1455 of yacc.c  */
#line 14492 "sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 2226:

/* Line 1455 of yacc.c  */
#line 14497 "sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 2227:

/* Line 1455 of yacc.c  */
#line 14504 "sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 2228:

/* Line 1455 of yacc.c  */
#line 14505 "sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 2229:

/* Line 1455 of yacc.c  */
#line 14510 "sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 2231:

/* Line 1455 of yacc.c  */
#line 14519 "sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 2232:

/* Line 1455 of yacc.c  */
#line 14524 "sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 2233:

/* Line 1455 of yacc.c  */
#line 14531 "sql_yacc.yy"
    { (yyval.string)= nullptr; }
    break;

  case 2234:

/* Line 1455 of yacc.c  */
#line 14532 "sql_yacc.yy"
    { (yyval.string)= (yyvsp[(4) - (4)].string); }
    break;

  case 2235:

/* Line 1455 of yacc.c  */
#line 14536 "sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 2236:

/* Line 1455 of yacc.c  */
#line 14537 "sql_yacc.yy"
    { (yyval.ulong_num)= atol((yyvsp[(2) - (3)].lexer.lex_str).str); }
    break;

  case 2239:

/* Line 1455 of yacc.c  */
#line 14546 "sql_yacc.yy"
    { (yyval.item_list2)= nullptr; }
    break;

  case 2240:

/* Line 1455 of yacc.c  */
#line 14547 "sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 2241:

/* Line 1455 of yacc.c  */
#line 14548 "sql_yacc.yy"
    { (yyval.item_list2)= nullptr; }
    break;

  case 2242:

/* Line 1455 of yacc.c  */
#line 14553 "sql_yacc.yy"
    {
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2243:

/* Line 1455 of yacc.c  */
#line 14559 "sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2245:

/* Line 1455 of yacc.c  */
#line 14569 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 2246:

/* Line 1455 of yacc.c  */
#line 14575 "sql_yacc.yy"
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
    break;

  case 2247:

/* Line 1455 of yacc.c  */
#line 14576 "sql_yacc.yy"
    { (yyval.load_set_list)= (yyvsp[(2) - (2)].load_set_list); }
    break;

  case 2248:

/* Line 1455 of yacc.c  */
#line 14581 "sql_yacc.yy"
    {
            (yyval.load_set_list)= (yyvsp[(1) - (3)].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[(3) - (3)].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[(3) - (3)].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[(3) - (3)].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2249:

/* Line 1455 of yacc.c  */
#line 14589 "sql_yacc.yy"
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[(1) - (1)].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[(1) - (1)].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[(1) - (1)].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2250:

/* Line 1455 of yacc.c  */
#line 14609 "sql_yacc.yy"
    {
            size_t length= (yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start;

            if ((yyvsp[(3) - (3)].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[(1) - (3)].item);
            (yyval.load_set_element).set_expr= (yyvsp[(3) - (3)].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[(2) - (3)]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2251:

/* Line 1455 of yacc.c  */
#line 14627 "sql_yacc.yy"
    { (yyval.is_not_empty) = false; }
    break;

  case 2252:

/* Line 1455 of yacc.c  */
#line 14628 "sql_yacc.yy"
    { (yyval.is_not_empty) = true; }
    break;

  case 2253:

/* Line 1455 of yacc.c  */
#line 14635 "sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lexer.lex_str));
          }
    break;

  case 2254:

/* Line 1455 of yacc.c  */
#line 14640 "sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 2255:

/* Line 1455 of yacc.c  */
#line 14646 "sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].lexer.charset), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 2256:

/* Line 1455 of yacc.c  */
#line 14651 "sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 2257:

/* Line 1455 of yacc.c  */
#line 14659 "sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2258:

/* Line 1455 of yacc.c  */
#line 14666 "sql_yacc.yy"
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2259:

/* Line 1455 of yacc.c  */
#line 14673 "sql_yacc.yy"
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2260:

/* Line 1455 of yacc.c  */
#line 14683 "sql_yacc.yy"
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
    break;

  case 2262:

/* Line 1455 of yacc.c  */
#line 14702 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item_num); }
    break;

  case 2263:

/* Line 1455 of yacc.c  */
#line 14704 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 2266:

/* Line 1455 of yacc.c  */
#line 14719 "sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
    break;

  case 2267:

/* Line 1455 of yacc.c  */
#line 14733 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 2268:

/* Line 1455 of yacc.c  */
#line 14734 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item_num); }
    break;

  case 2270:

/* Line 1455 of yacc.c  */
#line 14737 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
    break;

  case 2271:

/* Line 1455 of yacc.c  */
#line 14741 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
    break;

  case 2272:

/* Line 1455 of yacc.c  */
#line 14745 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lexer.lex_str));
          }
    break;

  case 2273:

/* Line 1455 of yacc.c  */
#line 14749 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lexer.lex_str));
          }
    break;

  case 2274:

/* Line 1455 of yacc.c  */
#line 14753 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].lexer.charset), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 2275:

/* Line 1455 of yacc.c  */
#line 14757 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].lexer.charset), (yyvsp[(2) - (2)].lexer.lex_str));
          }
    break;

  case 2279:

/* Line 1455 of yacc.c  */
#line 14770 "sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, YYCSCL);
          }
    break;

  case 2280:

/* Line 1455 of yacc.c  */
#line 14774 "sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length);
          }
    break;

  case 2281:

/* Line 1455 of yacc.c  */
#line 14784 "sql_yacc.yy"
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lexer.lex_str)); }
    break;

  case 2282:

/* Line 1455 of yacc.c  */
#line 14785 "sql_yacc.yy"
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lexer.lex_str)); }
    break;

  case 2283:

/* Line 1455 of yacc.c  */
#line 14786 "sql_yacc.yy"
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length); }
    break;

  case 2284:

/* Line 1455 of yacc.c  */
#line 14792 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 2285:

/* Line 1455 of yacc.c  */
#line 14796 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 2286:

/* Line 1455 of yacc.c  */
#line 14800 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 2287:

/* Line 1455 of yacc.c  */
#line 14806 "sql_yacc.yy"
    { (yyval.is_not_empty) = false; }
    break;

  case 2288:

/* Line 1455 of yacc.c  */
#line 14807 "sql_yacc.yy"
    { (yyval.is_not_empty) = true; }
    break;

  case 2290:

/* Line 1455 of yacc.c  */
#line 14821 "sql_yacc.yy"
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[(1) - (3)].lexer.lex_str).str);
          }
    break;

  case 2291:

/* Line 1455 of yacc.c  */
#line 14825 "sql_yacc.yy"
    {
            if (check_and_convert_db_name(&(yyvsp[(1) - (5)].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[(1) - (5)].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[(3) - (5)].lexer.lex_str).str);
          }
    break;

  case 2292:

/* Line 1455 of yacc.c  */
#line 14835 "sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].order_direction));
          }
    break;

  case 2293:

/* Line 1455 of yacc.c  */
#line 14842 "sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (1)].item), ORDER_NOT_RELEVANT);
          }
    break;

  case 2294:

/* Line 1455 of yacc.c  */
#line 14849 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)));
          }
    break;

  case 2296:

/* Line 1455 of yacc.c  */
#line 14857 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lexer.lex_str));
          }
    break;

  case 2298:

/* Line 1455 of yacc.c  */
#line 14865 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lexer.lex_str).str, (yyvsp[(3) - (3)].lexer.lex_str).str);
          }
    break;

  case 2299:

/* Line 1455 of yacc.c  */
#line 14869 "sql_yacc.yy"
    {
            if (check_and_convert_db_name(&(yyvsp[(1) - (5)].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lexer.lex_str).str, (yyvsp[(3) - (5)].lexer.lex_str).str, (yyvsp[(5) - (5)].lexer.lex_str).str);
          }
    break;

  case 2300:

/* Line 1455 of yacc.c  */
#line 14878 "sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2301:

/* Line 1455 of yacc.c  */
#line 14884 "sql_yacc.yy"
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[(1) - (3)].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2302:

/* Line 1455 of yacc.c  */
#line 14895 "sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2303:

/* Line 1455 of yacc.c  */
#line 14901 "sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[(1) - (4)].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2304:

/* Line 1455 of yacc.c  */
#line 14911 "sql_yacc.yy"
    { (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str); }
    break;

  case 2305:

/* Line 1455 of yacc.c  */
#line 14913 "sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lexer.lex_str).str,
                                                     (yyvsp[(1) - (1)].lexer.lex_str).str+(yyvsp[(1) - (1)].lexer.lex_str).length,
                                                     (yyvsp[(1) - (1)].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2306:

/* Line 1455 of yacc.c  */
#line 14943 "sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2307:

/* Line 1455 of yacc.c  */
#line 14956 "sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2308:

/* Line 1455 of yacc.c  */
#line 14969 "sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2309:

/* Line 1455 of yacc.c  */
#line 14985 "sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2310:

/* Line 1455 of yacc.c  */
#line 15001 "sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2313:

/* Line 1455 of yacc.c  */
#line 15023 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length));
          }
    break;

  case 2314:

/* Line 1455 of yacc.c  */
#line 15030 "sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[(1) - (1)].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2315:

/* Line 1455 of yacc.c  */
#line 15045 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(1) - (1)].lexer.lex_str); }
    break;

  case 2316:

/* Line 1455 of yacc.c  */
#line 15047 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[(1) - (1)].lexer.keyword).str, (yyvsp[(1) - (1)].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[(1) - (1)].lexer.keyword).length;
          }
    break;

  case 2318:

/* Line 1455 of yacc.c  */
#line 15059 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[(1) - (1)].lexer.keyword).str, (yyvsp[(1) - (1)].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[(1) - (1)].lexer.keyword).length;
          }
    break;

  case 2319:

/* Line 1455 of yacc.c  */
#line 15068 "sql_yacc.yy"
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)); }
    break;

  case 2320:

/* Line 1455 of yacc.c  */
#line 15070 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[(1) - (1)].lexer.keyword).str, (yyvsp[(1) - (1)].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[(1) - (1)].lexer.keyword).length;
          }
    break;

  case 2322:

/* Line 1455 of yacc.c  */
#line 15082 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[(1) - (1)].lexer.keyword).str, (yyvsp[(1) - (1)].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[(1) - (1)].lexer.keyword).length;
          }
    break;

  case 2323:

/* Line 1455 of yacc.c  */
#line 15091 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(1) - (1)].lexer.lex_str);}
    break;

  case 2324:

/* Line 1455 of yacc.c  */
#line 15092 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(1) - (1)].lexer.lex_str);}
    break;

  case 2325:

/* Line 1455 of yacc.c  */
#line 15093 "sql_yacc.yy"
    { (yyval.lexer.lex_str)=(yyvsp[(1) - (1)].lexer.lex_str);}
    break;

  case 2329:

/* Line 1455 of yacc.c  */
#line 15104 "sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (1)].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 2330:

/* Line 1455 of yacc.c  */
#line 15109 "sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (3)].lexer.lex_str), &(yyvsp[(3) - (3)].lexer.lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 2331:

/* Line 1455 of yacc.c  */
#line 15117 "sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (1)].lex_user);
          }
    break;

  case 2332:

/* Line 1455 of yacc.c  */
#line 15121 "sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
    break;

  case 2333:

/* Line 1455 of yacc.c  */
#line 15134 "sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (1)].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 2334:

/* Line 1455 of yacc.c  */
#line 15139 "sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (3)].lexer.lex_str), &(yyvsp[(3) - (3)].lexer.lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 2335:

/* Line 1455 of yacc.c  */
#line 15147 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str) = (yyvsp[(1) - (1)].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
    break;

  case 2501:

/* Line 1455 of yacc.c  */
#line 15375 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            push_warning_printf(thd, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_IDENT,
                                ER_THD(thd, ER_WARN_DEPRECATED_IDENT), "FULL");
          }
    break;

  case 2830:

/* Line 1455 of yacc.c  */
#line 15750 "sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2831:

/* Line 1455 of yacc.c  */
#line 15759 "sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2832:

/* Line 1455 of yacc.c  */
#line 15763 "sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2833:

/* Line 1455 of yacc.c  */
#line 15767 "sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2834:

/* Line 1455 of yacc.c  */
#line 15771 "sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (5)].lexer.lex_str).str, (yyvsp[(4) - (5)].lex_cstr).str,
                                                                (yyvsp[(5) - (5)].is_not_empty),
                                                                false,
                                                                (yylsp[(4) - (5)]));
          }
    break;

  case 2835:

/* Line 1455 of yacc.c  */
#line 15778 "sql_yacc.yy"
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (5)].lexer.keyword).str, (yyvsp[(4) - (5)].lex_cstr).str,
                                                                (yyvsp[(5) - (5)].is_not_empty),
                                                                true,
                                                                (yylsp[(4) - (5)]));
          }
    break;

  case 2836:

/* Line 1455 of yacc.c  */
#line 15786 "sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (7)].lex_user), (yyvsp[(5) - (7)].lexer.lex_str).str,
                                                                    (yyvsp[(6) - (7)].lex_cstr).str,
                                                                    (yyvsp[(7) - (7)].is_not_empty),
                                                                    false,
                                                                    (yylsp[(6) - (7)]));
          }
    break;

  case 2837:

/* Line 1455 of yacc.c  */
#line 15794 "sql_yacc.yy"
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (7)].lex_user), (yyvsp[(5) - (7)].lexer.keyword).str,
                                                                    (yyvsp[(6) - (7)].lex_cstr).str,
                                                                    (yyvsp[(7) - (7)].is_not_empty),
                                                                    true,
                                                                    (yylsp[(6) - (7)]));
          }
    break;

  case 2838:

/* Line 1455 of yacc.c  */
#line 15806 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[(3) - (3)].user_list));
          }
    break;

  case 2839:

/* Line 1455 of yacc.c  */
#line 15810 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2840:

/* Line 1455 of yacc.c  */
#line 15815 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2841:

/* Line 1455 of yacc.c  */
#line 15820 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), (yyvsp[(4) - (6)].user_list),
                                                    role_enum::ROLE_NAME);
          }
    break;

  case 2842:

/* Line 1455 of yacc.c  */
#line 15825 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
    break;

  case 2843:

/* Line 1455 of yacc.c  */
#line 15830 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
    break;

  case 2844:

/* Line 1455 of yacc.c  */
#line 15835 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[(4) - (4)].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2845:

/* Line 1455 of yacc.c  */
#line 15842 "sql_yacc.yy"
    { (yyval.user_list)= NULL; }
    break;

  case 2846:

/* Line 1455 of yacc.c  */
#line 15843 "sql_yacc.yy"
    { (yyval.user_list)= (yyvsp[(2) - (2)].user_list); }
    break;

  case 2847:

/* Line 1455 of yacc.c  */
#line 15848 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[(4) - (4)].lexer.lex_str)), nullptr);
          }
    break;

  case 2848:

/* Line 1455 of yacc.c  */
#line 15852 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[(4) - (6)].lexer.lex_str)), (yyvsp[(6) - (6)].thread_id_list_type));
          }
    break;

  case 2849:

/* Line 1455 of yacc.c  */
#line 15859 "sql_yacc.yy"
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[(1) - (1)].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2850:

/* Line 1455 of yacc.c  */
#line 15865 "sql_yacc.yy"
    {
            (yyval.thread_id_list_type)= (yyvsp[(1) - (3)].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[(3) - (3)].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2851:

/* Line 1455 of yacc.c  */
#line 15873 "sql_yacc.yy"
    { (yyval.thread_id_list_type)= (yyvsp[(1) - (1)].thread_id_list_type); }
    break;

  case 2852:

/* Line 1455 of yacc.c  */
#line 15879 "sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2853:

/* Line 1455 of yacc.c  */
#line 15886 "sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2854:

/* Line 1455 of yacc.c  */
#line 15895 "sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2855:

/* Line 1455 of yacc.c  */
#line 15896 "sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2856:

/* Line 1455 of yacc.c  */
#line 15902 "sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2857:

/* Line 1455 of yacc.c  */
#line 15906 "sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2858:

/* Line 1455 of yacc.c  */
#line 15914 "sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2859:

/* Line 1455 of yacc.c  */
#line 15917 "sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2860:

/* Line 1455 of yacc.c  */
#line 15921 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2861:

/* Line 1455 of yacc.c  */
#line 15922 "sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2862:

/* Line 1455 of yacc.c  */
#line 15923 "sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
    break;

  case 2863:

/* Line 1455 of yacc.c  */
#line 15924 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2864:

/* Line 1455 of yacc.c  */
#line 15925 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2865:

/* Line 1455 of yacc.c  */
#line 15929 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2866:

/* Line 1455 of yacc.c  */
#line 15930 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2867:

/* Line 1455 of yacc.c  */
#line 15931 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2868:

/* Line 1455 of yacc.c  */
#line 15932 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2869:

/* Line 1455 of yacc.c  */
#line 15936 "sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2870:

/* Line 1455 of yacc.c  */
#line 15937 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2871:

/* Line 1455 of yacc.c  */
#line 15938 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2872:

/* Line 1455 of yacc.c  */
#line 15939 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2873:

/* Line 1455 of yacc.c  */
#line 15943 "sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2874:

/* Line 1455 of yacc.c  */
#line 15944 "sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2875:

/* Line 1455 of yacc.c  */
#line 15945 "sql_yacc.yy"
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
    break;

  case 2876:

/* Line 1455 of yacc.c  */
#line 15946 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2877:

/* Line 1455 of yacc.c  */
#line 15947 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2878:

/* Line 1455 of yacc.c  */
#line 15948 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2879:

/* Line 1455 of yacc.c  */
#line 15954 "sql_yacc.yy"
    {
            (yyval.option_value_following_option_type) = NEW_PTN PT_set_scoped_system_variable(
                (yylsp[(1) - (3)]), (yyvsp[(1) - (3)].bipartite_name).prefix, (yyvsp[(1) - (3)].bipartite_name).name, (yyvsp[(3) - (3)].item));
          }
    break;

  case 2880:

/* Line 1455 of yacc.c  */
#line 15963 "sql_yacc.yy"
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_variable((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].bipartite_name).prefix, (yyvsp[(1) - (3)].bipartite_name).name, (yylsp[(3) - (3)]), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2881:

/* Line 1455 of yacc.c  */
#line 15967 "sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lexer.lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2882:

/* Line 1455 of yacc.c  */
#line 15972 "sql_yacc.yy"
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_system_variable(
                (yyvsp[(3) - (6)].var_type), (yylsp[(4) - (6)]), (yyvsp[(4) - (6)].bipartite_name).prefix, (yyvsp[(4) - (6)].bipartite_name).name, (yyvsp[(6) - (6)].item));
          }
    break;

  case 2883:

/* Line 1455 of yacc.c  */
#line 15977 "sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].lexer.charset));
          }
    break;

  case 2884:

/* Line 1455 of yacc.c  */
#line 15981 "sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2885:

/* Line 1455 of yacc.c  */
#line 15988 "sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[(2) - (3)].lexer.charset), (yyvsp[(3) - (3)].lexer.charset));
          }
    break;

  case 2886:

/* Line 1455 of yacc.c  */
#line 15992 "sql_yacc.yy"
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
    break;

  case 2887:

/* Line 1455 of yacc.c  */
#line 15999 "sql_yacc.yy"
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str))};
          }
    break;

  case 2888:

/* Line 1455 of yacc.c  */
#line 16003 "sql_yacc.yy"
    {
            /*
              Reject names prefixed by `GLOBAL.`, `LOCAL.`, or `SESSION.` --
              if one of those prefixes is there then we are parsing something
              like `GLOBAL.GLOBAL.foo` or `LOCAL.SESSION.bar` etc.
            */
            if (check_reserved_words((yyvsp[(1) - (3)].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[(1) - (3)]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[(1) - (3)].lexer.lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str))};
          }
    break;

  case 2889:

/* Line 1455 of yacc.c  */
#line 16016 "sql_yacc.yy"
    {
            (yyval.bipartite_name) = Bipartite_name{{STRING_WITH_LEN("default")}, to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str))};
          }
    break;

  case 2890:

/* Line 1455 of yacc.c  */
#line 16023 "sql_yacc.yy"
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str))};
          }
    break;

  case 2891:

/* Line 1455 of yacc.c  */
#line 16027 "sql_yacc.yy"
    {
            // disallow "SELECT @@global.global.variable"
            if (check_reserved_words((yyvsp[(1) - (3)].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[(1) - (3)]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[(1) - (3)].lexer.lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str))};
          }
    break;

  case 2892:

/* Line 1455 of yacc.c  */
#line 16039 "sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2893:

/* Line 1455 of yacc.c  */
#line 16043 "sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2894:

/* Line 1455 of yacc.c  */
#line 16050 "sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2895:

/* Line 1455 of yacc.c  */
#line 16056 "sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2896:

/* Line 1455 of yacc.c  */
#line 16057 "sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2897:

/* Line 1455 of yacc.c  */
#line 16062 "sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2898:

/* Line 1455 of yacc.c  */
#line 16068 "sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2899:

/* Line 1455 of yacc.c  */
#line 16069 "sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2900:

/* Line 1455 of yacc.c  */
#line 16073 "sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2901:

/* Line 1455 of yacc.c  */
#line 16074 "sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2902:

/* Line 1455 of yacc.c  */
#line 16078 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2903:

/* Line 1455 of yacc.c  */
#line 16079 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2904:

/* Line 1455 of yacc.c  */
#line 16080 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2905:

/* Line 1455 of yacc.c  */
#line 16081 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2907:

/* Line 1455 of yacc.c  */
#line 16086 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2908:

/* Line 1455 of yacc.c  */
#line 16088 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
    break;

  case 2909:

/* Line 1455 of yacc.c  */
#line 16092 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2910:

/* Line 1455 of yacc.c  */
#line 16096 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2911:

/* Line 1455 of yacc.c  */
#line 16100 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
    break;

  case 2912:

/* Line 1455 of yacc.c  */
#line 16104 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
    break;

  case 2913:

/* Line 1455 of yacc.c  */
#line 16113 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2914:

/* Line 1455 of yacc.c  */
#line 16124 "sql_yacc.yy"
    {}
    break;

  case 2915:

/* Line 1455 of yacc.c  */
#line 16126 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2920:

/* Line 1455 of yacc.c  */
#line 16146 "sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2921:

/* Line 1455 of yacc.c  */
#line 16173 "sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2922:

/* Line 1455 of yacc.c  */
#line 16174 "sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2923:

/* Line 1455 of yacc.c  */
#line 16176 "sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2924:

/* Line 1455 of yacc.c  */
#line 16180 "sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2925:

/* Line 1455 of yacc.c  */
#line 16185 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2926:

/* Line 1455 of yacc.c  */
#line 16196 "sql_yacc.yy"
    {}
    break;

  case 2927:

/* Line 1455 of yacc.c  */
#line 16198 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2928:

/* Line 1455 of yacc.c  */
#line 16209 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
    break;

  case 2929:

/* Line 1455 of yacc.c  */
#line 16217 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
    break;

  case 2930:

/* Line 1455 of yacc.c  */
#line 16224 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[(3) - (3)].alter_instance_cmd);
          }
    break;

  case 2931:

/* Line 1455 of yacc.c  */
#line 16231 "sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(2) - (4)].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[(2) - (4)].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[(2) - (4)]));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2932:

/* Line 1455 of yacc.c  */
#line 16247 "sql_yacc.yy"
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
    break;

  case 2933:

/* Line 1455 of yacc.c  */
#line 16251 "sql_yacc.yy"
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
    break;

  case 2934:

/* Line 1455 of yacc.c  */
#line 16254 "sql_yacc.yy"
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[(5) - (5)].lexer.lex_str)));
          }
    break;

  case 2935:

/* Line 1455 of yacc.c  */
#line 16257 "sql_yacc.yy"
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[(5) - (9)].lexer.lex_str)));
          }
    break;

  case 2936:

/* Line 1455 of yacc.c  */
#line 16261 "sql_yacc.yy"
    {
            if (!is_identifier((yyvsp[(2) - (3)].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[(2) - (3)]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[(3) - (3)].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[(3) - (3)]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
    break;

  case 2937:

/* Line 1455 of yacc.c  */
#line 16276 "sql_yacc.yy"
    {
            if (!is_identifier((yyvsp[(2) - (3)].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[(2) - (3)]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[(3) - (3)].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[(3) - (3)]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
    break;

  case 2938:

/* Line 1455 of yacc.c  */
#line 16290 "sql_yacc.yy"
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR);
          }
    break;

  case 2939:

/* Line 1455 of yacc.c  */
#line 16301 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_cstr));
          }
    break;

  case 2940:

/* Line 1455 of yacc.c  */
#line 16305 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[(2) - (3)].lexer.lex_str)));
          }
    break;

  case 2941:

/* Line 1455 of yacc.c  */
#line 16314 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[(2) - (6)].lexer.lex_str)), (yyvsp[(4) - (6)].ha_read_mode), (yyvsp[(5) - (6)].item), (yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 2942:

/* Line 1455 of yacc.c  */
#line 16324 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[(2) - (7)].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[(4) - (7)].lexer.lex_str)), (yyvsp[(5) - (7)].ha_read_mode), (yyvsp[(6) - (7)].item), (yyvsp[(7) - (7)].limit_clause));
          }
    break;

  case 2943:

/* Line 1455 of yacc.c  */
#line 16336 "sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[(2) - (10)].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[(4) - (10)].lexer.lex_str)),
                                                    (yyvsp[(5) - (10)].ha_rkey_mode), (yyvsp[(7) - (10)].item_list2), (yyvsp[(9) - (10)].item), (yyvsp[(10) - (10)].limit_clause));
          }
    break;

  case 2944:

/* Line 1455 of yacc.c  */
#line 16344 "sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2945:

/* Line 1455 of yacc.c  */
#line 16345 "sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2946:

/* Line 1455 of yacc.c  */
#line 16349 "sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2947:

/* Line 1455 of yacc.c  */
#line 16350 "sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2948:

/* Line 1455 of yacc.c  */
#line 16351 "sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
    break;

  case 2949:

/* Line 1455 of yacc.c  */
#line 16352 "sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
    break;

  case 2950:

/* Line 1455 of yacc.c  */
#line 16356 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2951:

/* Line 1455 of yacc.c  */
#line 16357 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2952:

/* Line 1455 of yacc.c  */
#line 16358 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2953:

/* Line 1455 of yacc.c  */
#line 16359 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2954:

/* Line 1455 of yacc.c  */
#line 16360 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2955:

/* Line 1455 of yacc.c  */
#line 16367 "sql_yacc.yy"
    {
            Lex->grant_if_exists = (yyvsp[(2) - (6)].num);
            Lex->ignore_unknown_user = (yyvsp[(6) - (6)].num);
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[(3) - (6)].role_or_privilege_list), (yyvsp[(5) - (6)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 2956:

/* Line 1455 of yacc.c  */
#line 16374 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[(2) - (9)].num);
            Lex->ignore_unknown_user = (yyvsp[(9) - (9)].num);
            if (apply_privileges(YYTHD, *(yyvsp[(3) - (9)].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[(5) - (9)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(5) - (9)].acl_type));
            lex->users_list= *(yyvsp[(8) - (9)].user_list);
          }
    break;

  case 2957:

/* Line 1455 of yacc.c  */
#line 16391 "sql_yacc.yy"
    {
            Lex->grant_if_exists = (yyvsp[(2) - (4)].num);
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2958:

/* Line 1455 of yacc.c  */
#line 16397 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[(7) - (11)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(7) - (11)].acl_type));
            lex->users_list= *(yyvsp[(10) - (11)].user_list);
            lex->ignore_unknown_user = (yyvsp[(11) - (11)].num);
          }
    break;

  case 2959:

/* Line 1455 of yacc.c  */
#line 16412 "sql_yacc.yy"
    {
            Lex->grant_if_exists = (yyvsp[(2) - (10)].num);
            Lex->ignore_unknown_user = (yyvsp[(10) - (10)].num);
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[(9) - (10)].user_list);
          }
    break;

  case 2960:

/* Line 1455 of yacc.c  */
#line 16419 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[(2) - (8)].num);
            lex->ignore_unknown_user = (yyvsp[(8) - (8)].num);
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[(7) - (8)].user_list);
            lex->users_list.push_front ((yyvsp[(5) - (8)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2961:

/* Line 1455 of yacc.c  */
#line 16432 "sql_yacc.yy"
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[(2) - (5)].role_or_privilege_list), (yyvsp[(4) - (5)].user_list), (yyvsp[(5) - (5)].is_not_empty));
            MAKE_CMD(tmp);
          }
    break;

  case 2962:

/* Line 1455 of yacc.c  */
#line 16438 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[(2) - (9)].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[(4) - (9)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(4) - (9)].acl_type));
            lex->users_list= *(yyvsp[(7) - (9)].user_list);
          }
    break;

  case 2963:

/* Line 1455 of yacc.c  */
#line 16453 "sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2964:

/* Line 1455 of yacc.c  */
#line 16458 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[(6) - (11)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(6) - (11)].acl_type));
            lex->users_list= *(yyvsp[(9) - (11)].user_list);
          }
    break;

  case 2965:

/* Line 1455 of yacc.c  */
#line 16470 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[(7) - (7)].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[(6) - (7)].user_list);
            lex->users_list.push_front ((yyvsp[(4) - (7)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2966:

/* Line 1455 of yacc.c  */
#line 16482 "sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::TABLE; }
    break;

  case 2967:

/* Line 1455 of yacc.c  */
#line 16483 "sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::TABLE; }
    break;

  case 2968:

/* Line 1455 of yacc.c  */
#line 16484 "sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::FUNCTION; }
    break;

  case 2969:

/* Line 1455 of yacc.c  */
#line 16485 "sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
    break;

  case 2972:

/* Line 1455 of yacc.c  */
#line 16495 "sql_yacc.yy"
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[(1) - (1)].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2973:

/* Line 1455 of yacc.c  */
#line 16501 "sql_yacc.yy"
    {
            (yyval.role_or_privilege_list)= (yyvsp[(1) - (3)].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[(3) - (3)].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2974:

/* Line 1455 of yacc.c  */
#line 16510 "sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].lexer.lex_str));
          }
    break;

  case 2975:

/* Line 1455 of yacc.c  */
#line 16517 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].lexer.lex_str), (yyvsp[(3) - (3)].lexer.lex_str)); }
    break;

  case 2976:

/* Line 1455 of yacc.c  */
#line 16519 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SELECT_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2977:

/* Line 1455 of yacc.c  */
#line 16521 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), INSERT_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2978:

/* Line 1455 of yacc.c  */
#line 16523 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), UPDATE_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2979:

/* Line 1455 of yacc.c  */
#line 16525 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REFERENCES_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2980:

/* Line 1455 of yacc.c  */
#line 16527 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), DELETE_ACL); }
    break;

  case 2981:

/* Line 1455 of yacc.c  */
#line 16529 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), 0); }
    break;

  case 2982:

/* Line 1455 of yacc.c  */
#line 16531 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), INDEX_ACL); }
    break;

  case 2983:

/* Line 1455 of yacc.c  */
#line 16533 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), ALTER_ACL); }
    break;

  case 2984:

/* Line 1455 of yacc.c  */
#line 16535 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), CREATE_ACL); }
    break;

  case 2985:

/* Line 1455 of yacc.c  */
#line 16537 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), DROP_ACL); }
    break;

  case 2986:

/* Line 1455 of yacc.c  */
#line 16539 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), EXECUTE_ACL); }
    break;

  case 2987:

/* Line 1455 of yacc.c  */
#line 16541 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), RELOAD_ACL); }
    break;

  case 2988:

/* Line 1455 of yacc.c  */
#line 16543 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), SHUTDOWN_ACL); }
    break;

  case 2989:

/* Line 1455 of yacc.c  */
#line 16545 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), PROCESS_ACL); }
    break;

  case 2990:

/* Line 1455 of yacc.c  */
#line 16547 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), FILE_ACL); }
    break;

  case 2991:

/* Line 1455 of yacc.c  */
#line 16549 "sql_yacc.yy"
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
    break;

  case 2992:

/* Line 1455 of yacc.c  */
#line 16554 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SHOW_DB_ACL); }
    break;

  case 2993:

/* Line 1455 of yacc.c  */
#line 16556 "sql_yacc.yy"
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
    break;

  case 2994:

/* Line 1455 of yacc.c  */
#line 16570 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (3)]), CREATE_TMP_ACL); }
    break;

  case 2995:

/* Line 1455 of yacc.c  */
#line 16572 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), LOCK_TABLES_ACL); }
    break;

  case 2996:

/* Line 1455 of yacc.c  */
#line 16574 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REPL_SLAVE_ACL); }
    break;

  case 2997:

/* Line 1455 of yacc.c  */
#line 16576 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REPL_CLIENT_ACL); }
    break;

  case 2998:

/* Line 1455 of yacc.c  */
#line 16578 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_VIEW_ACL); }
    break;

  case 2999:

/* Line 1455 of yacc.c  */
#line 16580 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SHOW_VIEW_ACL); }
    break;

  case 3000:

/* Line 1455 of yacc.c  */
#line 16582 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_PROC_ACL); }
    break;

  case 3001:

/* Line 1455 of yacc.c  */
#line 16584 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), ALTER_PROC_ACL); }
    break;

  case 3002:

/* Line 1455 of yacc.c  */
#line 16586 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_USER_ACL); }
    break;

  case 3003:

/* Line 1455 of yacc.c  */
#line 16588 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), EVENT_ACL); }
    break;

  case 3004:

/* Line 1455 of yacc.c  */
#line 16590 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), TRIGGER_ACL); }
    break;

  case 3005:

/* Line 1455 of yacc.c  */
#line 16592 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_TABLESPACE_ACL); }
    break;

  case 3006:

/* Line 1455 of yacc.c  */
#line 16594 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_ROLE_ACL); }
    break;

  case 3007:

/* Line 1455 of yacc.c  */
#line 16596 "sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), DROP_ROLE_ACL); }
    break;

  case 3008:

/* Line 1455 of yacc.c  */
#line 16600 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 3009:

/* Line 1455 of yacc.c  */
#line 16601 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 3014:

/* Line 1455 of yacc.c  */
#line 16616 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lexer.lex_str).str;
          }
    break;

  case 3015:

/* Line 1455 of yacc.c  */
#line 16626 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lexer.lex_str).str;
          }
    break;

  case 3016:

/* Line 1455 of yacc.c  */
#line 16636 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lexer.lex_str).str;
          }
    break;

  case 3017:

/* Line 1455 of yacc.c  */
#line 16649 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 3018:

/* Line 1455 of yacc.c  */
#line 16663 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[(1) - (3)].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 3019:

/* Line 1455 of yacc.c  */
#line 16675 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 3020:

/* Line 1455 of yacc.c  */
#line 16687 "sql_yacc.yy"
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
    break;

  case 3021:

/* Line 1455 of yacc.c  */
#line 16699 "sql_yacc.yy"
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[(1) - (3)].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
    break;

  case 3022:

/* Line 1455 of yacc.c  */
#line 16716 "sql_yacc.yy"
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3023:

/* Line 1455 of yacc.c  */
#line 16722 "sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3024:

/* Line 1455 of yacc.c  */
#line 16731 "sql_yacc.yy"
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3025:

/* Line 1455 of yacc.c  */
#line 16737 "sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3026:

/* Line 1455 of yacc.c  */
#line 16745 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 3027:

/* Line 1455 of yacc.c  */
#line 16746 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 3028:

/* Line 1455 of yacc.c  */
#line 16750 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 3029:

/* Line 1455 of yacc.c  */
#line 16751 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 3030:

/* Line 1455 of yacc.c  */
#line 16756 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[(1) - (3)].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
    break;

  case 3031:

/* Line 1455 of yacc.c  */
#line 16766 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[(1) - (2)].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
    break;

  case 3032:

/* Line 1455 of yacc.c  */
#line 16775 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[(1) - (7)].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[(7) - (7)].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
    break;

  case 3033:

/* Line 1455 of yacc.c  */
#line 16789 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[(2) - (3)].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[(3) - (3)].lex_mfas).mfa2, (yyvsp[(3) - (3)].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 3034:

/* Line 1455 of yacc.c  */
#line 16796 "sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (3)].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[(3) - (3)].lex_mfa)->nth_factor = 1;
            (yyvsp[(3) - (3)].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[(3) - (3)].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[(2) - (3)].lex_mfa)->nth_factor = 2;
            (yyvsp[(2) - (3)].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[(2) - (3)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
    break;

  case 3035:

/* Line 1455 of yacc.c  */
#line 16810 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (2)].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[(2) - (2)].lex_mfas).mfa2, (yyvsp[(2) - (2)].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
    break;

  case 3036:

/* Line 1455 of yacc.c  */
#line 16818 "sql_yacc.yy"
    { (yyval.lex_mfas) = {}; }
    break;

  case 3037:

/* Line 1455 of yacc.c  */
#line 16820 "sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[(2) - (2)].lex_mfa), nullptr};
          }
    break;

  case 3038:

/* Line 1455 of yacc.c  */
#line 16825 "sql_yacc.yy"
    {
            (yyvsp[(2) - (4)].lex_mfa)->nth_factor = 2;
            (yyvsp[(4) - (4)].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[(2) - (4)].lex_mfa), (yyvsp[(4) - (4)].lex_mfa)};
          }
    break;

  case 3045:

/* Line 1455 of yacc.c  */
#line 16843 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 3046:

/* Line 1455 of yacc.c  */
#line 16856 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
    break;

  case 3047:

/* Line 1455 of yacc.c  */
#line 16870 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
    break;

  case 3048:

/* Line 1455 of yacc.c  */
#line 16884 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[(3) - (5)].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[(5) - (5)].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
    break;

  case 3049:

/* Line 1455 of yacc.c  */
#line 16898 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[(3) - (5)].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[(5) - (5)].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 3050:

/* Line 1455 of yacc.c  */
#line 16913 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[(3) - (6)].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 3051:

/* Line 1455 of yacc.c  */
#line 16928 "sql_yacc.yy"
    {
            (yyval.lex_mfa) = (yyvsp[(3) - (3)].lex_mfa);
            (yyvsp[(3) - (3)].lex_mfa)->passwordless = true;
            (yyvsp[(3) - (3)].lex_mfa)->nth_factor = 2;
          }
    break;

  case 3052:

/* Line 1455 of yacc.c  */
#line 16934 "sql_yacc.yy"
    {
            (yyval.lex_mfa) = (yyvsp[(3) - (3)].lex_mfa);
            (yyvsp[(3) - (3)].lex_mfa)->passwordless = true;
            (yyvsp[(3) - (3)].lex_mfa)->nth_factor = 2;
          }
    break;

  case 3053:

/* Line 1455 of yacc.c  */
#line 16940 "sql_yacc.yy"
    {
            (yyval.lex_mfa) = (yyvsp[(3) - (3)].lex_mfa);
            (yyvsp[(3) - (3)].lex_mfa)->passwordless = true;
            (yyvsp[(3) - (3)].lex_mfa)->nth_factor = 2;
          }
    break;

  case 3054:

/* Line 1455 of yacc.c  */
#line 16951 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (5)].lex_mfa);
            (yyvsp[(1) - (5)].lex_user)->current_auth = to_lex_cstring((yyvsp[(4) - (5)].lexer.lex_str));
            (yyvsp[(1) - (5)].lex_user)->uses_replace_clause = true;
            (yyvsp[(1) - (5)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (5)].lex_user)->retain_current_password = (yyvsp[(5) - (5)].is_not_empty);
          }
    break;

  case 3055:

/* Line 1455 of yacc.c  */
#line 16962 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (5)].lex_mfa);
            (yyvsp[(1) - (5)].lex_user)->current_auth = to_lex_cstring((yyvsp[(4) - (5)].lexer.lex_str));
            (yyvsp[(1) - (5)].lex_user)->uses_replace_clause = true;
            (yyvsp[(1) - (5)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (5)].lex_user)->retain_current_password = (yyvsp[(5) - (5)].is_not_empty);
          }
    break;

  case 3056:

/* Line 1455 of yacc.c  */
#line 16971 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
            (yyvsp[(1) - (3)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (3)].lex_mfa);
            (yyvsp[(1) - (3)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (3)].lex_user)->retain_current_password = (yyvsp[(3) - (3)].is_not_empty);
          }
    break;

  case 3057:

/* Line 1455 of yacc.c  */
#line 16978 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
            (yyvsp[(1) - (3)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (3)].lex_mfa);
            (yyvsp[(1) - (3)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (3)].lex_user)->retain_current_password = (yyvsp[(3) - (3)].is_not_empty);
          }
    break;

  case 3058:

/* Line 1455 of yacc.c  */
#line 16987 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (5)].lex_mfa);
            (yyvsp[(1) - (5)].lex_user)->uses_replace_clause = true;
            (yyvsp[(1) - (5)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (5)].lex_user)->retain_current_password = (yyvsp[(5) - (5)].is_not_empty);
            (yyvsp[(1) - (5)].lex_user)->current_auth = to_lex_cstring((yyvsp[(4) - (5)].lexer.lex_str));
          }
    break;

  case 3059:

/* Line 1455 of yacc.c  */
#line 16996 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (2)].lex_user);
            (yyvsp[(1) - (2)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (2)].lex_mfa);
            (yyvsp[(1) - (2)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (2)].lex_user)->retain_current_password = false;
          }
    break;

  case 3060:

/* Line 1455 of yacc.c  */
#line 17003 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
            (yyvsp[(1) - (3)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (3)].lex_mfa);
            (yyvsp[(1) - (3)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (3)].lex_user)->retain_current_password = (yyvsp[(3) - (3)].is_not_empty);
          }
    break;

  case 3061:

/* Line 1455 of yacc.c  */
#line 17010 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
            (yyvsp[(1) - (3)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (3)].lex_mfa);
            (yyvsp[(1) - (3)].lex_user)->discard_old_password = false;
            (yyvsp[(1) - (3)].lex_user)->retain_current_password = (yyvsp[(3) - (3)].is_not_empty);
          }
    break;

  case 3062:

/* Line 1455 of yacc.c  */
#line 17018 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
            (yyvsp[(1) - (3)].lex_user)->first_factor_auth_info = *(yyvsp[(2) - (3)].lex_mfa);
            (yyvsp[(1) - (3)].lex_user)->discard_old_password= false;
            (yyvsp[(1) - (3)].lex_user)->retain_current_password= (yyvsp[(3) - (3)].is_not_empty);
          }
    break;

  case 3063:

/* Line 1455 of yacc.c  */
#line 17025 "sql_yacc.yy"
    {
            (yyval.lex_user) = (yyvsp[(1) - (2)].lex_user);
            (yyvsp[(1) - (2)].lex_user)->discard_old_password = (yyvsp[(2) - (2)].is_not_empty);
            (yyvsp[(1) - (2)].lex_user)->retain_current_password = false;
          }
    break;

  case 3064:

/* Line 1455 of yacc.c  */
#line 17031 "sql_yacc.yy"
    {
            (yyvsp[(4) - (4)].lex_mfa)->nth_factor = (yyvsp[(3) - (4)].ulong_num);
            (yyvsp[(4) - (4)].lex_mfa)->add_factor = true;
            if ((yyvsp[(1) - (4)].lex_user)->add_mfa_identifications((yyvsp[(4) - (4)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[(1) - (4)].lex_user);
           }
    break;

  case 3065:

/* Line 1455 of yacc.c  */
#line 17039 "sql_yacc.yy"
    {
            if ((yyvsp[(3) - (7)].ulong_num) == (yyvsp[(6) - (7)].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[(3) - (7)].ulong_num) > (yyvsp[(6) - (7)].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[(6) - (7)].ulong_num), (yyvsp[(3) - (7)].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[(4) - (7)].lex_mfa)->nth_factor = (yyvsp[(3) - (7)].ulong_num);
            (yyvsp[(4) - (7)].lex_mfa)->add_factor = true;
            (yyvsp[(7) - (7)].lex_mfa)->nth_factor = (yyvsp[(6) - (7)].ulong_num);
            (yyvsp[(7) - (7)].lex_mfa)->add_factor = true;
            if ((yyvsp[(1) - (7)].lex_user)->add_mfa_identifications((yyvsp[(4) - (7)].lex_mfa), (yyvsp[(7) - (7)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[(1) - (7)].lex_user);
          }
    break;

  case 3066:

/* Line 1455 of yacc.c  */
#line 17056 "sql_yacc.yy"
    {
            (yyvsp[(4) - (4)].lex_mfa)->nth_factor = (yyvsp[(3) - (4)].ulong_num);
            (yyvsp[(4) - (4)].lex_mfa)->modify_factor = true;
            if ((yyvsp[(1) - (4)].lex_user)->add_mfa_identifications((yyvsp[(4) - (4)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[(1) - (4)].lex_user);
           }
    break;

  case 3067:

/* Line 1455 of yacc.c  */
#line 17064 "sql_yacc.yy"
    {
            if ((yyvsp[(3) - (7)].ulong_num) == (yyvsp[(6) - (7)].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[(4) - (7)].lex_mfa)->nth_factor = (yyvsp[(3) - (7)].ulong_num);
            (yyvsp[(4) - (7)].lex_mfa)->modify_factor = true;
            (yyvsp[(7) - (7)].lex_mfa)->nth_factor = (yyvsp[(6) - (7)].ulong_num);
            (yyvsp[(7) - (7)].lex_mfa)->modify_factor = true;
            if ((yyvsp[(1) - (7)].lex_user)->add_mfa_identifications((yyvsp[(4) - (7)].lex_mfa), (yyvsp[(7) - (7)].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[(1) - (7)].lex_user);
          }
    break;

  case 3068:

/* Line 1455 of yacc.c  */
#line 17078 "sql_yacc.yy"
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[(3) - (3)].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[(1) - (3)].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[(1) - (3)].lex_user);
           }
    break;

  case 3069:

/* Line 1455 of yacc.c  */
#line 17089 "sql_yacc.yy"
    {
            if ((yyvsp[(3) - (5)].ulong_num) == (yyvsp[(5) - (5)].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[(3) - (5)].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[(5) - (5)].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[(1) - (5)].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[(1) - (5)].lex_user);
           }
    break;

  case 3070:

/* Line 1455 of yacc.c  */
#line 17112 "sql_yacc.yy"
    {
            if (my_strcasecmp(system_charset_info, (yyvsp[(1) - (2)].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[(1) - (2)].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[(1) - (2)].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
    break;

  case 3071:

/* Line 1455 of yacc.c  */
#line 17126 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3072:

/* Line 1455 of yacc.c  */
#line 17131 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3073:

/* Line 1455 of yacc.c  */
#line 17139 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
         }
    break;

  case 3074:

/* Line 1455 of yacc.c  */
#line 17144 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 3075:

/* Line 1455 of yacc.c  */
#line 17151 "sql_yacc.yy"
    { (yyval.lex_cstring_list)= NULL; }
    break;

  case 3076:

/* Line 1455 of yacc.c  */
#line 17152 "sql_yacc.yy"
    { (yyval.lex_cstring_list)= (yyvsp[(2) - (3)].lex_cstring_list); }
    break;

  case 3077:

/* Line 1455 of yacc.c  */
#line 17157 "sql_yacc.yy"
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3078:

/* Line 1455 of yacc.c  */
#line 17163 "sql_yacc.yy"
    {
            (yyval.lex_cstring_list)= (yyvsp[(1) - (3)].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3080:

/* Line 1455 of yacc.c  */
#line 17173 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 3081:

/* Line 1455 of yacc.c  */
#line 17177 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 3082:

/* Line 1455 of yacc.c  */
#line 17181 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 3083:

/* Line 1455 of yacc.c  */
#line 17185 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 3084:

/* Line 1455 of yacc.c  */
#line 17191 "sql_yacc.yy"
    {}
    break;

  case 3085:

/* Line 1455 of yacc.c  */
#line 17193 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 3086:

/* Line 1455 of yacc.c  */
#line 17197 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 3087:

/* Line 1455 of yacc.c  */
#line 17198 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 3088:

/* Line 1455 of yacc.c  */
#line 17202 "sql_yacc.yy"
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
    break;

  case 3089:

/* Line 1455 of yacc.c  */
#line 17204 "sql_yacc.yy"
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[(3) - (3)].user_list);
          }
    break;

  case 3090:

/* Line 1455 of yacc.c  */
#line 17208 "sql_yacc.yy"
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[(4) - (4)].user_list);
          }
    break;

  case 3091:

/* Line 1455 of yacc.c  */
#line 17213 "sql_yacc.yy"
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
    break;

  case 3092:

/* Line 1455 of yacc.c  */
#line 17215 "sql_yacc.yy"
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
    break;

  case 3093:

/* Line 1455 of yacc.c  */
#line 17219 "sql_yacc.yy"
    { Lex->grant_as.grant_as_used = false; }
    break;

  case 3094:

/* Line 1455 of yacc.c  */
#line 17221 "sql_yacc.yy"
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[(2) - (3)].lex_user);
          }
    break;

  case 3095:

/* Line 1455 of yacc.c  */
#line 17228 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 3096:

/* Line 1455 of yacc.c  */
#line 17233 "sql_yacc.yy"
    {}
    break;

  case 3097:

/* Line 1455 of yacc.c  */
#line 17237 "sql_yacc.yy"
    {}
    break;

  case 3098:

/* Line 1455 of yacc.c  */
#line 17238 "sql_yacc.yy"
    {}
    break;

  case 3099:

/* Line 1455 of yacc.c  */
#line 17243 "sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 3100:

/* Line 1455 of yacc.c  */
#line 17244 "sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 3101:

/* Line 1455 of yacc.c  */
#line 17245 "sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 3102:

/* Line 1455 of yacc.c  */
#line 17250 "sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 3103:

/* Line 1455 of yacc.c  */
#line 17251 "sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 3104:

/* Line 1455 of yacc.c  */
#line 17252 "sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 3105:

/* Line 1455 of yacc.c  */
#line 17256 "sql_yacc.yy"
    {}
    break;

  case 3106:

/* Line 1455 of yacc.c  */
#line 17257 "sql_yacc.yy"
    {}
    break;

  case 3107:

/* Line 1455 of yacc.c  */
#line 17262 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 3108:

/* Line 1455 of yacc.c  */
#line 17274 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 3109:

/* Line 1455 of yacc.c  */
#line 17284 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lexer.lex_str);
          }
    break;

  case 3110:

/* Line 1455 of yacc.c  */
#line 17293 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lexer.lex_str);
          }
    break;

  case 3111:

/* Line 1455 of yacc.c  */
#line 17302 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lexer.lex_str);
          }
    break;

  case 3112:

/* Line 1455 of yacc.c  */
#line 17315 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 3113:

/* Line 1455 of yacc.c  */
#line 17316 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 3114:

/* Line 1455 of yacc.c  */
#line 17317 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 3117:

/* Line 1455 of yacc.c  */
#line 17330 "sql_yacc.yy"
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[(1) - (1)].query_expression_body));
          }
    break;

  case 3118:

/* Line 1455 of yacc.c  */
#line 17336 "sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 3119:

/* Line 1455 of yacc.c  */
#line 17337 "sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 3120:

/* Line 1455 of yacc.c  */
#line 17338 "sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 3121:

/* Line 1455 of yacc.c  */
#line 17339 "sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 3122:

/* Line 1455 of yacc.c  */
#line 17340 "sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 3123:

/* Line 1455 of yacc.c  */
#line 17341 "sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 3124:

/* Line 1455 of yacc.c  */
#line 17342 "sql_yacc.yy"
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
    break;

  case 3125:

/* Line 1455 of yacc.c  */
#line 17348 "sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 3126:

/* Line 1455 of yacc.c  */
#line 17359 "sql_yacc.yy"
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3127:

/* Line 1455 of yacc.c  */
#line 17369 "sql_yacc.yy"
    {}
    break;

  case 3128:

/* Line 1455 of yacc.c  */
#line 17371 "sql_yacc.yy"
    {}
    break;

  case 3129:

/* Line 1455 of yacc.c  */
#line 17373 "sql_yacc.yy"
    {}
    break;

  case 3143:

/* Line 1455 of yacc.c  */
#line 17406 "sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 3144:

/* Line 1455 of yacc.c  */
#line 17420 "sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 3145:

/* Line 1455 of yacc.c  */
#line 17433 "sql_yacc.yy"
    {}
    break;

  case 3146:

/* Line 1455 of yacc.c  */
#line 17435 "sql_yacc.yy"
    {}
    break;

  case 3147:

/* Line 1455 of yacc.c  */
#line 17437 "sql_yacc.yy"
    {}
    break;

  case 3148:

/* Line 1455 of yacc.c  */
#line 17442 "sql_yacc.yy"
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
    break;

  case 3149:

/* Line 1455 of yacc.c  */
#line 17447 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 3150:

/* Line 1455 of yacc.c  */
#line 17449 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 3151:

/* Line 1455 of yacc.c  */
#line 17451 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 3152:

/* Line 1455 of yacc.c  */
#line 17456 "sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 3153:

/* Line 1455 of yacc.c  */
#line 17458 "sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 3154:

/* Line 1455 of yacc.c  */
#line 17460 "sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 3155:

/* Line 1455 of yacc.c  */
#line 17465 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= Table_ref::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[(4) - (4)].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[(4) - (4)].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[(4) - (4)].simple_ident_list)), sizeof((yyvsp[(4) - (4)].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
    break;

  case 3157:

/* Line 1455 of yacc.c  */
#line 17505 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the m_table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              m_table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::m_table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<Table_ref> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->m_table_list.save_and_clear(&save_list);

            CONTEXTUALIZE_VIEW((yyvsp[(1) - (2)].query_expression_body));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->m_table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[(2) - (2)].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[(2) - (2)]).cpp.end - (yylsp[(1) - (2)]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[(1) - (2)]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
    break;

  case 3158:

/* Line 1455 of yacc.c  */
#line 17555 "sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_NONE; }
    break;

  case 3159:

/* Line 1455 of yacc.c  */
#line 17556 "sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 3160:

/* Line 1455 of yacc.c  */
#line 17557 "sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 3161:

/* Line 1455 of yacc.c  */
#line 17558 "sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_LOCAL; }
    break;

  case 3162:

/* Line 1455 of yacc.c  */
#line 17569 "sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 3163:

/* Line 1455 of yacc.c  */
#line 17571 "sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 3164:

/* Line 1455 of yacc.c  */
#line 17576 "sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
    break;

  case 3165:

/* Line 1455 of yacc.c  */
#line 17582 "sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[(2) - (2)].lexer.lex_str).str, (yyvsp[(2) - (2)].lexer.lex_str).length };
            }
    break;

  case 3166:

/* Line 1455 of yacc.c  */
#line 17600 "sql_yacc.yy"
    {                               /* $12 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[(3) - (11)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(4) - (11)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(5) - (11)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(11) - (11)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(11) - (11)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (11)]).cpp.start;
            lex->create_info->options= (yyvsp[(2) - (11)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->ident.str= const_cast<char *>((yylsp[(7) - (11)]).cpp.start);
            lex->ident.length= (yylsp[(9) - (11)]).cpp.start - (yylsp[(7) - (11)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(3) - (11)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[(11) - (11)]).cpp.end);
          }
    break;

  case 3167:

/* Line 1455 of yacc.c  */
#line 17633 "sql_yacc.yy"
    {                               /* $14 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[(7) - (13)].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
    break;

  case 3168:

/* Line 1455 of yacc.c  */
#line 17676 "sql_yacc.yy"
    {                     /* $9 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[(4) - (8)].lexer.lex_str)))
            {
              if((yyvsp[(3) - (8)].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[(4) - (8)].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[(4) - (8)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (8)]).cpp.start;
            lex->create_info->options= (yyvsp[(3) - (8)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[(4) - (8)].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(6) - (8)].num);
            lex->udf.dl=(yyvsp[(8) - (8)].lexer.lex_str).str;
          }
    break;

  case 3169:

/* Line 1455 of yacc.c  */
#line 17709 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[(3) - (7)].lexer.lex_str)))
            {
              if((yyvsp[(2) - (7)].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[(3) - (7)].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[(3) - (7)].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (7)]).cpp.start;
            lex->create_info->options= (yyvsp[(2) - (7)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[(3) - (7)].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lexer.lex_str).str;
          }
    break;

  case 3170:

/* Line 1455 of yacc.c  */
#line 17742 "sql_yacc.yy"
    {                     /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (4)]).cpp.start;
            lex->spname= (yyvsp[(3) - (4)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }


            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[(2) - (4)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 3171:

/* Line 1455 of yacc.c  */
#line 17768 "sql_yacc.yy"
    {                     /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
          }
    break;

  case 3172:

/* Line 1455 of yacc.c  */
#line 17774 "sql_yacc.yy"
    {                     /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[(10) - (11)].type));
            enum_field_types field_type= (yyvsp[(10) - (11)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(10) - (11)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[(11) - (11)].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[(10) - (11)].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[(10) - (11)].type)->get_length(), (yyvsp[(10) - (11)].type)->get_dec(),
                                            (yyvsp[(10) - (11)].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[(10) - (11)].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[(11) - (11)].lexer.charset) != nullptr, (yyvsp[(10) - (11)].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 3173:

/* Line 1455 of yacc.c  */
#line 17815 "sql_yacc.yy"
    {                     /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 3174:

/* Line 1455 of yacc.c  */
#line 17823 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 3175:

/* Line 1455 of yacc.c  */
#line 17883 "sql_yacc.yy"
    {                     /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[(3) - (3)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[(2) - (3)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 3176:

/* Line 1455 of yacc.c  */
#line 17904 "sql_yacc.yy"
    {                     /*$6*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(5) - (5)]).cpp.end);
          }
    break;

  case 3177:

/* Line 1455 of yacc.c  */
#line 17909 "sql_yacc.yy"
    {                     /*$9*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(8) - (8)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 3178:

/* Line 1455 of yacc.c  */
#line 17917 "sql_yacc.yy"
    {                     /*$11*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 3179:

/* Line 1455 of yacc.c  */
#line 17925 "sql_yacc.yy"
    {                     /*$13*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 3180:

/* Line 1455 of yacc.c  */
#line 17939 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 3181:

/* Line 1455 of yacc.c  */
#line 17944 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 3182:

/* Line 1455 of yacc.c  */
#line 17949 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 3183:

/* Line 1455 of yacc.c  */
#line 17954 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 3184:

/* Line 1455 of yacc.c  */
#line 17959 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 3185:

/* Line 1455 of yacc.c  */
#line 17964 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 3186:

/* Line 1455 of yacc.c  */
#line 17971 "sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 3187:

/* Line 1455 of yacc.c  */
#line 17972 "sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 3188:

/* Line 1455 of yacc.c  */
#line 17976 "sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 3189:

/* Line 1455 of yacc.c  */
#line 17985 "sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 3190:

/* Line 1455 of yacc.c  */
#line 17995 "sql_yacc.yy"
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 3191:

/* Line 1455 of yacc.c  */
#line 18012 "sql_yacc.yy"
    {}
    break;

  case 3192:

/* Line 1455 of yacc.c  */
#line 18013 "sql_yacc.yy"
    {}
    break;

  case 3193:

/* Line 1455 of yacc.c  */
#line 18017 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 3194:

/* Line 1455 of yacc.c  */
#line 18018 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 3195:

/* Line 1455 of yacc.c  */
#line 18019 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 3196:

/* Line 1455 of yacc.c  */
#line 18023 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 3197:

/* Line 1455 of yacc.c  */
#line 18024 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 3198:

/* Line 1455 of yacc.c  */
#line 18029 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 3199:

/* Line 1455 of yacc.c  */
#line 18031 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 3200:

/* Line 1455 of yacc.c  */
#line 18033 "sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 3201:

/* Line 1455 of yacc.c  */
#line 18037 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 3202:

/* Line 1455 of yacc.c  */
#line 18038 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 3203:

/* Line 1455 of yacc.c  */
#line 18039 "sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 3205:

/* Line 1455 of yacc.c  */
#line 18045 "sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
    break;

  case 3206:

/* Line 1455 of yacc.c  */
#line 18052 "sql_yacc.yy"
    {
          (yyval.install_component_set_element) = NEW_PTN PT_install_component_set_element {(yyvsp[(1) - (4)].var_type), (yyvsp[(2) - (4)].bipartite_name), (yyvsp[(4) - (4)].item)};
        }
    break;

  case 3207:

/* Line 1455 of yacc.c  */
#line 18059 "sql_yacc.yy"
    {
            (yyval.install_component_set_list) = NEW_PTN List<PT_install_component_set_element>;
            if (!(yyval.install_component_set_list))
              MYSQL_YYABORT; // OOM
            if ((yyval.install_component_set_list)->push_back((yyvsp[(1) - (1)].install_component_set_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3208:

/* Line 1455 of yacc.c  */
#line 18067 "sql_yacc.yy"
    {
            (yyval.install_component_set_list) = (yyvsp[(1) - (3)].install_component_set_list);
            if ((yyval.install_component_set_list)->push_back((yyvsp[(3) - (3)].install_component_set_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3209:

/* Line 1455 of yacc.c  */
#line 18076 "sql_yacc.yy"
    {
            (yyval.install_component_set_list) = NEW_PTN List<PT_install_component_set_element>;
          }
    break;

  case 3210:

/* Line 1455 of yacc.c  */
#line 18079 "sql_yacc.yy"
    { (yyval.install_component_set_list) = (yyvsp[(2) - (2)].install_component_set_list); }
    break;

  case 3211:

/* Line 1455 of yacc.c  */
#line 18084 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[(3) - (5)].lexer.lex_str)), (yyvsp[(5) - (5)].lexer.lex_str));
            (yyval.top_level_node) = nullptr;
          }
    break;

  case 3212:

/* Line 1455 of yacc.c  */
#line 18091 "sql_yacc.yy"
    {
            (yyval.top_level_node) = NEW_PTN PT_install_component(YYTHD, (yyvsp[(3) - (4)].lex_str_list), (yyvsp[(4) - (4)].install_component_set_list));
          }
    break;

  case 3213:

/* Line 1455 of yacc.c  */
#line 18098 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[(3) - (3)].lexer.lex_str)));
          }
    break;

  case 3214:

/* Line 1455 of yacc.c  */
#line 18104 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 3215:

/* Line 1455 of yacc.c  */
#line 18113 "sql_yacc.yy"
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[(1) - (1)].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3216:

/* Line 1455 of yacc.c  */
#line 18119 "sql_yacc.yy"
    {
            (yyval.lex_str_list)= (yyvsp[(1) - (3)].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[(3) - (3)].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 3217:

/* Line 1455 of yacc.c  */
#line 18128 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[(4) - (4)].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
    break;

  case 3218:

/* Line 1455 of yacc.c  */
#line 18146 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[(6) - (6)].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 3219:

/* Line 1455 of yacc.c  */
#line 18156 "sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[(6) - (10)]).raw.start - (yylsp[(4) - (10)]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[(5) - (10)]));
              MYSQL_YYABORT;
            }
            (yyvsp[(4) - (10)].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[(9) - (10)].lexer.lex_str));
            (yyvsp[(4) - (10)].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[(4) - (10)].lex_user), (yyvsp[(6) - (10)].ulong_num), to_lex_cstring((yyvsp[(10) - (10)].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 3220:

/* Line 1455 of yacc.c  */
#line 18176 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
    break;

  case 3221:

/* Line 1455 of yacc.c  */
#line 18180 "sql_yacc.yy"
    {
            (yyval.lexer.lex_str)= (yyvsp[(4) - (5)].lexer.lex_str);
          }
    break;

  case 3222:

/* Line 1455 of yacc.c  */
#line 18187 "sql_yacc.yy"
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
    break;

  case 3223:

/* Line 1455 of yacc.c  */
#line 18191 "sql_yacc.yy"
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
    break;

  case 3224:

/* Line 1455 of yacc.c  */
#line 18195 "sql_yacc.yy"
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
    break;

  case 3225:

/* Line 1455 of yacc.c  */
#line 18201 "sql_yacc.yy"
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
    break;

  case 3226:

/* Line 1455 of yacc.c  */
#line 18202 "sql_yacc.yy"
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
    break;

  case 3227:

/* Line 1455 of yacc.c  */
#line 18207 "sql_yacc.yy"
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 3228:

/* Line 1455 of yacc.c  */
#line 18213 "sql_yacc.yy"
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[(3) - (3)].resource_group_vcpu_list_type); }
    break;

  case 3229:

/* Line 1455 of yacc.c  */
#line 18218 "sql_yacc.yy"
    {
            resourcegroups::Range r((yyvsp[(1) - (1)].vcpu_range_type).start, (yyvsp[(1) - (1)].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
    break;

  case 3230:

/* Line 1455 of yacc.c  */
#line 18225 "sql_yacc.yy"
    {
            resourcegroups::Range r((yyvsp[(3) - (3)].vcpu_range_type).start, (yyvsp[(3) - (3)].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[(1) - (3)].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
    break;

  case 3231:

/* Line 1455 of yacc.c  */
#line 18235 "sql_yacc.yy"
    {
            auto cpu_id= my_strtoull((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
    break;

  case 3232:

/* Line 1455 of yacc.c  */
#line 18242 "sql_yacc.yy"
    {
            auto start= my_strtoull((yyvsp[(1) - (3)].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[(3) - (3)].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
    break;

  case 3233:

/* Line 1455 of yacc.c  */
#line 18254 "sql_yacc.yy"
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[(1) - (1)].lexer.lex_str).str, nullptr, 10)); }
    break;

  case 3234:

/* Line 1455 of yacc.c  */
#line 18255 "sql_yacc.yy"
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[(2) - (2)].lexer.lex_str).str, nullptr, 10)); }
    break;

  case 3235:

/* Line 1455 of yacc.c  */
#line 18259 "sql_yacc.yy"
    { (yyval.resource_group_priority_type).is_default= true; }
    break;

  case 3236:

/* Line 1455 of yacc.c  */
#line 18261 "sql_yacc.yy"
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[(3) - (3)].num);
          }
    break;

  case 3237:

/* Line 1455 of yacc.c  */
#line 18268 "sql_yacc.yy"
    { (yyval.resource_group_state_type).is_default= true; }
    break;

  case 3238:

/* Line 1455 of yacc.c  */
#line 18270 "sql_yacc.yy"
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
    break;

  case 3239:

/* Line 1455 of yacc.c  */
#line 18275 "sql_yacc.yy"
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
    break;

  case 3240:

/* Line 1455 of yacc.c  */
#line 18282 "sql_yacc.yy"
    { (yyval.resource_group_flag_type)= false; }
    break;

  case 3241:

/* Line 1455 of yacc.c  */
#line 18283 "sql_yacc.yy"
    { (yyval.resource_group_flag_type)= true; }
    break;

  case 3242:

/* Line 1455 of yacc.c  */
#line 18289 "sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[(1) - (1)].lexer.lex_str).str, (yyvsp[(1) - (1)].lexer.lex_str).length, &eoff, &emsg,
                  JsonDocumentDefaultDepthHandler)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[(1) - (1)].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[(1) - (1)].lexer.lex_str));
          }
    break;



/* Line 1455 of yacc.c  */
#line 50184 "y.tab.c"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, YYTHD, parse_tree, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined(yyoverflow) || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, YYTHD, parse_tree);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



